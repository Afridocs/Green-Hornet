0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/bin/node',
1 verbose cli   '/usr/local/bin/npm',
1 verbose cli   'install',
1 verbose cli   'restify' ]
2 info using npm@1.2.14
3 info using node@v0.10.0
4 verbose node symlink /usr/local/bin/node
5 verbose read json /home/vagrant/app/package.json
6 verbose read json /home/vagrant/app/node_modules/backoff/package.json
7 verbose read json /home/vagrant/app/node_modules/dtrace-provider/package.json
8 verbose read json /home/vagrant/app/node_modules/express/package.json
9 verbose read json /home/vagrant/app/node_modules/http-signature/package.json
10 verbose read json /home/vagrant/app/node_modules/jade/package.json
11 verbose read json /home/vagrant/app/node_modules/mongoose/package.json
12 verbose read json /home/vagrant/app/node_modules/redis/package.json
13 verbose read json /home/vagrant/app/node_modules/restify/package.json
14 verbose read json /home/vagrant/app/node_modules/ursa/package.json
15 verbose from cache /home/vagrant/app/package.json
16 verbose readDependencies using package.json deps
17 verbose cache add [ 'restify', null ]
18 verbose cache add name=undefined spec="restify" args=["restify",null]
19 verbose parsed url { protocol: null,
19 verbose parsed url   slashes: null,
19 verbose parsed url   auth: null,
19 verbose parsed url   host: null,
19 verbose parsed url   port: null,
19 verbose parsed url   hostname: null,
19 verbose parsed url   hash: null,
19 verbose parsed url   search: null,
19 verbose parsed url   query: null,
19 verbose parsed url   pathname: 'restify',
19 verbose parsed url   path: 'restify',
19 verbose parsed url   href: 'restify' }
20 silly lockFile 5ea7009a-restify restify
21 verbose lock restify /home/vagrant/.npm/5ea7009a-restify.lock
22 silly lockFile 5ea7009a-restify restify
23 silly lockFile 5ea7009a-restify restify
24 verbose addNamed [ 'restify', '' ]
25 verbose addNamed [ null, '' ]
26 silly lockFile eccf5eaf-restify restify@
27 verbose lock restify@ /home/vagrant/.npm/eccf5eaf-restify.lock
28 silly addNameRange { name: 'restify', range: '', hasData: false }
29 verbose url raw restify
30 verbose url resolving [ 'https://registry.npmjs.org/', './restify' ]
31 verbose url resolved https://registry.npmjs.org/restify
32 info trying registry request attempt 1 at 14:24:57
33 verbose etag "EYCS3AW5BQ42HT3AYQIH4LVFE"
34 http GET https://registry.npmjs.org/restify
35 http 304 https://registry.npmjs.org/restify
36 silly registry.get cb [ 304,
36 silly registry.get   { server: 'CouchDB/1.3.1 (Erlang OTP/R15B03)',
36 silly registry.get     etag: '"EYCS3AW5BQ42HT3AYQIH4LVFE"',
36 silly registry.get     date: 'Mon, 28 Oct 2013 14:24:59 GMT',
36 silly registry.get     'content-length': '0' } ]
37 verbose etag restify from cache
38 silly addNameRange number 2 { name: 'restify', range: '', hasData: true }
39 silly addNameRange versions [ 'restify',
39 silly addNameRange   [ '0.1.0',
39 silly addNameRange     '0.1.1',
39 silly addNameRange     '0.1.2',
39 silly addNameRange     '0.1.4',
39 silly addNameRange     '0.1.5',
39 silly addNameRange     '0.1.6',
39 silly addNameRange     '0.1.7',
39 silly addNameRange     '0.1.8',
39 silly addNameRange     '0.1.9',
39 silly addNameRange     '0.1.10',
39 silly addNameRange     '0.1.11',
39 silly addNameRange     '0.1.12',
39 silly addNameRange     '0.1.13',
39 silly addNameRange     '0.1.14',
39 silly addNameRange     '0.1.15',
39 silly addNameRange     '0.1.16',
39 silly addNameRange     '0.1.17',
39 silly addNameRange     '0.1.18',
39 silly addNameRange     '0.1.19',
39 silly addNameRange     '0.1.20',
39 silly addNameRange     '0.1.21',
39 silly addNameRange     '0.1.22',
39 silly addNameRange     '0.1.23',
39 silly addNameRange     '0.2.0',
39 silly addNameRange     '0.2.1',
39 silly addNameRange     '0.2.2',
39 silly addNameRange     '0.2.3',
39 silly addNameRange     '0.2.4',
39 silly addNameRange     '0.2.5',
39 silly addNameRange     '0.2.6',
39 silly addNameRange     '0.2.7',
39 silly addNameRange     '0.2.8',
39 silly addNameRange     '0.2.9',
39 silly addNameRange     '0.2.10',
39 silly addNameRange     '0.2.11',
39 silly addNameRange     '0.2.12',
39 silly addNameRange     '0.2.13',
39 silly addNameRange     '0.3.0',
39 silly addNameRange     '0.3.1',
39 silly addNameRange     '0.3.2-pre1',
39 silly addNameRange     '0.3.2',
39 silly addNameRange     '0.3.3',
39 silly addNameRange     '0.3.4',
39 silly addNameRange     '0.3.5',
39 silly addNameRange     '0.3.6',
39 silly addNameRange     '0.3.7',
39 silly addNameRange     '0.3.8',
39 silly addNameRange     '0.3.9',
39 silly addNameRange     '0.3.10',
39 silly addNameRange     '0.3.11',
39 silly addNameRange     '0.3.12',
39 silly addNameRange     '0.3.14',
39 silly addNameRange     '0.3.15',
39 silly addNameRange     '0.4.0',
39 silly addNameRange     '0.4.1',
39 silly addNameRange     '0.4.2',
39 silly addNameRange     '0.4.3',
39 silly addNameRange     '0.4.4',
39 silly addNameRange     '0.5.0',
39 silly addNameRange     '0.5.1',
39 silly addNameRange     '0.5.3',
39 silly addNameRange     '0.5.4',
39 silly addNameRange     '0.5.5',
39 silly addNameRange     '0.5.6',
39 silly addNameRange     '1.0.0-1-rc',
39 silly addNameRange     '1.0.0-1-rc2',
39 silly addNameRange     '0.5.7',
39 silly addNameRange     '1.0.0',
39 silly addNameRange     '1.0.1',
39 silly addNameRange     '1.1.0',
39 silly addNameRange     '1.1.1',
39 silly addNameRange     '1.2.0',
39 silly addNameRange     '1.3.0',
39 silly addNameRange     '1.4.0',
39 silly addNameRange     '1.4.1',
39 silly addNameRange     '1.4.2',
39 silly addNameRange     '1.4.3',
39 silly addNameRange     '1.4.4',
39 silly addNameRange     '2.0.0',
39 silly addNameRange     '2.0.1',
39 silly addNameRange     '2.0.2',
39 silly addNameRange     '2.0.3',
39 silly addNameRange     '2.0.4',
39 silly addNameRange     '2.1.0',
39 silly addNameRange     '2.1.1',
39 silly addNameRange     '2.2.0',
39 silly addNameRange     '2.2.1',
39 silly addNameRange     '2.3.0',
39 silly addNameRange     '2.3.1',
39 silly addNameRange     '2.3.2',
39 silly addNameRange     '2.3.3',
39 silly addNameRange     '2.3.4',
39 silly addNameRange     '2.3.5',
39 silly addNameRange     '2.4.0',
39 silly addNameRange     '2.4.1',
39 silly addNameRange     '2.5.0',
39 silly addNameRange     '2.5.1',
39 silly addNameRange     '2.6.0' ] ]
40 verbose addNamed [ 'restify', '2.6.0' ]
41 verbose addNamed [ '2.6.0', '2.6.0' ]
42 silly lockFile 60b7c064-restify-2-6-0 restify@2.6.0
43 verbose lock restify@2.6.0 /home/vagrant/.npm/60b7c064-restify-2-6-0.lock
44 verbose read json /home/vagrant/.npm/restify/2.6.0/package/package.json
45 silly lockFile 60b7c064-restify-2-6-0 restify@2.6.0
46 silly lockFile 60b7c064-restify-2-6-0 restify@2.6.0
47 silly lockFile eccf5eaf-restify restify@
48 silly lockFile eccf5eaf-restify restify@
49 silly resolved [ { author: { name: 'Mark Cavage', email: 'mcavage@gmail.com' },
49 silly resolved     contributors:
49 silly resolved      [ [Object],
49 silly resolved        [Object],
49 silly resolved        [Object],
49 silly resolved        [Object],
49 silly resolved        [Object],
49 silly resolved        [Object],
49 silly resolved        [Object],
49 silly resolved        [Object],
49 silly resolved        [Object],
49 silly resolved        [Object],
49 silly resolved        [Object],
49 silly resolved        [Object],
49 silly resolved        [Object],
49 silly resolved        [Object],
49 silly resolved        [Object],
49 silly resolved        [Object],
49 silly resolved        [Object],
49 silly resolved        [Object],
49 silly resolved        [Object],
49 silly resolved        [Object],
49 silly resolved        [Object],
49 silly resolved        [Object],
49 silly resolved        [Object],
49 silly resolved        [Object],
49 silly resolved        [Object] ],
49 silly resolved     name: 'restify',
49 silly resolved     homepage: 'http://mcavage.github.com/node-restify',
49 silly resolved     description: 'REST framework',
49 silly resolved     version: '2.6.0',
49 silly resolved     repository:
49 silly resolved      { type: 'git',
49 silly resolved        url: 'git://github.com/mcavage/node-restify.git' },
49 silly resolved     main: 'lib/index.js',
49 silly resolved     directories: { lib: './lib' },
49 silly resolved     bin: { 'report-latency': './bin/report-latency' },
49 silly resolved     engines: { node: '>=0.8' },
49 silly resolved     dependencies:
49 silly resolved      { 'assert-plus': '0.1.2',
49 silly resolved        backoff: '2.2.0',
49 silly resolved        bunyan: '0.21.1',
49 silly resolved        'deep-equal': '0.0.0',
49 silly resolved        'escape-regexp-component': '1.0.2',
49 silly resolved        formidable: '1.0.14',
49 silly resolved        'http-signature': '0.10.0',
49 silly resolved        'keep-alive-agent': '0.0.1',
49 silly resolved        'lru-cache': '2.3.0',
49 silly resolved        mime: '1.2.9',
49 silly resolved        negotiator: '0.2.5',
49 silly resolved        'node-uuid': '1.4.0',
49 silly resolved        once: '1.1.1',
49 silly resolved        qs: '0.6.4',
49 silly resolved        semver: '1.1.4',
49 silly resolved        spdy: '1.8.2',
49 silly resolved        verror: '1.3.6',
49 silly resolved        'dtrace-provider': '0.2.8' },
49 silly resolved     optionalDependencies: { 'dtrace-provider': '0.2.8' },
49 silly resolved     devDependencies:
49 silly resolved      { cover: '0.2.8',
49 silly resolved        filed: '0.0.7',
49 silly resolved        nodeunit: '0.8.0',
49 silly resolved        watershed: '0.3.0' },
49 silly resolved     scripts: { test: 'nodeunit ./test' },
49 silly resolved     readme: '# restify\n\n[![Build Status](https://travis-ci.org/mcavage/node-restify.png)](https://travis-ci.org/mcavage/node-restify)\n\n[restify](http://mcavage.github.com/node-restify) is a smallish framework,\nsimilar to [express](http://expressjs.com) for building REST APIs.  For full\ndetails, see http://mcavage.github.com/node-restify.\n\n# Usage\n\n## Server\n\n    var restify = require(\'restify\');\n\n    var server = restify.createServer({\n      name: \'myapp\',\n      version: \'1.0.0\'\n    });\n    server.use(restify.acceptParser(server.acceptable));\n    server.use(restify.queryParser());\n    server.use(restify.bodyParser());\n\n    server.get(\'/echo/:name\', function (req, res, next) {\n      res.send(req.params);\n      return next();\n    });\n\n    server.listen(8080, function () {\n      console.log(\'%s listening at %s\', server.name, server.url);\n    });\n\n## Client\n\n    var assert = require(\'assert\');\n    var restify = require(\'restify\');\n\n    var client = restify.createJsonClient({\n      url: \'http://localhost:8080\',\n      version: \'~1.0\'\n    });\n\n    client.get(\'/echo/mark\', function (err, req, res, obj) {\n      assert.ifError(err);\n      console.log(\'Server returned: %j\', obj);\n    });\n\n# Installation\n\n    $ npm install restify\n\n## License\n\nThe MIT License (MIT)\nCopyright (c) 2012 Mark Cavage\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the "Software"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n## Bugs\n\nSee <https://github.com/mcavage/node-restify/issues>.\n\n## Mailing list\n\nSee the\n[Google group](https://groups.google.com/forum/?hl=en&fromgroups#!forum/restify)\n.\n',
49 silly resolved     readmeFilename: 'README.md',
49 silly resolved     _id: 'restify@2.6.0',
49 silly resolved     _from: 'restify@' } ]
50 info install restify@2.6.0 into /home/vagrant/app
51 info installOne restify@2.6.0
52 verbose from cache /home/vagrant/.npm/restify/2.6.0/package/package.json
53 info /home/vagrant/app/node_modules/restify unbuild
54 verbose read json /home/vagrant/app/node_modules/restify/package.json
55 verbose tar unpack /home/vagrant/.npm/restify/2.6.0/package.tgz
56 silly lockFile 69ef21ce-vagrant-app-node-modules-restify /home/vagrant/app/node_modules/restify
57 verbose lock /home/vagrant/app/node_modules/restify /home/vagrant/.npm/69ef21ce-vagrant-app-node-modules-restify.lock
58 silly lockFile e50991fd-nt-npm-restify-2-6-0-package-tgz /home/vagrant/.npm/restify/2.6.0/package.tgz
59 verbose lock /home/vagrant/.npm/restify/2.6.0/package.tgz /home/vagrant/.npm/e50991fd-nt-npm-restify-2-6-0-package-tgz.lock
60 silly gunzTarPerm modes [ '755', '644' ]
61 silly gunzTarPerm extractEntry package.json
62 silly gunzTarPerm extractEntry .npmignore
63 silly gunzTarPerm extractEntry README.md
64 silly gunzTarPerm extractEntry LICENSE
65 silly gunzTarPerm extractEntry CHANGES.md
66 silly gunzTarPerm extractEntry bin/report-latency
67 silly gunzTarPerm extractEntry lib/bunyan_helper.js
68 silly gunzTarPerm extractEntry lib/dtrace.js
69 silly gunzTarPerm extractEntry lib/upgrade.js
70 silly gunzTarPerm extractEntry lib/server.js
71 silly gunzTarPerm extractEntry lib/http_date.js
72 silly gunzTarPerm extractEntry lib/index.js
73 silly gunzTarPerm extractEntry lib/router.js
74 silly gunzTarPerm extractEntry lib/request.js
75 silly gunzTarPerm extractEntry lib/response.js
76 silly gunzTarPerm extractEntry lib/utils.js
77 silly gunzTarPerm extractEntry lib/clients/http_client.js
78 silly gunzTarPerm extractEntry lib/clients/index.js
79 silly gunzTarPerm extractEntry lib/clients/json_client.js
80 silly gunzTarPerm extractEntry lib/clients/string_client.js
81 silly gunzTarPerm extractEntry lib/formatters/binary.js
82 silly gunzTarPerm extractEntry lib/formatters/index.js
83 silly gunzTarPerm extractEntry lib/formatters/json.js
84 silly gunzTarPerm extractEntry lib/formatters/jsonp.js
85 silly gunzTarPerm extractEntry lib/formatters/text.js
86 silly gunzTarPerm extractEntry lib/errors/http_error.js
87 silly gunzTarPerm extractEntry lib/errors/index.js
88 silly gunzTarPerm extractEntry lib/errors/rest_error.js
89 silly gunzTarPerm extractEntry lib/plugins/accept.js
90 silly gunzTarPerm extractEntry lib/plugins/conditional_request.js
91 silly gunzTarPerm extractEntry lib/plugins/cors.js
92 silly gunzTarPerm extractEntry lib/plugins/date.js
93 silly gunzTarPerm extractEntry lib/plugins/bunyan.js
94 silly gunzTarPerm extractEntry lib/plugins/audit.js
95 silly gunzTarPerm extractEntry lib/plugins/gzip.js
96 silly gunzTarPerm extractEntry lib/plugins/index.js
97 silly gunzTarPerm extractEntry lib/plugins/json_body_parser.js
98 silly gunzTarPerm extractEntry lib/plugins/jsonp.js
99 silly gunzTarPerm extractEntry lib/plugins/body_reader.js
100 silly gunzTarPerm extractEntry lib/plugins/multipart_parser.js
101 silly gunzTarPerm extractEntry lib/plugins/body_parser.js
102 silly gunzTarPerm extractEntry lib/plugins/static.js
103 silly gunzTarPerm extractEntry lib/plugins/authorization.js
104 silly gunzTarPerm extractEntry lib/plugins/query.js
105 silly gunzTarPerm extractEntry lib/plugins/form_body_parser.js
106 silly gunzTarPerm extractEntry lib/plugins/throttle.js
107 silly gunzTarPerm extractEntry lib/plugins/full_response.js
108 silly gunzTarPerm extractEntry lib/plugins/pre/pause.js
109 silly gunzTarPerm extractEntry lib/plugins/pre/pre_path.js
110 silly gunzTarPerm extractEntry lib/plugins/pre/user_agent.js
111 verbose read json /home/vagrant/app/node_modules/restify/package.json
112 silly lockFile 69ef21ce-vagrant-app-node-modules-restify /home/vagrant/app/node_modules/restify
113 silly lockFile 69ef21ce-vagrant-app-node-modules-restify /home/vagrant/app/node_modules/restify
114 silly lockFile e50991fd-nt-npm-restify-2-6-0-package-tgz /home/vagrant/.npm/restify/2.6.0/package.tgz
115 silly lockFile e50991fd-nt-npm-restify-2-6-0-package-tgz /home/vagrant/.npm/restify/2.6.0/package.tgz
116 info preinstall restify@2.6.0
117 verbose from cache /home/vagrant/app/node_modules/restify/package.json
118 verbose readDependencies using package.json deps
119 verbose from cache /home/vagrant/app/node_modules/restify/package.json
120 verbose readDependencies using package.json deps
121 verbose cache add [ 'deep-equal@0.0.0', null ]
122 verbose cache add name=undefined spec="deep-equal@0.0.0" args=["deep-equal@0.0.0",null]
123 verbose parsed url { protocol: null,
123 verbose parsed url   slashes: null,
123 verbose parsed url   auth: null,
123 verbose parsed url   host: null,
123 verbose parsed url   port: null,
123 verbose parsed url   hostname: null,
123 verbose parsed url   hash: null,
123 verbose parsed url   search: null,
123 verbose parsed url   query: null,
123 verbose parsed url   pathname: 'deep-equal@0.0.0',
123 verbose parsed url   path: 'deep-equal@0.0.0',
123 verbose parsed url   href: 'deep-equal@0.0.0' }
124 verbose cache add name="deep-equal" spec="0.0.0" args=["deep-equal","0.0.0"]
125 verbose parsed url { protocol: null,
125 verbose parsed url   slashes: null,
125 verbose parsed url   auth: null,
125 verbose parsed url   host: null,
125 verbose parsed url   port: null,
125 verbose parsed url   hostname: null,
125 verbose parsed url   hash: null,
125 verbose parsed url   search: null,
125 verbose parsed url   query: null,
125 verbose parsed url   pathname: '0.0.0',
125 verbose parsed url   path: '0.0.0',
125 verbose parsed url   href: '0.0.0' }
126 verbose addNamed [ 'deep-equal', '0.0.0' ]
127 verbose addNamed [ '0.0.0', '0.0.0' ]
128 silly lockFile 52f78ead-deep-equal-0-0-0 deep-equal@0.0.0
129 verbose lock deep-equal@0.0.0 /home/vagrant/.npm/52f78ead-deep-equal-0-0-0.lock
130 verbose cache add [ 'escape-regexp-component@1.0.2', null ]
131 verbose cache add name=undefined spec="escape-regexp-component@1.0.2" args=["escape-regexp-component@1.0.2",null]
132 verbose parsed url { protocol: null,
132 verbose parsed url   slashes: null,
132 verbose parsed url   auth: null,
132 verbose parsed url   host: null,
132 verbose parsed url   port: null,
132 verbose parsed url   hostname: null,
132 verbose parsed url   hash: null,
132 verbose parsed url   search: null,
132 verbose parsed url   query: null,
132 verbose parsed url   pathname: 'escape-regexp-component@1.0.2',
132 verbose parsed url   path: 'escape-regexp-component@1.0.2',
132 verbose parsed url   href: 'escape-regexp-component@1.0.2' }
133 verbose cache add name="escape-regexp-component" spec="1.0.2" args=["escape-regexp-component","1.0.2"]
134 verbose parsed url { protocol: null,
134 verbose parsed url   slashes: null,
134 verbose parsed url   auth: null,
134 verbose parsed url   host: null,
134 verbose parsed url   port: null,
134 verbose parsed url   hostname: null,
134 verbose parsed url   hash: null,
134 verbose parsed url   search: null,
134 verbose parsed url   query: null,
134 verbose parsed url   pathname: '1.0.2',
134 verbose parsed url   path: '1.0.2',
134 verbose parsed url   href: '1.0.2' }
135 verbose addNamed [ 'escape-regexp-component', '1.0.2' ]
136 verbose addNamed [ '1.0.2', '1.0.2' ]
137 silly lockFile fbab6ec4-escape-regexp-component-1-0-2 escape-regexp-component@1.0.2
138 verbose lock escape-regexp-component@1.0.2 /home/vagrant/.npm/fbab6ec4-escape-regexp-component-1-0-2.lock
139 verbose cache add [ 'bunyan@0.21.1', null ]
140 verbose cache add name=undefined spec="bunyan@0.21.1" args=["bunyan@0.21.1",null]
141 verbose parsed url { protocol: null,
141 verbose parsed url   slashes: null,
141 verbose parsed url   auth: null,
141 verbose parsed url   host: null,
141 verbose parsed url   port: null,
141 verbose parsed url   hostname: null,
141 verbose parsed url   hash: null,
141 verbose parsed url   search: null,
141 verbose parsed url   query: null,
141 verbose parsed url   pathname: 'bunyan@0.21.1',
141 verbose parsed url   path: 'bunyan@0.21.1',
141 verbose parsed url   href: 'bunyan@0.21.1' }
142 verbose cache add name="bunyan" spec="0.21.1" args=["bunyan","0.21.1"]
143 verbose parsed url { protocol: null,
143 verbose parsed url   slashes: null,
143 verbose parsed url   auth: null,
143 verbose parsed url   host: null,
143 verbose parsed url   port: null,
143 verbose parsed url   hostname: null,
143 verbose parsed url   hash: null,
143 verbose parsed url   search: null,
143 verbose parsed url   query: null,
143 verbose parsed url   pathname: '0.21.1',
143 verbose parsed url   path: '0.21.1',
143 verbose parsed url   href: '0.21.1' }
144 verbose addNamed [ 'bunyan', '0.21.1' ]
145 verbose addNamed [ '0.21.1', '0.21.1' ]
146 silly lockFile 83b343e5-bunyan-0-21-1 bunyan@0.21.1
147 verbose lock bunyan@0.21.1 /home/vagrant/.npm/83b343e5-bunyan-0-21-1.lock
148 verbose cache add [ 'formidable@1.0.14', null ]
149 verbose cache add name=undefined spec="formidable@1.0.14" args=["formidable@1.0.14",null]
150 verbose parsed url { protocol: null,
150 verbose parsed url   slashes: null,
150 verbose parsed url   auth: null,
150 verbose parsed url   host: null,
150 verbose parsed url   port: null,
150 verbose parsed url   hostname: null,
150 verbose parsed url   hash: null,
150 verbose parsed url   search: null,
150 verbose parsed url   query: null,
150 verbose parsed url   pathname: 'formidable@1.0.14',
150 verbose parsed url   path: 'formidable@1.0.14',
150 verbose parsed url   href: 'formidable@1.0.14' }
151 verbose cache add name="formidable" spec="1.0.14" args=["formidable","1.0.14"]
152 verbose parsed url { protocol: null,
152 verbose parsed url   slashes: null,
152 verbose parsed url   auth: null,
152 verbose parsed url   host: null,
152 verbose parsed url   port: null,
152 verbose parsed url   hostname: null,
152 verbose parsed url   hash: null,
152 verbose parsed url   search: null,
152 verbose parsed url   query: null,
152 verbose parsed url   pathname: '1.0.14',
152 verbose parsed url   path: '1.0.14',
152 verbose parsed url   href: '1.0.14' }
153 verbose addNamed [ 'formidable', '1.0.14' ]
154 verbose addNamed [ '1.0.14', '1.0.14' ]
155 silly lockFile 3f08b74a-formidable-1-0-14 formidable@1.0.14
156 verbose lock formidable@1.0.14 /home/vagrant/.npm/3f08b74a-formidable-1-0-14.lock
157 verbose cache add [ 'keep-alive-agent@0.0.1', null ]
158 verbose cache add name=undefined spec="keep-alive-agent@0.0.1" args=["keep-alive-agent@0.0.1",null]
159 verbose parsed url { protocol: null,
159 verbose parsed url   slashes: null,
159 verbose parsed url   auth: null,
159 verbose parsed url   host: null,
159 verbose parsed url   port: null,
159 verbose parsed url   hostname: null,
159 verbose parsed url   hash: null,
159 verbose parsed url   search: null,
159 verbose parsed url   query: null,
159 verbose parsed url   pathname: 'keep-alive-agent@0.0.1',
159 verbose parsed url   path: 'keep-alive-agent@0.0.1',
159 verbose parsed url   href: 'keep-alive-agent@0.0.1' }
160 verbose cache add name="keep-alive-agent" spec="0.0.1" args=["keep-alive-agent","0.0.1"]
161 verbose parsed url { protocol: null,
161 verbose parsed url   slashes: null,
161 verbose parsed url   auth: null,
161 verbose parsed url   host: null,
161 verbose parsed url   port: null,
161 verbose parsed url   hostname: null,
161 verbose parsed url   hash: null,
161 verbose parsed url   search: null,
161 verbose parsed url   query: null,
161 verbose parsed url   pathname: '0.0.1',
161 verbose parsed url   path: '0.0.1',
161 verbose parsed url   href: '0.0.1' }
162 verbose addNamed [ 'keep-alive-agent', '0.0.1' ]
163 verbose addNamed [ '0.0.1', '0.0.1' ]
164 silly lockFile e4e26cf8-keep-alive-agent-0-0-1 keep-alive-agent@0.0.1
165 verbose lock keep-alive-agent@0.0.1 /home/vagrant/.npm/e4e26cf8-keep-alive-agent-0-0-1.lock
166 verbose cache add [ 'lru-cache@2.3.0', null ]
167 verbose cache add name=undefined spec="lru-cache@2.3.0" args=["lru-cache@2.3.0",null]
168 verbose parsed url { protocol: null,
168 verbose parsed url   slashes: null,
168 verbose parsed url   auth: null,
168 verbose parsed url   host: null,
168 verbose parsed url   port: null,
168 verbose parsed url   hostname: null,
168 verbose parsed url   hash: null,
168 verbose parsed url   search: null,
168 verbose parsed url   query: null,
168 verbose parsed url   pathname: 'lru-cache@2.3.0',
168 verbose parsed url   path: 'lru-cache@2.3.0',
168 verbose parsed url   href: 'lru-cache@2.3.0' }
169 verbose cache add name="lru-cache" spec="2.3.0" args=["lru-cache","2.3.0"]
170 verbose parsed url { protocol: null,
170 verbose parsed url   slashes: null,
170 verbose parsed url   auth: null,
170 verbose parsed url   host: null,
170 verbose parsed url   port: null,
170 verbose parsed url   hostname: null,
170 verbose parsed url   hash: null,
170 verbose parsed url   search: null,
170 verbose parsed url   query: null,
170 verbose parsed url   pathname: '2.3.0',
170 verbose parsed url   path: '2.3.0',
170 verbose parsed url   href: '2.3.0' }
171 verbose addNamed [ 'lru-cache', '2.3.0' ]
172 verbose addNamed [ '2.3.0', '2.3.0' ]
173 silly lockFile 14cd0f37-lru-cache-2-3-0 lru-cache@2.3.0
174 verbose lock lru-cache@2.3.0 /home/vagrant/.npm/14cd0f37-lru-cache-2-3-0.lock
175 verbose cache add [ 'mime@1.2.9', null ]
176 verbose cache add name=undefined spec="mime@1.2.9" args=["mime@1.2.9",null]
177 verbose parsed url { protocol: null,
177 verbose parsed url   slashes: null,
177 verbose parsed url   auth: null,
177 verbose parsed url   host: null,
177 verbose parsed url   port: null,
177 verbose parsed url   hostname: null,
177 verbose parsed url   hash: null,
177 verbose parsed url   search: null,
177 verbose parsed url   query: null,
177 verbose parsed url   pathname: 'mime@1.2.9',
177 verbose parsed url   path: 'mime@1.2.9',
177 verbose parsed url   href: 'mime@1.2.9' }
178 verbose cache add name="mime" spec="1.2.9" args=["mime","1.2.9"]
179 verbose parsed url { protocol: null,
179 verbose parsed url   slashes: null,
179 verbose parsed url   auth: null,
179 verbose parsed url   host: null,
179 verbose parsed url   port: null,
179 verbose parsed url   hostname: null,
179 verbose parsed url   hash: null,
179 verbose parsed url   search: null,
179 verbose parsed url   query: null,
179 verbose parsed url   pathname: '1.2.9',
179 verbose parsed url   path: '1.2.9',
179 verbose parsed url   href: '1.2.9' }
180 verbose addNamed [ 'mime', '1.2.9' ]
181 verbose addNamed [ '1.2.9', '1.2.9' ]
182 silly lockFile 24648bbc-mime-1-2-9 mime@1.2.9
183 verbose lock mime@1.2.9 /home/vagrant/.npm/24648bbc-mime-1-2-9.lock
184 verbose cache add [ 'negotiator@0.2.5', null ]
185 verbose cache add name=undefined spec="negotiator@0.2.5" args=["negotiator@0.2.5",null]
186 verbose parsed url { protocol: null,
186 verbose parsed url   slashes: null,
186 verbose parsed url   auth: null,
186 verbose parsed url   host: null,
186 verbose parsed url   port: null,
186 verbose parsed url   hostname: null,
186 verbose parsed url   hash: null,
186 verbose parsed url   search: null,
186 verbose parsed url   query: null,
186 verbose parsed url   pathname: 'negotiator@0.2.5',
186 verbose parsed url   path: 'negotiator@0.2.5',
186 verbose parsed url   href: 'negotiator@0.2.5' }
187 verbose cache add name="negotiator" spec="0.2.5" args=["negotiator","0.2.5"]
188 verbose parsed url { protocol: null,
188 verbose parsed url   slashes: null,
188 verbose parsed url   auth: null,
188 verbose parsed url   host: null,
188 verbose parsed url   port: null,
188 verbose parsed url   hostname: null,
188 verbose parsed url   hash: null,
188 verbose parsed url   search: null,
188 verbose parsed url   query: null,
188 verbose parsed url   pathname: '0.2.5',
188 verbose parsed url   path: '0.2.5',
188 verbose parsed url   href: '0.2.5' }
189 verbose addNamed [ 'negotiator', '0.2.5' ]
190 verbose addNamed [ '0.2.5', '0.2.5' ]
191 silly lockFile 87a22aa4-negotiator-0-2-5 negotiator@0.2.5
192 verbose lock negotiator@0.2.5 /home/vagrant/.npm/87a22aa4-negotiator-0-2-5.lock
193 verbose cache add [ 'node-uuid@1.4.0', null ]
194 verbose cache add name=undefined spec="node-uuid@1.4.0" args=["node-uuid@1.4.0",null]
195 verbose parsed url { protocol: null,
195 verbose parsed url   slashes: null,
195 verbose parsed url   auth: null,
195 verbose parsed url   host: null,
195 verbose parsed url   port: null,
195 verbose parsed url   hostname: null,
195 verbose parsed url   hash: null,
195 verbose parsed url   search: null,
195 verbose parsed url   query: null,
195 verbose parsed url   pathname: 'node-uuid@1.4.0',
195 verbose parsed url   path: 'node-uuid@1.4.0',
195 verbose parsed url   href: 'node-uuid@1.4.0' }
196 verbose cache add name="node-uuid" spec="1.4.0" args=["node-uuid","1.4.0"]
197 verbose parsed url { protocol: null,
197 verbose parsed url   slashes: null,
197 verbose parsed url   auth: null,
197 verbose parsed url   host: null,
197 verbose parsed url   port: null,
197 verbose parsed url   hostname: null,
197 verbose parsed url   hash: null,
197 verbose parsed url   search: null,
197 verbose parsed url   query: null,
197 verbose parsed url   pathname: '1.4.0',
197 verbose parsed url   path: '1.4.0',
197 verbose parsed url   href: '1.4.0' }
198 verbose addNamed [ 'node-uuid', '1.4.0' ]
199 verbose addNamed [ '1.4.0', '1.4.0' ]
200 silly lockFile 788da469-node-uuid-1-4-0 node-uuid@1.4.0
201 verbose lock node-uuid@1.4.0 /home/vagrant/.npm/788da469-node-uuid-1-4-0.lock
202 verbose cache add [ 'once@1.1.1', null ]
203 verbose cache add name=undefined spec="once@1.1.1" args=["once@1.1.1",null]
204 verbose parsed url { protocol: null,
204 verbose parsed url   slashes: null,
204 verbose parsed url   auth: null,
204 verbose parsed url   host: null,
204 verbose parsed url   port: null,
204 verbose parsed url   hostname: null,
204 verbose parsed url   hash: null,
204 verbose parsed url   search: null,
204 verbose parsed url   query: null,
204 verbose parsed url   pathname: 'once@1.1.1',
204 verbose parsed url   path: 'once@1.1.1',
204 verbose parsed url   href: 'once@1.1.1' }
205 verbose cache add name="once" spec="1.1.1" args=["once","1.1.1"]
206 verbose parsed url { protocol: null,
206 verbose parsed url   slashes: null,
206 verbose parsed url   auth: null,
206 verbose parsed url   host: null,
206 verbose parsed url   port: null,
206 verbose parsed url   hostname: null,
206 verbose parsed url   hash: null,
206 verbose parsed url   search: null,
206 verbose parsed url   query: null,
206 verbose parsed url   pathname: '1.1.1',
206 verbose parsed url   path: '1.1.1',
206 verbose parsed url   href: '1.1.1' }
207 verbose addNamed [ 'once', '1.1.1' ]
208 verbose addNamed [ '1.1.1', '1.1.1' ]
209 silly lockFile 6beab3c4-once-1-1-1 once@1.1.1
210 verbose lock once@1.1.1 /home/vagrant/.npm/6beab3c4-once-1-1-1.lock
211 verbose cache add [ 'qs@0.6.4', null ]
212 verbose cache add name=undefined spec="qs@0.6.4" args=["qs@0.6.4",null]
213 verbose parsed url { protocol: null,
213 verbose parsed url   slashes: null,
213 verbose parsed url   auth: null,
213 verbose parsed url   host: null,
213 verbose parsed url   port: null,
213 verbose parsed url   hostname: null,
213 verbose parsed url   hash: null,
213 verbose parsed url   search: null,
213 verbose parsed url   query: null,
213 verbose parsed url   pathname: 'qs@0.6.4',
213 verbose parsed url   path: 'qs@0.6.4',
213 verbose parsed url   href: 'qs@0.6.4' }
214 verbose cache add name="qs" spec="0.6.4" args=["qs","0.6.4"]
215 verbose parsed url { protocol: null,
215 verbose parsed url   slashes: null,
215 verbose parsed url   auth: null,
215 verbose parsed url   host: null,
215 verbose parsed url   port: null,
215 verbose parsed url   hostname: null,
215 verbose parsed url   hash: null,
215 verbose parsed url   search: null,
215 verbose parsed url   query: null,
215 verbose parsed url   pathname: '0.6.4',
215 verbose parsed url   path: '0.6.4',
215 verbose parsed url   href: '0.6.4' }
216 verbose addNamed [ 'qs', '0.6.4' ]
217 verbose addNamed [ '0.6.4', '0.6.4' ]
218 silly lockFile 21f2b672-qs-0-6-4 qs@0.6.4
219 verbose lock qs@0.6.4 /home/vagrant/.npm/21f2b672-qs-0-6-4.lock
220 verbose cache add [ 'semver@1.1.4', null ]
221 verbose cache add name=undefined spec="semver@1.1.4" args=["semver@1.1.4",null]
222 verbose parsed url { protocol: null,
222 verbose parsed url   slashes: null,
222 verbose parsed url   auth: null,
222 verbose parsed url   host: null,
222 verbose parsed url   port: null,
222 verbose parsed url   hostname: null,
222 verbose parsed url   hash: null,
222 verbose parsed url   search: null,
222 verbose parsed url   query: null,
222 verbose parsed url   pathname: 'semver@1.1.4',
222 verbose parsed url   path: 'semver@1.1.4',
222 verbose parsed url   href: 'semver@1.1.4' }
223 verbose cache add name="semver" spec="1.1.4" args=["semver","1.1.4"]
224 verbose parsed url { protocol: null,
224 verbose parsed url   slashes: null,
224 verbose parsed url   auth: null,
224 verbose parsed url   host: null,
224 verbose parsed url   port: null,
224 verbose parsed url   hostname: null,
224 verbose parsed url   hash: null,
224 verbose parsed url   search: null,
224 verbose parsed url   query: null,
224 verbose parsed url   pathname: '1.1.4',
224 verbose parsed url   path: '1.1.4',
224 verbose parsed url   href: '1.1.4' }
225 verbose addNamed [ 'semver', '1.1.4' ]
226 verbose addNamed [ '1.1.4', '1.1.4' ]
227 silly lockFile da52979e-semver-1-1-4 semver@1.1.4
228 verbose lock semver@1.1.4 /home/vagrant/.npm/da52979e-semver-1-1-4.lock
229 verbose cache add [ 'spdy@1.8.2', null ]
230 verbose cache add name=undefined spec="spdy@1.8.2" args=["spdy@1.8.2",null]
231 verbose parsed url { protocol: null,
231 verbose parsed url   slashes: null,
231 verbose parsed url   auth: null,
231 verbose parsed url   host: null,
231 verbose parsed url   port: null,
231 verbose parsed url   hostname: null,
231 verbose parsed url   hash: null,
231 verbose parsed url   search: null,
231 verbose parsed url   query: null,
231 verbose parsed url   pathname: 'spdy@1.8.2',
231 verbose parsed url   path: 'spdy@1.8.2',
231 verbose parsed url   href: 'spdy@1.8.2' }
232 verbose cache add name="spdy" spec="1.8.2" args=["spdy","1.8.2"]
233 verbose parsed url { protocol: null,
233 verbose parsed url   slashes: null,
233 verbose parsed url   auth: null,
233 verbose parsed url   host: null,
233 verbose parsed url   port: null,
233 verbose parsed url   hostname: null,
233 verbose parsed url   hash: null,
233 verbose parsed url   search: null,
233 verbose parsed url   query: null,
233 verbose parsed url   pathname: '1.8.2',
233 verbose parsed url   path: '1.8.2',
233 verbose parsed url   href: '1.8.2' }
234 verbose addNamed [ 'spdy', '1.8.2' ]
235 verbose addNamed [ '1.8.2', '1.8.2' ]
236 silly lockFile 558b3c88-spdy-1-8-2 spdy@1.8.2
237 verbose lock spdy@1.8.2 /home/vagrant/.npm/558b3c88-spdy-1-8-2.lock
238 verbose cache add [ 'verror@1.3.6', null ]
239 verbose cache add name=undefined spec="verror@1.3.6" args=["verror@1.3.6",null]
240 verbose parsed url { protocol: null,
240 verbose parsed url   slashes: null,
240 verbose parsed url   auth: null,
240 verbose parsed url   host: null,
240 verbose parsed url   port: null,
240 verbose parsed url   hostname: null,
240 verbose parsed url   hash: null,
240 verbose parsed url   search: null,
240 verbose parsed url   query: null,
240 verbose parsed url   pathname: 'verror@1.3.6',
240 verbose parsed url   path: 'verror@1.3.6',
240 verbose parsed url   href: 'verror@1.3.6' }
241 verbose cache add name="verror" spec="1.3.6" args=["verror","1.3.6"]
242 verbose parsed url { protocol: null,
242 verbose parsed url   slashes: null,
242 verbose parsed url   auth: null,
242 verbose parsed url   host: null,
242 verbose parsed url   port: null,
242 verbose parsed url   hostname: null,
242 verbose parsed url   hash: null,
242 verbose parsed url   search: null,
242 verbose parsed url   query: null,
242 verbose parsed url   pathname: '1.3.6',
242 verbose parsed url   path: '1.3.6',
242 verbose parsed url   href: '1.3.6' }
243 verbose addNamed [ 'verror', '1.3.6' ]
244 verbose addNamed [ '1.3.6', '1.3.6' ]
245 silly lockFile 0ec1cdd2-verror-1-3-6 verror@1.3.6
246 verbose lock verror@1.3.6 /home/vagrant/.npm/0ec1cdd2-verror-1-3-6.lock
247 verbose cache add [ 'assert-plus@0.1.2', null ]
248 verbose cache add name=undefined spec="assert-plus@0.1.2" args=["assert-plus@0.1.2",null]
249 verbose parsed url { protocol: null,
249 verbose parsed url   slashes: null,
249 verbose parsed url   auth: null,
249 verbose parsed url   host: null,
249 verbose parsed url   port: null,
249 verbose parsed url   hostname: null,
249 verbose parsed url   hash: null,
249 verbose parsed url   search: null,
249 verbose parsed url   query: null,
249 verbose parsed url   pathname: 'assert-plus@0.1.2',
249 verbose parsed url   path: 'assert-plus@0.1.2',
249 verbose parsed url   href: 'assert-plus@0.1.2' }
250 verbose cache add name="assert-plus" spec="0.1.2" args=["assert-plus","0.1.2"]
251 verbose parsed url { protocol: null,
251 verbose parsed url   slashes: null,
251 verbose parsed url   auth: null,
251 verbose parsed url   host: null,
251 verbose parsed url   port: null,
251 verbose parsed url   hostname: null,
251 verbose parsed url   hash: null,
251 verbose parsed url   search: null,
251 verbose parsed url   query: null,
251 verbose parsed url   pathname: '0.1.2',
251 verbose parsed url   path: '0.1.2',
251 verbose parsed url   href: '0.1.2' }
252 verbose addNamed [ 'assert-plus', '0.1.2' ]
253 verbose addNamed [ '0.1.2', '0.1.2' ]
254 silly lockFile 46222085-assert-plus-0-1-2 assert-plus@0.1.2
255 verbose lock assert-plus@0.1.2 /home/vagrant/.npm/46222085-assert-plus-0-1-2.lock
256 verbose cache add [ 'backoff@2.2.0', null ]
257 verbose cache add name=undefined spec="backoff@2.2.0" args=["backoff@2.2.0",null]
258 verbose parsed url { protocol: null,
258 verbose parsed url   slashes: null,
258 verbose parsed url   auth: null,
258 verbose parsed url   host: null,
258 verbose parsed url   port: null,
258 verbose parsed url   hostname: null,
258 verbose parsed url   hash: null,
258 verbose parsed url   search: null,
258 verbose parsed url   query: null,
258 verbose parsed url   pathname: 'backoff@2.2.0',
258 verbose parsed url   path: 'backoff@2.2.0',
258 verbose parsed url   href: 'backoff@2.2.0' }
259 verbose cache add name="backoff" spec="2.2.0" args=["backoff","2.2.0"]
260 verbose parsed url { protocol: null,
260 verbose parsed url   slashes: null,
260 verbose parsed url   auth: null,
260 verbose parsed url   host: null,
260 verbose parsed url   port: null,
260 verbose parsed url   hostname: null,
260 verbose parsed url   hash: null,
260 verbose parsed url   search: null,
260 verbose parsed url   query: null,
260 verbose parsed url   pathname: '2.2.0',
260 verbose parsed url   path: '2.2.0',
260 verbose parsed url   href: '2.2.0' }
261 verbose addNamed [ 'backoff', '2.2.0' ]
262 verbose addNamed [ '2.2.0', '2.2.0' ]
263 silly lockFile 9e18893d-backoff-2-2-0 backoff@2.2.0
264 verbose lock backoff@2.2.0 /home/vagrant/.npm/9e18893d-backoff-2-2-0.lock
265 verbose url raw deep-equal/0.0.0
266 verbose url resolving [ 'https://registry.npmjs.org/', './deep-equal/0.0.0' ]
267 verbose url resolved https://registry.npmjs.org/deep-equal/0.0.0
268 info trying registry request attempt 1 at 14:25:00
269 verbose etag "55RZ8FSHWBJNZVD7EZCFILIR3"
270 http GET https://registry.npmjs.org/deep-equal/0.0.0
271 verbose url raw escape-regexp-component/1.0.2
272 verbose url resolving [ 'https://registry.npmjs.org/',
272 verbose url resolving   './escape-regexp-component/1.0.2' ]
273 verbose url resolved https://registry.npmjs.org/escape-regexp-component/1.0.2
274 info trying registry request attempt 1 at 14:25:00
275 verbose etag "56HURRW6X9AZCRN2S2I56NO80"
276 http GET https://registry.npmjs.org/escape-regexp-component/1.0.2
277 verbose url raw bunyan/0.21.1
278 verbose url resolving [ 'https://registry.npmjs.org/', './bunyan/0.21.1' ]
279 verbose url resolved https://registry.npmjs.org/bunyan/0.21.1
280 info trying registry request attempt 1 at 14:25:00
281 verbose etag "EEIK9WS2J6PO0B50R83RLPNUZ"
282 http GET https://registry.npmjs.org/bunyan/0.21.1
283 verbose url raw formidable/1.0.14
284 verbose url resolving [ 'https://registry.npmjs.org/', './formidable/1.0.14' ]
285 verbose url resolved https://registry.npmjs.org/formidable/1.0.14
286 info trying registry request attempt 1 at 14:25:00
287 verbose etag "8JM374O38WRSF5CM0XD5K5QXS"
288 http GET https://registry.npmjs.org/formidable/1.0.14
289 verbose url raw keep-alive-agent/0.0.1
290 verbose url resolving [ 'https://registry.npmjs.org/', './keep-alive-agent/0.0.1' ]
291 verbose url resolved https://registry.npmjs.org/keep-alive-agent/0.0.1
292 info trying registry request attempt 1 at 14:25:00
293 verbose etag "E37UO5C8RT5Z44OF1GR4NUYGS"
294 http GET https://registry.npmjs.org/keep-alive-agent/0.0.1
295 verbose url raw lru-cache/2.3.0
296 verbose url resolving [ 'https://registry.npmjs.org/', './lru-cache/2.3.0' ]
297 verbose url resolved https://registry.npmjs.org/lru-cache/2.3.0
298 info trying registry request attempt 1 at 14:25:00
299 verbose etag "14VF40U499GDAIDK33TEOG56Q"
300 http GET https://registry.npmjs.org/lru-cache/2.3.0
301 verbose url raw mime/1.2.9
302 verbose url resolving [ 'https://registry.npmjs.org/', './mime/1.2.9' ]
303 verbose url resolved https://registry.npmjs.org/mime/1.2.9
304 info trying registry request attempt 1 at 14:25:00
305 verbose etag "7EO2K9LTTTQE0CBK2EEXXT9R"
306 http GET https://registry.npmjs.org/mime/1.2.9
307 verbose url raw negotiator/0.2.5
308 verbose url resolving [ 'https://registry.npmjs.org/', './negotiator/0.2.5' ]
309 verbose url resolved https://registry.npmjs.org/negotiator/0.2.5
310 info trying registry request attempt 1 at 14:25:00
311 verbose etag "ABBGFF914GSDN2CNMDROFOFXN"
312 http GET https://registry.npmjs.org/negotiator/0.2.5
313 verbose url raw node-uuid/1.4.0
314 verbose url resolving [ 'https://registry.npmjs.org/', './node-uuid/1.4.0' ]
315 verbose url resolved https://registry.npmjs.org/node-uuid/1.4.0
316 info trying registry request attempt 1 at 14:25:00
317 verbose etag "4DHO08MXIKSJAG3PBNLVJ8GWM"
318 http GET https://registry.npmjs.org/node-uuid/1.4.0
319 verbose url raw once/1.1.1
320 verbose url resolving [ 'https://registry.npmjs.org/', './once/1.1.1' ]
321 verbose url resolved https://registry.npmjs.org/once/1.1.1
322 info trying registry request attempt 1 at 14:25:00
323 verbose etag "5EVD9F3N8WC7PWWZT58JF8JR6"
324 http GET https://registry.npmjs.org/once/1.1.1
325 verbose url raw qs/0.6.4
326 verbose url resolving [ 'https://registry.npmjs.org/', './qs/0.6.4' ]
327 verbose url resolved https://registry.npmjs.org/qs/0.6.4
328 info trying registry request attempt 1 at 14:25:00
329 verbose etag "A0908O91HJF6S9ZO1VDAN636E"
330 http GET https://registry.npmjs.org/qs/0.6.4
331 verbose url raw semver/1.1.4
332 verbose url resolving [ 'https://registry.npmjs.org/', './semver/1.1.4' ]
333 verbose url resolved https://registry.npmjs.org/semver/1.1.4
334 info trying registry request attempt 1 at 14:25:00
335 verbose etag "DWYD1H2ZPCYQYDO3FM5CDFM9E"
336 http GET https://registry.npmjs.org/semver/1.1.4
337 verbose url raw spdy/1.8.2
338 verbose url resolving [ 'https://registry.npmjs.org/', './spdy/1.8.2' ]
339 verbose url resolved https://registry.npmjs.org/spdy/1.8.2
340 info trying registry request attempt 1 at 14:25:00
341 verbose etag "86LHP0GI484BKMZHH6QB6TSJP"
342 http GET https://registry.npmjs.org/spdy/1.8.2
343 verbose url raw verror/1.3.6
344 verbose url resolving [ 'https://registry.npmjs.org/', './verror/1.3.6' ]
345 verbose url resolved https://registry.npmjs.org/verror/1.3.6
346 info trying registry request attempt 1 at 14:25:00
347 verbose etag "2D3X3FFX8NNI11GJ0FR78PUB9"
348 http GET https://registry.npmjs.org/verror/1.3.6
349 verbose url raw assert-plus/0.1.2
350 verbose url resolving [ 'https://registry.npmjs.org/', './assert-plus/0.1.2' ]
351 verbose url resolved https://registry.npmjs.org/assert-plus/0.1.2
352 info trying registry request attempt 1 at 14:25:00
353 verbose etag "36PSGZJHVE05XDWT91B4YO6Q7"
354 http GET https://registry.npmjs.org/assert-plus/0.1.2
355 verbose url raw backoff/2.2.0
356 verbose url resolving [ 'https://registry.npmjs.org/', './backoff/2.2.0' ]
357 verbose url resolved https://registry.npmjs.org/backoff/2.2.0
358 info trying registry request attempt 1 at 14:25:00
359 verbose etag "LCE95P87QRLUFCH9PO4X9UW2"
360 http GET https://registry.npmjs.org/backoff/2.2.0
361 http 304 https://registry.npmjs.org/deep-equal/0.0.0
362 silly registry.get cb [ 304,
362 silly registry.get   { server: 'CouchDB/1.3.1 (Erlang OTP/R15B03)',
362 silly registry.get     etag: '"55RZ8FSHWBJNZVD7EZCFILIR3"',
362 silly registry.get     date: 'Mon, 28 Oct 2013 14:25:01 GMT',
362 silly registry.get     'content-length': '0' } ]
363 verbose etag deep-equal/0.0.0 from cache
364 verbose read json /home/vagrant/.npm/deep-equal/0.0.0/package/package.json
365 silly lockFile 52f78ead-deep-equal-0-0-0 deep-equal@0.0.0
366 silly lockFile 52f78ead-deep-equal-0-0-0 deep-equal@0.0.0
367 http 304 https://registry.npmjs.org/bunyan/0.21.1
368 silly registry.get cb [ 304,
368 silly registry.get   { server: 'CouchDB/1.3.1 (Erlang OTP/R15B03)',
368 silly registry.get     etag: '"EEIK9WS2J6PO0B50R83RLPNUZ"',
368 silly registry.get     date: 'Mon, 28 Oct 2013 14:25:01 GMT',
368 silly registry.get     'content-length': '0' } ]
369 verbose etag bunyan/0.21.1 from cache
370 verbose read json /home/vagrant/.npm/bunyan/0.21.1/package/package.json
371 http 304 https://registry.npmjs.org/keep-alive-agent/0.0.1
372 silly registry.get cb [ 304,
372 silly registry.get   { server: 'CouchDB/1.3.1 (Erlang OTP/R15B03)',
372 silly registry.get     etag: '"E37UO5C8RT5Z44OF1GR4NUYGS"',
372 silly registry.get     date: 'Mon, 28 Oct 2013 14:25:01 GMT',
372 silly registry.get     'content-length': '0' } ]
373 verbose etag keep-alive-agent/0.0.1 from cache
374 http 304 https://registry.npmjs.org/escape-regexp-component/1.0.2
375 silly registry.get cb [ 304,
375 silly registry.get   { server: 'CouchDB/1.3.1 (Erlang OTP/R15B03)',
375 silly registry.get     etag: '"56HURRW6X9AZCRN2S2I56NO80"',
375 silly registry.get     date: 'Mon, 28 Oct 2013 14:25:01 GMT',
375 silly registry.get     'content-length': '0' } ]
376 verbose etag escape-regexp-component/1.0.2 from cache
377 silly lockFile 83b343e5-bunyan-0-21-1 bunyan@0.21.1
378 silly lockFile 83b343e5-bunyan-0-21-1 bunyan@0.21.1
379 verbose read json /home/vagrant/.npm/keep-alive-agent/0.0.1/package/package.json
380 verbose read json /home/vagrant/.npm/escape-regexp-component/1.0.2/package/package.json
381 http 304 https://registry.npmjs.org/formidable/1.0.14
382 silly registry.get cb [ 304,
382 silly registry.get   { server: 'CouchDB/1.3.1 (Erlang OTP/R15B03)',
382 silly registry.get     etag: '"8JM374O38WRSF5CM0XD5K5QXS"',
382 silly registry.get     date: 'Mon, 28 Oct 2013 14:25:01 GMT',
382 silly registry.get     'content-length': '0' } ]
383 verbose etag formidable/1.0.14 from cache
384 silly lockFile e4e26cf8-keep-alive-agent-0-0-1 keep-alive-agent@0.0.1
385 silly lockFile e4e26cf8-keep-alive-agent-0-0-1 keep-alive-agent@0.0.1
386 silly lockFile fbab6ec4-escape-regexp-component-1-0-2 escape-regexp-component@1.0.2
387 silly lockFile fbab6ec4-escape-regexp-component-1-0-2 escape-regexp-component@1.0.2
388 verbose read json /home/vagrant/.npm/formidable/1.0.14/package/package.json
389 silly lockFile 3f08b74a-formidable-1-0-14 formidable@1.0.14
390 silly lockFile 3f08b74a-formidable-1-0-14 formidable@1.0.14
391 http 304 https://registry.npmjs.org/mime/1.2.9
392 silly registry.get cb [ 304,
392 silly registry.get   { server: 'CouchDB/1.3.1 (Erlang OTP/R15B03)',
392 silly registry.get     etag: '"7EO2K9LTTTQE0CBK2EEXXT9R"',
392 silly registry.get     date: 'Mon, 28 Oct 2013 14:25:02 GMT',
392 silly registry.get     'content-length': '0' } ]
393 verbose etag mime/1.2.9 from cache
394 http 304 https://registry.npmjs.org/negotiator/0.2.5
395 silly registry.get cb [ 304,
395 silly registry.get   { server: 'CouchDB/1.3.1 (Erlang OTP/R15B03)',
395 silly registry.get     etag: '"ABBGFF914GSDN2CNMDROFOFXN"',
395 silly registry.get     date: 'Mon, 28 Oct 2013 14:25:02 GMT',
395 silly registry.get     'content-length': '0' } ]
396 verbose etag negotiator/0.2.5 from cache
397 http 304 https://registry.npmjs.org/node-uuid/1.4.0
398 silly registry.get cb [ 304,
398 silly registry.get   { server: 'CouchDB/1.3.1 (Erlang OTP/R15B03)',
398 silly registry.get     etag: '"4DHO08MXIKSJAG3PBNLVJ8GWM"',
398 silly registry.get     date: 'Mon, 28 Oct 2013 14:25:02 GMT',
398 silly registry.get     'content-length': '0' } ]
399 verbose etag node-uuid/1.4.0 from cache
400 http 304 https://registry.npmjs.org/lru-cache/2.3.0
401 silly registry.get cb [ 304,
401 silly registry.get   { server: 'CouchDB/1.3.1 (Erlang OTP/R15B03)',
401 silly registry.get     etag: '"14VF40U499GDAIDK33TEOG56Q"',
401 silly registry.get     date: 'Mon, 28 Oct 2013 14:25:02 GMT',
401 silly registry.get     'content-length': '0' } ]
402 verbose etag lru-cache/2.3.0 from cache
403 verbose read json /home/vagrant/.npm/mime/1.2.9/package/package.json
404 verbose read json /home/vagrant/.npm/negotiator/0.2.5/package/package.json
405 verbose read json /home/vagrant/.npm/node-uuid/1.4.0/package/package.json
406 verbose read json /home/vagrant/.npm/lru-cache/2.3.0/package/package.json
407 silly lockFile 24648bbc-mime-1-2-9 mime@1.2.9
408 silly lockFile 24648bbc-mime-1-2-9 mime@1.2.9
409 silly lockFile 87a22aa4-negotiator-0-2-5 negotiator@0.2.5
410 silly lockFile 87a22aa4-negotiator-0-2-5 negotiator@0.2.5
411 silly lockFile 788da469-node-uuid-1-4-0 node-uuid@1.4.0
412 silly lockFile 788da469-node-uuid-1-4-0 node-uuid@1.4.0
413 silly lockFile 14cd0f37-lru-cache-2-3-0 lru-cache@2.3.0
414 silly lockFile 14cd0f37-lru-cache-2-3-0 lru-cache@2.3.0
415 http 304 https://registry.npmjs.org/qs/0.6.4
416 silly registry.get cb [ 304,
416 silly registry.get   { server: 'CouchDB/1.3.1 (Erlang OTP/R15B03)',
416 silly registry.get     etag: '"A0908O91HJF6S9ZO1VDAN636E"',
416 silly registry.get     date: 'Mon, 28 Oct 2013 14:25:02 GMT',
416 silly registry.get     'content-length': '0' } ]
417 verbose etag qs/0.6.4 from cache
418 verbose read json /home/vagrant/.npm/qs/0.6.4/package/package.json
419 silly lockFile 21f2b672-qs-0-6-4 qs@0.6.4
420 silly lockFile 21f2b672-qs-0-6-4 qs@0.6.4
421 http 304 https://registry.npmjs.org/semver/1.1.4
422 silly registry.get cb [ 304,
422 silly registry.get   { server: 'CouchDB/1.3.1 (Erlang OTP/R15B03)',
422 silly registry.get     etag: '"DWYD1H2ZPCYQYDO3FM5CDFM9E"',
422 silly registry.get     date: 'Mon, 28 Oct 2013 14:25:02 GMT',
422 silly registry.get     'content-length': '0' } ]
423 verbose etag semver/1.1.4 from cache
424 http 304 https://registry.npmjs.org/spdy/1.8.2
425 silly registry.get cb [ 304,
425 silly registry.get   { server: 'CouchDB/1.3.1 (Erlang OTP/R15B03)',
425 silly registry.get     etag: '"86LHP0GI484BKMZHH6QB6TSJP"',
425 silly registry.get     date: 'Mon, 28 Oct 2013 14:25:02 GMT',
425 silly registry.get     'content-length': '0' } ]
426 verbose etag spdy/1.8.2 from cache
427 http 304 https://registry.npmjs.org/verror/1.3.6
428 silly registry.get cb [ 304,
428 silly registry.get   { server: 'CouchDB/1.3.1 (Erlang OTP/R15B03)',
428 silly registry.get     etag: '"2D3X3FFX8NNI11GJ0FR78PUB9"',
428 silly registry.get     date: 'Mon, 28 Oct 2013 14:25:02 GMT',
428 silly registry.get     'content-length': '0' } ]
429 verbose etag verror/1.3.6 from cache
430 verbose read json /home/vagrant/.npm/semver/1.1.4/package/package.json
431 verbose read json /home/vagrant/.npm/spdy/1.8.2/package/package.json
432 verbose read json /home/vagrant/.npm/verror/1.3.6/package/package.json
433 silly lockFile da52979e-semver-1-1-4 semver@1.1.4
434 silly lockFile da52979e-semver-1-1-4 semver@1.1.4
435 silly lockFile 558b3c88-spdy-1-8-2 spdy@1.8.2
436 silly lockFile 558b3c88-spdy-1-8-2 spdy@1.8.2
437 silly lockFile 0ec1cdd2-verror-1-3-6 verror@1.3.6
438 silly lockFile 0ec1cdd2-verror-1-3-6 verror@1.3.6
439 http 304 https://registry.npmjs.org/once/1.1.1
440 silly registry.get cb [ 304,
440 silly registry.get   { server: 'CouchDB/1.3.1 (Erlang OTP/R15B03)',
440 silly registry.get     etag: '"5EVD9F3N8WC7PWWZT58JF8JR6"',
440 silly registry.get     date: 'Mon, 28 Oct 2013 14:25:02 GMT',
440 silly registry.get     'content-length': '0' } ]
441 verbose etag once/1.1.1 from cache
442 verbose read json /home/vagrant/.npm/once/1.1.1/package/package.json
443 silly lockFile 6beab3c4-once-1-1-1 once@1.1.1
444 silly lockFile 6beab3c4-once-1-1-1 once@1.1.1
445 http 304 https://registry.npmjs.org/assert-plus/0.1.2
446 silly registry.get cb [ 304,
446 silly registry.get   { server: 'CouchDB/1.3.1 (Erlang OTP/R15B03)',
446 silly registry.get     etag: '"36PSGZJHVE05XDWT91B4YO6Q7"',
446 silly registry.get     date: 'Mon, 28 Oct 2013 14:25:02 GMT',
446 silly registry.get     'content-length': '0' } ]
447 verbose etag assert-plus/0.1.2 from cache
448 verbose read json /home/vagrant/.npm/assert-plus/0.1.2/package/package.json
449 silly lockFile 46222085-assert-plus-0-1-2 assert-plus@0.1.2
450 silly lockFile 46222085-assert-plus-0-1-2 assert-plus@0.1.2
451 http 304 https://registry.npmjs.org/backoff/2.2.0
452 silly registry.get cb [ 304,
452 silly registry.get   { server: 'CouchDB/1.3.1 (Erlang OTP/R15B03)',
452 silly registry.get     etag: '"LCE95P87QRLUFCH9PO4X9UW2"',
452 silly registry.get     date: 'Mon, 28 Oct 2013 14:25:02 GMT',
452 silly registry.get     'content-length': '0' } ]
453 verbose etag backoff/2.2.0 from cache
454 verbose read json /home/vagrant/.npm/backoff/2.2.0/package/package.json
455 silly lockFile 9e18893d-backoff-2-2-0 backoff@2.2.0
456 silly lockFile 9e18893d-backoff-2-2-0 backoff@2.2.0
457 silly resolved [ { name: 'deep-equal',
457 silly resolved     version: '0.0.0',
457 silly resolved     description: 'node\'s assert.deepEqual algorithm',
457 silly resolved     main: 'index.js',
457 silly resolved     directories: { lib: '.', example: 'example', test: 'test' },
457 silly resolved     scripts: { test: 'tap test/*.js' },
457 silly resolved     devDependencies: { tap: '0.0.x' },
457 silly resolved     repository:
457 silly resolved      { type: 'git',
457 silly resolved        url: 'http://github.com/substack/node-deep-equal.git' },
457 silly resolved     keywords: [ 'equality', 'equal', 'compare' ],
457 silly resolved     author:
457 silly resolved      { name: 'James Halliday',
457 silly resolved        email: 'mail@substack.net',
457 silly resolved        url: 'http://substack.net' },
457 silly resolved     license: 'MIT/X11',
457 silly resolved     engine: { node: '>=0.4' },
457 silly resolved     readme: 'deep-equal\n==========\n\nNode\'s `assert.deepEqual() algorithm` as a standalone module.\n\nexample\n=======\n\n``` js\nvar equal = require(\'deep-equal\');\nconsole.dir([\n    equal(\n        { a : [ 2, 3 ], b : [ 4 ] },\n        { a : [ 2, 3 ], b : [ 4 ] }\n    ),\n    equal(\n        { x : 5, y : [6] },\n        { x : 5, y : 6 }\n    )\n]);\n```\n\nmethods\n=======\n\nvar deepEqual = require(\'deep-equal\')\n\ndeepEqual(a, b)\n---------------\n\nCompare objects `a` and `b`, returning whether they are equal according to a\nrecursive equality algorithm.\n\ninstall\n=======\n\nWith [npm](http://npmjs.org) do:\n\n```\nnpm install deep-equal\n```\n\ntest\n====\n\nWith [npm](http://npmjs.org) do:\n\n```\nnpm test\n```\n\nlicense\n=======\n\nMIT. Derived largely from node\'s assert module.\n',
457 silly resolved     readmeFilename: 'README.markdown',
457 silly resolved     _id: 'deep-equal@0.0.0',
457 silly resolved     _from: 'deep-equal@0.0.0' },
457 silly resolved   { name: 'bunyan',
457 silly resolved     version: '0.21.1',
457 silly resolved     description: 'a JSON Logger library for node.js services',
457 silly resolved     author:
457 silly resolved      { name: 'Trent Mick',
457 silly resolved        email: 'trentm@gmail.com',
457 silly resolved        url: 'http://trentm.com' },
457 silly resolved     main: './lib/bunyan.js',
457 silly resolved     bin: { bunyan: './bin/bunyan' },
457 silly resolved     repository: { type: 'git', url: 'git://github.com/trentm/node-bunyan.git' },
457 silly resolved     engines: [ 'node >=0.6.0' ],
457 silly resolved     keywords: [ 'log', 'logging', 'log4j', 'json' ],
457 silly resolved     dependencies: { mv: '0.0.5', 'dtrace-provider': '0.2.8' },
457 silly resolved     '// comment': '\'mv\' required for RotatingFileStream',
457 silly resolved     optionalDependencies: { mv: '0.0.5', 'dtrace-provider': '0.2.8' },
457 silly resolved     devDependencies: { nodeunit: '0.7.4', ben: '0.0.0', verror: '1.3.3' },
457 silly resolved     scripts: { test: 'make test' },
457 silly resolved     contributors:
457 silly resolved      [ [Object],
457 silly resolved        [Object],
457 silly resolved        [Object],
457 silly resolved        [Object],
457 silly resolved        [Object],
457 silly resolved        [Object],
457 silly resolved        [Object] ],
457 silly resolved     readme: 'Bunyan is **a simple and fast JSON logging library** for node.js services:\n\n    var bunyan = require(\'bunyan\');\n    var log = bunyan.createLogger({name: "myapp"});\n    log.info("hi");\n\nand **a `bunyan` CLI tool** for nicely viewing those logs:\n\n![bunyan CLI screenshot](https://raw.github.com/trentm/node-bunyan/master/tools/screenshot1.png)\n\nManifesto: Server logs should be structured. JSON\'s a good format. Let\'s do\nthat. A log record is one line of `JSON.stringify`\'d output. Let\'s also\nspecify some common names for the requisite and common fields for a log\nrecord (see below).\n\nAlso: log4j is way more than you need.\n\n\n# Current Status\n\nSolid core functionality is there. Joyent is using this for a number of\nproduction services. Bunyan supports node 0.6 and greater. Follow\n<a href="https://twitter.com/intent/user?screen_name=trentmick" target="_blank">@trentmick</a>\nfor updates to Bunyan.\n\n\n# Installation\n\n    npm install bunyan\n\n**Tip**: The `bunyan` CLI tool is written to be compatible (within reason) with\nall versions of Bunyan logs. Therefore you might want to `npm install -g bunyan`\nto get the bunyan CLI on your PATH, then use local bunyan installs for\nnode.js library usage of bunyan in your apps.\n\n\n# Features\n\n- elegant [log method API](#log-method-api)\n- extensible [streams](#streams) system for controlling where log records\n  go (to a stream, to a file, [log file rotation](#stream-type-rotating-file),\n  etc.)\n- [`bunyan` CLI](#cli-usage) for pretty-printing and filtering of Bunyan logs\n- simple include of log call source location (file, line, function) with\n  [`src: true`](#src)\n- light-weight specialization of Logger instances with [`log.child`](#logchild)\n- custom rendering of logged objects with ["serializers"](#serializers)\n- [Dtrace support](#dtrace-support)\n\n\n# Introduction\n\nLike most logging libraries you create a Logger instance and call methods\nnamed after the logging levels:\n\n    $ cat hi.js\n    var bunyan = require(\'bunyan\');\n    var log = bunyan.createLogger({name: \'myapp\'});\n    log.info(\'hi\');\n    log.warn({lang: \'fr\'}, \'au revoir\');\n\nAll loggers must provide a "name". This is somewhat akin to the log4j logger\n"name", but Bunyan doesn\'t do hierarchical logger names.\n\n**Bunyan log records are JSON.** A few fields are added automatically:\n"pid", "hostname", "time" and "v".\n\n    $ node hi.js\n    {"name":"myapp","hostname":"banana.local","pid":40161,"level":30,"msg":"hi","time":"2013-01-04T18:46:23.851Z","v":0}\n    {"name":"myapp","hostname":"banana.local","pid":40161,"level":40,"lang":"fr","msg":"au revoir","time":"2013-01-04T18:46:23.853Z","v":0}\n\n\n## Log Method API\n\nThe example above shows two different ways to call `log.info(...)`. The\nfull API is:\n\n    log.info();     // Returns a boolean: is the "info" level enabled?\n                    // This is equivalent to `log.isInfoEnabled()` or\n                    // `log.isEnabledFor(INFO)` in log4j.\n\n    log.info(\'hi\');                     // Log a simple string message.\n    log.info(\'hi %s\', bob, anotherVar); // Uses `util.format` for msg formatting.\n\n    log.info({foo: \'bar\'}, \'hi\');\n                    // Adds "foo" field to log record. You can add any number\n                    // of additional fields here.\n\n    log.info(err);  // Special case to log an `Error` instance to the record.\n                    // This adds an "err" field with exception details\n                    // (including the stack) and sets "msg" to the exception\n                    // message.\n    log.info(err, \'more on this: %s\', more);\n                    // ... or you can specify the "msg".\n\nNote that this implies **you cannot pass any object as the first argument\nto log it**. IOW, `log.info(mywidget)` may not be what you expect. Instead\nof a string representation of `mywidget` that other logging libraries may\ngive you, Bunyan will try to JSON-ify your object. It is a Bunyan best\npractice to always give a field name to included objects, e.g.:\n\n    log.info({widget: mywidget}, ...)\n\nThis will dove-tail with [Bunyan serializer support](#serializers), discussed\nlater.\n\nThe same goes for all of Bunyan\'s log levels: `log.trace`, `log.debug`,\n`log.info`, `log.warn`, and `log.fatal`. See the [levels section](#levels)\nbelow for details and suggestions.\n\n\n## CLI Usage\n\nBunyan log output is a stream of JSON objects. This is great for processing,\nbut not for reading directly. A **`bunyan` tool** is provided **for\npretty-printing bunyan logs** and for **filtering** (e.g.\n`| bunyan -c \'this.foo == "bar"\'`). Using our example above:\n\n    $ node hi.js | ./bin/bunyan\n    [2013-01-04T19:01:18.241Z]  INFO: myapp/40208 on banana.local: hi\n    [2013-01-04T19:01:18.242Z]  WARN: myapp/40208 on banana.local: au revoir (lang=fr)\n\nSee the screenshot above for an example of the default coloring of rendered\nlog output. That example also shows the nice formatting automatically done for\nsome well-known log record fields (e.g. `req` is formatted like an HTTP request,\n`res` like an HTTP response, `err` like an error stack trace).\n\nOne interesting feature is **filtering** of log content, which can be useful\nfor digging through large log files or for analysis. We can filter only\nrecords above a certain level:\n\n    $ node hi.js | bunyan -l warn\n    [2013-01-04T19:08:37.182Z]  WARN: myapp/40353 on banana.local: au revoir (lang=fr)\n\nOr filter on the JSON fields in the records (e.g. only showing the French\nrecords in our contrived example):\n\n    $ node hi.js | bunyan -c \'this.lang == "fr"\'\n    [2013-01-04T19:08:26.411Z]  WARN: myapp/40342 on banana.local: au revoir (lang=fr)\n\nSee `bunyan --help` for other facilities.\n\n\n## Streams Introduction\n\nBy default, log output is to stdout and at the "info" level. Explicitly that\nlooks like:\n\n    var log = bunyan.createLogger({\n        name: \'myapp\',\n        stream: process.stdout,\n        level: \'info\'\n    });\n\nThat is an abbreviated form for a single stream. **You can define multiple\nstreams at different levels**.\n\n    var log = bunyan.createLogger({\n      name: \'myapp\',\n      streams: [\n        {\n          level: \'info\',\n          stream: process.stdout,           // log INFO and above to stdout\n        },\n        {\n          level: \'error\',\n          path: \'/var/log/myapp-error.log\'  // log ERROR and above to a file\n        }\n      ]\n    });\n\nMore on streams in the [Streams section](#streams) below.\n\n\n## log.child\n\nBunyan has a concept of a child logger to **specialize a logger for a\nsub-component of your application**, i.e. to create a new logger with\nadditional bound fields that will be included in its log records. A child\nlogger is created with `log.child(...)`.\n\nIn the following example, logging on a "Wuzzle" instance\'s `this.log` will\nbe exactly as on the parent logger with the addition of the `widget_type`\nfield:\n\n    var bunyan = require(\'bunyan\');\n    var log = bunyan.createLogger({name: \'myapp\'});\n\n    function Wuzzle(options) {\n        this.log = options.log.child({widget_type: \'wuzzle\'});\n        this.log.info(\'creating a wuzzle\')\n    }\n    Wuzzle.prototype.woos = function () {\n        this.log.warn(\'This wuzzle is woosey.\')\n    }\n\n    log.info(\'start\');\n    var wuzzle = new Wuzzle({log: log});\n    wuzzle.woos();\n    log.info(\'done\');\n\nRunning that looks like (raw):\n\n    $ node myapp.js\n    {"name":"myapp","hostname":"myhost","pid":34572,"level":30,"msg":"start","time":"2013-01-04T07:47:25.814Z","v":0}\n    {"name":"myapp","hostname":"myhost","pid":34572,"widget_type":"wuzzle","level":30,"msg":"creating a wuzzle","time":"2013-01-04T07:47:25.815Z","v":0}\n    {"name":"myapp","hostname":"myhost","pid":34572,"widget_type":"wuzzle","level":40,"msg":"This wuzzle is woosey.","time":"2013-01-04T07:47:25.815Z","v":0}\n    {"name":"myapp","hostname":"myhost","pid":34572,"level":30,"msg":"done","time":"2013-01-04T07:47:25.816Z","v":0}\n\nAnd with the `bunyan` CLI (using the "short" output mode):\n\n    $ node myapp.js  | bunyan -o short\n    07:46:42.707Z  INFO myapp: start\n    07:46:42.709Z  INFO myapp: creating a wuzzle (widget_type=wuzzle)\n    07:46:42.709Z  WARN myapp: This wuzzle is woosey. (widget_type=wuzzle)\n    07:46:42.709Z  INFO myapp: done\n\n\nA more practical example is in the\n[node-restify](https://github.com/mcavage/node-restify) web framework.\nRestify uses Bunyan for its logging. One feature of its integration, is that\neach restify request handler includes a `req.log` logger that is:\n\n    log.child({req_id: <unique request id>}, true)\n\nApps using restify can then use `req.log` and have all such log records\ninclude the unique request id (as "req_id"). Handy.\n\n\n## Serializers\n\nBunyan has a concept of **"serializers" to produce a JSON-able object from a\nJavaScript object**, so you can easily do the following:\n\n    log.info({req: <request object>}, \'something about handling this request\');\n\nSerializers is a mapping of log record field name, "req" in this example, to\na serializer function. That looks like this:\n\n    function reqSerializer(req) {\n        return {\n            method: req.method,\n            url: req.url,\n            headers: req.headers\n        }\n    }\n    var log = bunyan.createLogger({\n        name: \'myapp\',\n        serializers: {\n            req: reqSerializer\n        }\n    });\n\nOr this:\n\n    var log = bunyan.createLogger({\n        name: \'myapp\',\n        serializers: {req: bunyan.stdSerializers.req}\n    });\n\nbecause Buyan includes a small set of standard serializers. To use all the\nstandard serializers you can use:\n\n    var log = bunyan.createLogger({\n      ...\n      serializers: bunyan.stdSerializers\n    });\n\n**Note**: Your own serializers should never throw, otherwise you\'ll get an\nugly message on stderr from Bunyan (along with the traceback) and the field\nin your log record will be replaced with a short error message.\n\n\n## src\n\nThe **source file, line and function of the log call site** can be added to\nlog records by using the `src: true` config option:\n\n    var log = bunyan.createLogger({src: true, ...});\n\nThis adds the call source info with the \'src\' field, like this:\n\n    {\n      "name": "src-example",\n      "hostname": "banana.local",\n      "pid": 123,\n      "component": "wuzzle",\n      "level": 4,\n      "msg": "This wuzzle is woosey.",\n      "time": "2012-02-06T04:19:35.605Z",\n      "src": {\n        "file": "/Users/trentm/tm/node-bunyan/examples/src.js",\n        "line": 20,\n        "func": "Wuzzle.woos"\n      },\n      "v": 0\n    }\n\n**WARNING: Determining the call source info is slow. Never use this option\nin production.**\n\n\n# Levels\n\nThe log levels in bunyan are as follows. The level descriptions are best\npractice *opinions*.\n\n- "fatal" (60): The service/app is going to stop or become unusable now.\n  An operator should definitely look into this soon.\n- "error" (50): Fatal for a particular request, but the service/app continues\n  servicing other requests. An operator should look at this soon(ish).\n- "warn" (40): A note on something that should probably be looked at by an\n  operator eventually.\n- "info" (30): Detail on regular operation.\n- "debug" (20): Anything else, i.e. too verbose to be included in "info" level.\n- "trace" (10): Logging from external libraries used by your app or *very*\n  detailed application logging.\n\nSuggestions: Use "debug" sparingly. Information that will be useful to debug\nerrors *post mortem* should usually be included in "info" messages if it\'s\ngenerally relevant or else with the corresponding "error" event. Don\'t rely\non spewing mostly irrelevant debug messages all the time and sifting through\nthem when an error occurs.\n\nIntegers are used for the actual level values (10 for "trace", ..., 60 for\n"fatal") and constants are defined for the (bunyan.TRACE ... bunyan.DEBUG).\nThe lowercase level names are aliases supported in the API.\n\nHere is the API for changing levels in an existing logger:\n\n    log.level() -> INFO   // gets current level (lowest level of all streams)\n\n    log.level(INFO)       // set all streams to level INFO\n    log.level("info")     // set all streams to level INFO\n\n    log.levels() -> [DEBUG, INFO]   // get array of levels of all streams\n    log.levels(0) -> DEBUG          // get level of stream at index 0\n    log.levels("foo")               // get level of stream with name "foo"\n\n    log.levels(0, INFO)             // set level of stream 0 to INFO\n    log.levels(0, "info")           // can use "info" et al aliases\n    log.levels("foo", WARN)         // set stream named "foo" to WARN\n\n\n\n# Log Record Fields\n\nThis section will describe *rules* for the Bunyan log format: field names,\nfield meanings, required fields, etc. However, a Bunyan library doesn\'t\nstrictly enforce all these rules while records are being emitted. For example,\nBunyan will add a `time` field with the correct format to your log records,\nbut you can specify your own. It is the caller\'s responsibility to specify\nthe appropriate format.\n\nThe reason for the above leniency is because IMO logging a message should\nnever break your app. This leads to this rule of logging: **a thrown\nexception from `log.info(...)` or equivalent (other than for calling with the\nincorrect signature) is always a bug in Bunyan.**\n\n\nA typical Bunyan log record looks like this:\n\n    {"name":"myserver","hostname":"banana.local","pid":123,"req":{"method":"GET","url":"/path?q=1#anchor","headers":{"x-hi":"Mom","connection":"close"}},"level":3,"msg":"start request","time":"2012-02-03T19:02:46.178Z","v":0}\n\nPretty-printed:\n\n    {\n      "name": "myserver",\n      "hostname": "banana.local",\n      "pid": 123,\n      "req": {\n        "method": "GET",\n        "url": "/path?q=1#anchor",\n        "headers": {\n          "x-hi": "Mom",\n          "connection": "close"\n        },\n        "remoteAddress": "120.0.0.1",\n        "remotePort": 51244\n      },\n      "level": 3,\n      "msg": "start request",\n      "time": "2012-02-03T19:02:57.534Z",\n      "v": 0\n    }\n\n\nCore fields:\n\n- `v`: Required. Integer. Added by Bunyan. Cannot be overriden.\n  This is the Bunyan log format version (`require(\'bunyan\').LOG_VERSION`).\n  The log version is a single integer. `0` is until I release a version\n  "1.0.0" of node-bunyan. Thereafter, starting with `1`, this will be\n  incremented if there is any backward incompatible change to the log record\n  format. Details will be in "CHANGES.md" (the change log).\n- `level`: Required. Integer. Added by Bunyan. Cannot be overriden.\n  See the "Levels" section.\n- `name`: Required. String. Provided at Logger creation.\n  You must specify a name for your logger when creating it. Typically this\n  is the name of the service/app using Bunyan for logging.\n- `hostname`: Required. String. Provided or determined at Logger creation.\n  You can specify your hostname at Logger creation or it will be retrieved\n  vi `os.hostname()`.\n- `pid`: Required. Integer. Filled in automatically at Logger creation.\n- `time`: Required. String. Added by Bunyan. Can be overriden.\n  The date and time of the event in [ISO 8601\n  Extended Format](http://en.wikipedia.org/wiki/ISO_8601) format and in UTC,\n  as from\n  [`Date.toISOString()`](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date/toISOString).\n- `msg`: Required. String.\n  Every `log.debug(...)` et al call must provide a log message.\n- `src`: Optional. Object giving log call source info. This is added\n  automatically by Bunyan if the "src: true" config option is given to the\n  Logger. Never use in production as this is really slow.\n\n\nGo ahead and add more fields, and nested ones are fine (and recommended) as\nwell. This is why we\'re using JSON. Some suggestions and best practices\nfollow (feedback from actual users welcome).\n\n\nRecommended/Best Practice Fields:\n\n- `err`: Object. A caught JS exception. Log that thing with `log.info(err)`\n    to get:\n\n        ...\n        "err": {\n          "message": "boom",\n          "name": "TypeError",\n          "stack": "TypeError: boom\\n    at Object.<anonymous> ..."\n        },\n        "msg": "boom",\n        ...\n\n    Or use the `bunyan.stdSerializers.err` serializer in your Logger and\n    do this `log.error({err: err}, "oops")`. See "examples/err.js".\n\n- `req_id`: String. A request identifier. Including this field in all logging\n  tied to handling a particular request to your server is strongly suggested.\n  This allows post analysis of logs to easily collate all related logging\n  for a request. This really shines when you have a SOA with multiple services\n  and you carry a single request ID from the top API down through all APIs\n  (as [node-restify](https://github.com/mcavage/node-restify) facilitates\n  with its \'X-Request-Id\' header).\n\n- `req`: An HTTP server request. Bunyan provides `bunyan.stdSerializers.req`\n  to serialize a request with a suggested set of keys. Example:\n\n        {\n          "method": "GET",\n          "url": "/path?q=1#anchor",\n          "headers": {\n            "x-hi": "Mom",\n            "connection": "close"\n          },\n          "remoteAddress": "120.0.0.1",\n          "remotePort": 51244\n        }\n\n- `res`: An HTTP server response. Bunyan provides `bunyan.stdSerializers.res`\n  to serialize a response with a suggested set of keys. Example:\n\n        {\n          "statusCode": 200,\n          "header": "HTTP/1.1 200 OK\\r\\nContent-Type: text/plain\\r\\nConnection: keep-alive\\r\\nTransfer-Encoding: chunked\\r\\n\\r\\n"\n        }\n\n\nOther fields to consider:\n\n- `req.username`: Authenticated user (or for a 401, the user attempting to\n  auth).\n- Some mechanism to calculate response latency. "restify" users will have\n  a "X-Response-Time" header. A `latency` custom field would be fine.\n- `req.body`: If you know that request bodies are small (common in APIs,\n  for example), then logging the request body is good.\n\n\n# Streams\n\nA "stream" is Bunyan\'s name for an output for log messages (the equivalent\nto a log4j Appender). Ultimately Bunyan uses a\n[Writable Stream](http://nodejs.org/docs/latest/api/all.html#writable_Stream)\ninterface, but there are some additional attributes used to create and\nmanage the stream. A Bunyan Logger instance has one or more streams.\nIn general streams are specified with the "streams" option:\n\n    var bunyan = require(\'bunyan\');\n    var log = bunyan.createLogger({\n        name: "foo",\n        streams: [\n            {\n                stream: process.stderr,\n                level: "debug"\n            },\n            ...\n        ]\n    });\n\nFor convenience, if there is only one stream, it can specified with the\n"stream" and "level" options (internally converted to a `Logger.streams`).\n\n    var log = bunyan.createLogger({\n        name: "foo",\n        stream: process.stderr,\n        level: "debug"\n    });\n\nNote that "file" streams do not support this shortcut (partly for historical\nreasons and partly to not make it difficult to add a literal "path" field\non log records).\n\nIf neither "streams" nor "stream" are specified, the default is a stream of\ntype "stream" emitting to `process.stdout` at the "info" level.\n\n\n## stream errors\n\nBunyan re-emits error events from the created `WriteStream`. So you can\ndo this:\n\n    var log = bunyan.createLogger({name: \'mylog\', streams: [{path: LOG_PATH}]});\n    log.on(\'error\', function (err, stream) {\n        // Handle stream write or create error here.\n    });\n\n\n## stream type: `stream`\n\nA `type === \'stream\'` is a plain ol\' node.js [Writable\nStream](http://nodejs.org/docs/latest/api/all.html#writable_Stream). A\n"stream" (the writeable stream) field is required. E.g.: `process.stdout`,\n`process.stderr`.\n\n    var log = bunyan.createLogger({\n        name: \'foo\',\n        streams: [{\n            stream: process.stderr\n            // `type: \'stream\'` is implied\n        }]\n    });\n\n<table>\n<tr>\n<th>Field</th>\n<th>Required?</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n<tr>\n<td>stream</td>\n<td>Yes</td>\n<td>-</td>\n<td>A "Writable Stream", e.g. a std handle or an open file write stream.</td>\n</tr>\n<tr>\n<td>type</td>\n<td>No</td>\n<td>n/a</td>\n<td>`type == \'stream\'` is implied if the `stream` field is given.</td>\n</tr>\n<tr>\n<td>level</td>\n<td>No</td>\n<td>info</td>\n<td>The level at which logging to this stream is enabled. If not\nspecified it defaults to "info". If specified this can be one of the\nlevel strings ("trace", "debug", ...) or constants (`bunyan.TRACE`,\n`bunyan.DEBUG`, ...).</td>\n</tr>\n<tr>\n<td>name</td>\n<td>No</td>\n<td>-</td>\n<td>A name for this stream. This may be useful for usage of `log.level(NAME,\nLEVEL)`. See the [Levels section](#levels) for details. A stream "name" isn\'t\nused for anything else.</td>\n</tr>\n</table>\n\n\n## stream type: `file`\n\nA `type === \'file\'` stream requires a "path" field. Bunyan will open this\nfile for appending. E.g.:\n\n    var log = bunyan.createLogger({\n        name: \'foo\',\n        streams: [{\n            path: \'/var/log/foo.log\',\n            // `type: \'file\'` is implied\n        }]\n    });\n\n<table>\n<tr>\n<th>Field</th>\n<th>Required?</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n<tr>\n<td>path</td>\n<td>Yes</td>\n<td>-</td>\n<td>A file path to which to log.</td>\n</tr>\n<tr>\n<td>type</td>\n<td>No</td>\n<td>n/a</td>\n<td>`type == \'file\'` is implied if the `path` field is given.</td>\n</tr>\n<tr>\n<td>level</td>\n<td>No</td>\n<td>info</td>\n<td>The level at which logging to this stream is enabled. If not\nspecified it defaults to "info". If specified this can be one of the\nlevel strings ("trace", "debug", ...) or constants (`bunyan.TRACE`,\n`bunyan.DEBUG`, ...).</td>\n</tr>\n<tr>\n<td>name</td>\n<td>No</td>\n<td>-</td>\n<td>A name for this stream. This may be useful for usage of `log.level(NAME,\nLEVEL)`. See the [Levels section](#levels) for details. A stream "name" isn\'t\nused for anything else.</td>\n</tr>\n</table>\n\n\n## stream type: `rotating-file`\n\nA `type === \'rotating-file\'` is a file stream that handles file automatic\nrotation.\n\n    var log = bunyan.createLogger({\n        name: \'foo\',\n        streams: [{\n            type: \'rotating-file\',\n            path: \'/var/log/foo.log\',\n            period: \'1d\',   // daily rotation\n            count: 3        // keep 3 back copies\n        }]\n    });\n\nThis will rotate \'/var/log/foo.log\' every day (at midnight) to:\n\n    /var/log/foo.log.0     # yesterday\n    /var/log/foo.log.1     # 1 day ago\n    /var/log/foo.log.2     # 2 days ago\n\n*Currently*, there is no support for providing a template for the rotated\nfiles, or for rotating when the log reaches a threshold size.\n\n<table>\n<tr>\n<th>Field</th>\n<th>Required?</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n<tr>\n<td>type</td>\n<td>Yes</td>\n<td>-</td>\n<td>"rotating-file"</td>\n</tr>\n<tr>\n<td>path</td>\n<td>Yes</td>\n<td>-</td>\n<td>A file path to which to log. Rotated files will be "$path.0",\n"$path.1", ...</td>\n</tr>\n<tr>\n<td>period</td>\n<td>No</td>\n<td>1d</td>\n<td>The period at which to rotate. This is a string of the format\n"$number$scope" where "$scope" is one of "h" (hours), "d" (days), "w" (weeks),\n"m" (months), "y" (years). Or one of the following names can be used\n"hourly" (means 1h), "daily" (1d), "weekly" (1w), "monthly" (1m),\n"yearly" (1y). Rotation is done at the start of the scope: top of the hour (h),\nmidnight (d), start of Sunday (w), start of the 1st of the month (m),\nstart of Jan 1st (y).</td>\n</tr>\n<tr>\n<td>count</td>\n<td>No</td>\n<td>10</td>\n<td>The number of rotated files to keep.</td>\n</tr>\n<tr>\n<td>level</td>\n<td>No</td>\n<td>info</td>\n<td>The level at which logging to this stream is enabled. If not\nspecified it defaults to "info". If specified this can be one of the\nlevel strings ("trace", "debug", ...) or constants (`bunyan.TRACE`,\n`bunyan.DEBUG`, ...).</td>\n</tr>\n<tr>\n<td>name</td>\n<td>No</td>\n<td>-</td>\n<td>A name for this stream. This may be useful for usage of `log.level(NAME,\nLEVEL)`. See the [Levels section](#levels) for details. A stream "name" isn\'t\nused for anything else.</td>\n</tr>\n</table>\n\n\n\n## stream type: `raw`\n\n- `raw`: Similar to a "stream" writeable stream, except that the write method\n  is given raw log record *Object*s instead of a JSON-stringified string.\n  This can be useful for hooking on further processing to all Bunyan logging:\n  pushing to an external service, a RingBuffer (see below), etc.\n\n\n\n## `raw` + RingBuffer Stream\n\nBunyan comes with a special stream called a RingBuffer which keeps the last N\nrecords in memory and does *not* write the data anywhere else.  One common\nstrategy is to log \'info\' and higher to a normal log file but log all records\n(including \'trace\') to a ringbuffer that you can access via a debugger, or your\nown HTTP interface, or a post-mortem facility like MDB or node-panic.\n\nTo use a RingBuffer:\n\n    /* Create a ring buffer that stores the last 100 records. */\n    var bunyan = require(\'bunyan\');\n    var ringbuffer = new bunyan.RingBuffer({ limit: 100 });\n    var log = bunyan.createLogger({\n        name: \'foo\',\n        streams: [\n            {\n                level: \'info\',\n                stream: process.stdout\n            },\n            {\n                level: \'trace\',\n                type: \'raw\',    // use \'raw\' to get raw log record objects\n                stream: ringbuffer\n            }\n        ]\n    });\n\n    log.info(\'hello world\');\n    console.log(ringbuffer.records);\n\nThis example emits:\n\n    [ { name: \'foo\',\n        hostname: \'912d2b29\',\n        pid: 50346,\n        level: 30,\n        msg: \'hello world\',\n        time: \'2012-06-19T21:34:19.906Z\',\n        v: 0 } ]\n\n\n## third-party streams\n\n- syslog:\n  [mcavage/node-bunyan-syslog](https://github.com/mcavage/node-bunyan-syslog)\n  provides support for directing bunyan logging to a syslog server.\n\n- TODO: eventually https://github.com/trentm/node-bunyan-winston\n\n\n\n# DTrace support\n\nOn systems that support DTrace (e.g., MacOS, FreeBSD, illumos derivatives\nlike SmartOS and OmniOS), Bunyan will create a DTrace provider (`bunyan`)\nthat makes available the following probes:\n\n    log-trace\n    log-debug\n    log-info\n    log-warn\n    log-error\n    log-fatal\n\nEach of these probes has a single argument: the string that would be\nwritten to the log.  Note that when a probe is enabled, it will\nfire whenever the corresponding function is called, even if the level of\nthe log message is less than that of any stream.\n\n\n## DTrace examples\n\nTrace all log messages coming from any Bunyan module on the system.\n(The `-x strsize=4k` is to raise dtrace\'s default 256 byte buffer size\nbecause log messages are longer than typical dtrace probes.)\n\n    dtrace -x strsize=4k -qn \'bunyan*:::log-*{printf("%d: %s: %s", pid, probefunc, copyinstr(arg0))}\'\n\nTrace all log messages coming from the "wuzzle" component:\n\n    dtrace -x strsize=4k -qn \'bunyan*:::log-*/strstr(this->str = copyinstr(arg0), "\\"component\\":\\"wuzzle\\"") != NULL/{printf("%s", this->str)}\'\n\nAggregate debug messages from process 1234, by message:\n\n    dtrace -x strsize=4k -n \'bunyan1234:::log-debug{@[copyinstr(arg0)] = count()}\'\n\nHave the bunyan CLI pretty-print the traced logs:\n\n    dtrace -x strsize=4k -qn \'bunyan1234:::log-*{printf("%s", copyinstr(arg0))}\' | bunyan\n\nA convenience handle has been made for this:\n\n    bunyan -p 1234\n\n\nOn systems that support the\n[`jstack`](http://dtrace.org/blogs/dap/2012/04/25/profiling-node-js/) action\nvia a node.js helper, get a stack backtrace for any debug message that\nincludes the string "danger!":\n\n    dtrace -x strsize=4k -qn \'log-debug/strstr(copyinstr(arg0), "danger!") != NULL/{printf("\\n%s", copyinstr(arg0)); jstack()}\'\n\nOutput of the above might be:\n\n    {"name":"foo","hostname":"763bf293-d65c-42d5-872b-4abe25d5c4c7.local","pid":12747,"level":20,"msg":"danger!","time":"2012-10-30T18:28:57.115Z","v":0}\n\n              node`0x87e2010\n              DTraceProviderBindings.node`usdt_fire_probe+0x32\n              DTraceProviderBindings.node`_ZN4node11DTraceProbe5_fireEN2v85LocalINS1_5ValueEEE+0x32d\n              DTraceProviderBindings.node`_ZN4node11DTraceProbe4FireERKN2v89ArgumentsE+0x77\n              << internal code >>\n              (anon) as (anon) at /root/node-bunyan/lib/bunyan.js position 40484\n              << adaptor >>\n              (anon) as doit at /root/my-prog.js position 360\n              (anon) as list.ontimeout at timers.js position 4960\n              << adaptor >>\n              << internal >>\n              << entry >>\n              node`_ZN2v88internalL6InvokeEbNS0_6HandleINS0_10JSFunctionEEENS1_INS0_6ObjectEEEiPS5_Pb+0x101\n              node`_ZN2v88internal9Execution4CallENS0_6HandleINS0_6ObjectEEES4_iPS4_Pbb+0xcb\n              node`_ZN2v88Function4CallENS_6HandleINS_6ObjectEEEiPNS1_INS_5ValueEEE+0xf0\n              node`_ZN4node12MakeCallbackEN2v86HandleINS0_6ObjectEEENS1_INS0_8FunctionEEEiPNS1_INS0_5ValueEEE+0x11f\n              node`_ZN4node12MakeCallbackEN2v86HandleINS0_6ObjectEEENS1_INS0_6StringEEEiPNS1_INS0_5ValueEEE+0x66\n              node`_ZN4node9TimerWrap9OnTimeoutEP10uv_timer_si+0x63\n              node`uv__run_timers+0x66\n              node`uv__run+0x1b\n              node`uv_run+0x17\n              node`_ZN4node5StartEiPPc+0x1d0\n              node`main+0x1b\n              node`_start+0x83\n\n              node`0x87e2010\n              DTraceProviderBindings.node`usdt_fire_probe+0x32\n              DTraceProviderBindings.node`_ZN4node11DTraceProbe5_fireEN2v85LocalINS1_5ValueEEE+0x32d\n              DTraceProviderBindings.node`_ZN4node11DTraceProbe4FireERKN2v89ArgumentsE+0x77\n              << internal code >>\n              (anon) as (anon) at /root/node-bunyan/lib/bunyan.js position 40484\n              << adaptor >>\n              (anon) as doit at /root/my-prog.js position 360\n              (anon) as list.ontimeout at timers.js position 4960\n              << adaptor >>\n              << internal >>\n              << entry >>\n              node`_ZN2v88internalL6InvokeEbNS0_6HandleINS0_10JSFunctionEEENS1_INS0_6ObjectEEEiPS5_Pb+0x101\n              node`_ZN2v88internal9Execution4CallENS0_6HandleINS0_6ObjectEEES4_iPS4_Pbb+0xcb\n              node`_ZN2v88Function4CallENS_6HandleINS_6ObjectEEEiPNS1_INS_5ValueEEE+0xf0\n              node`_ZN4node12MakeCallbackEN2v86HandleINS0_6ObjectEEENS1_INS0_8FunctionEEEiPNS1_INS0_5ValueEEE+0x11f\n              node`_ZN4node12MakeCallbackEN2v86HandleINS0_6ObjectEEENS1_INS0_6StringEEEiPNS1_INS0_5ValueEEE+0x66\n              node`_ZN4node9TimerWrap9OnTimeoutEP10uv_timer_si+0x63\n              node`uv__run_timers+0x66\n              node`uv__run+0x1b\n              node`uv_run+0x17\n              node`_ZN4node5StartEiPPc+0x1d0\n              node`main+0x1b\n              node`_start+0x83\n\n\n# Versioning\n\nThe scheme I follow is most succintly described by the bootstrap guys\n[here](https://github.com/twitter/bootstrap#versioning).\n\ntl;dr: All versions are `<major>.<minor>.<patch>` which will be incremented for\nbreaking backward compat and major reworks, new features without breaking\nchange, and bug fixes, respectively.\n\n\n# License\n\nMIT. See "LICENSE.txt".\n\n\n# See Also\n\n- Bunyan syslog support: <https://github.com/mcavage/node-bunyan-syslog>.\n- Bunyan + Graylog2: <https://github.com/mhart/gelf-stream>.\n- An example of a Bunyan shim to the Winston logging system:\n  <https://github.com/trentm/node-bunyan-winston>.\n- [Bunyan for Bash](https://github.com/trevoro/bash-bunyan).\n- TODO: `RequestCaptureStream` example from restify.\n',
457 silly resolved     readmeFilename: 'README.md',
457 silly resolved     _id: 'bunyan@0.21.1',
457 silly resolved     _from: 'bunyan@0.21.1' },
457 silly resolved   { name: 'keep-alive-agent',
457 silly resolved     version: '0.0.1',
457 silly resolved     description: 'a keep-alive agent for http and https',
457 silly resolved     contributors: [ [Object], [Object] ],
457 silly resolved     main: 'index.js',
457 silly resolved     scripts: { test: 'mocha -R spec test/*.js' },
457 silly resolved     repository:
457 silly resolved      { type: 'git',
457 silly resolved        url: 'git://github.com/ceejbot/keep-alive-agent.git' },
457 silly resolved     keywords: [ 'keep-alive', 'http', 'https', 'agent' ],
457 silly resolved     license: 'MIT',
457 silly resolved     devDependencies: { chai: '*', mocha: '*' },
457 silly resolved     readme: '# keep-alive-agent\n\nkeep-alive-agent is an HTTP connection pool agent for node.js that re-uses sockets. It is simpler than some agents that also solve this problem because it does not attempt to replace the Agent provided by node. If you want to re-use connections, use this agent. If you want the default node behavior, use the default global agent.\n\n## Usage\n\n__new KeepAliveAgent(*options-hash*)__\n\nCreate an instance of the agent, passing the options hash through to the node Agent constructor. These options are in turn passed along to `createConnection()`. The KeepAliveAgent constructor does not use the options itself. The option you are most likely to change is `maxSockets`, which defaults to 5.\n\nTo use the agent instance, set it in the `agent` field of the options passed to `http.request()` or `http.get()`. See the [http.request() documentation](http://nodejs.org/api/http.html#http_http_request_options_callback) for details.\n\n__new KeepAliveAgent.Secure(*options-hash*)__\n\nA keep-alive agent that creates tls sockets. Use it the same way you use the http agent.\n\n## Examples\n\n```javascript\nvar http = require(\'http\'),\n    KeepAliveAgent = require(\'keep-alive-agent\');\n\nvar getOptions = {\n    hostname: \'twitter.com\',\n    port: 80,\n    path: \'/dshaw\',\n    agent: new KeepAliveAgent(),\n};\nhttp.get(getOptions, function(response)\n{\n\tresponse.pipe(process.stdout);\n});\n```\n\nTo re-use secure connections, use the Secure keep-alive agent:\n\n```javascript\nvar https = require(\'https\'),\n    KeepAliveAgent = require(\'keep-alive-agent\');\n\nvar getOptions = {\n    hostname: \'www.duckduckgo.com\',\n    port: 443,\n    path: \'/?q=unicorns\',\n    agent: new KeepAliveAgent.Secure(),\n};\nhttps.get(getOptions, function(response)\n{\n\tresponse.pipe(process.stdout);\n});\n```\n\n## See Also\n\nFor other implementations, see [agentkeepalive](https://github.com/TBEDP/agentkeepalive) and the [request](https://github.com/mikeal/request) module\'s [ForeverAgent](https://github.com/mikeal/request/blob/master/forever.js).\n\n## Licence\n\nMIT.\n',
457 silly resolved     readmeFilename: 'README.md',
457 silly resolved     _id: 'keep-alive-agent@0.0.1',
457 silly resolved     _from: 'keep-alive-agent@0.0.1' },
457 silly resolved   { name: 'escape-regexp-component',
457 silly resolved     description: 'Escape regular expression special characters',
457 silly resolved     version: '1.0.2',
457 silly resolved     keywords: [ 'escape', 'regexp', 'utility' ],
457 silly resolved     dependencies: {},
457 silly resolved     component: { scripts: [Object] },
457 silly resolved     readme: '\n# escape-regexp\n\n  Escape regular expression special characters.\n\n## Example\n\n```js\nvar escape = require(\'escape-regexp\');\nescape(str);\n```\n\n## License\n\n  MIT',
457 silly resolved     readmeFilename: 'Readme.md',
457 silly resolved     _id: 'escape-regexp-component@1.0.2',
457 silly resolved     _from: 'escape-regexp-component@1.0.2' },
457 silly resolved   { name: 'formidable',
457 silly resolved     description: 'A node.js module for parsing form data, especially file uploads.',
457 silly resolved     homepage: 'https://github.com/felixge/node-formidable',
457 silly resolved     version: '1.0.14',
457 silly resolved     devDependencies:
457 silly resolved      { gently: '0.8.0',
457 silly resolved        findit: '0.1.1',
457 silly resolved        hashish: '0.0.4',
457 silly resolved        urun: '~0.0.6',
457 silly resolved        utest: '0.0.3',
457 silly resolved        request: '~2.11.4' },
457 silly resolved     directories: { lib: './lib' },
457 silly resolved     main: './lib/index',
457 silly resolved     scripts: { test: 'node test/run.js', clean: 'rm test/tmp/*' },
457 silly resolved     engines: { node: '>=0.8.0' },
457 silly resolved     repository:
457 silly resolved      { type: 'git',
457 silly resolved        url: 'git://github.com/felixge/node-formidable.git' },
457 silly resolved     bugs: { url: 'http://github.com/felixge/node-formidable/issues' },
457 silly resolved     optionalDependencies: {},
457 silly resolved     readme: '# Formidable\n\n[![Build Status](https://secure.travis-ci.org/felixge/node-formidable.png?branch=master)](http://travis-ci.org/felixge/node-formidable)\n\n## Purpose\n\nA node.js module for parsing form data, especially file uploads.\n\n## Current status\n\nThis module was developed for [Transloadit](http://transloadit.com/), a service focused on uploading\nand encoding images and videos. It has been battle-tested against hundreds of GB of file uploads from\na large variety of clients and is considered production-ready.\n\n## Features\n\n* Fast (~500mb/sec), non-buffering multipart parser\n* Automatically writing file uploads to disk\n* Low memory footprint\n* Graceful error handling\n* Very high test coverage\n\n## Installation\n\nVia [npm](http://github.com/isaacs/npm):\n```\nnpm install formidable@latest\n```\nManually:\n```\ngit clone git://github.com/felixge/node-formidable.git formidable\nvim my.js\n# var formidable = require(\'./formidable\');\n```\n\nNote: Formidable requires [gently](http://github.com/felixge/node-gently) to run the unit tests, but you won\'t need it for just using the library.\n\n## Example\n\nParse an incoming file upload.\n```javascript\nvar formidable = require(\'formidable\'),\n    http = require(\'http\'),\n    util = require(\'util\');\n\nhttp.createServer(function(req, res) {\n  if (req.url == \'/upload\' && req.method.toLowerCase() == \'post\') {\n    // parse a file upload\n    var form = new formidable.IncomingForm();\n\n    form.parse(req, function(err, fields, files) {\n      res.writeHead(200, {\'content-type\': \'text/plain\'});\n      res.write(\'received upload:\\n\\n\');\n      res.end(util.inspect({fields: fields, files: files}));\n    });\n\n    return;\n  }\n\n  // show a file upload form\n  res.writeHead(200, {\'content-type\': \'text/html\'});\n  res.end(\n    \'<form action="/upload" enctype="multipart/form-data" method="post">\'+\n    \'<input type="text" name="title"><br>\'+\n    \'<input type="file" name="upload" multiple="multiple"><br>\'+\n    \'<input type="submit" value="Upload">\'+\n    \'</form>\'\n  );\n}).listen(8080);\n```\n## API\n\n### Formidable.IncomingForm\n```javascript\nvar form = new formidable.IncomingForm()\n```\nCreates a new incoming form.\n\n```javascript\nform.encoding = \'utf-8\';\n```\nSets encoding for incoming form fields.\n\n```javascript\nform.uploadDir = process.env.TMP || process.env.TMPDIR || process.env.TEMP || \'/tmp\' || process.cwd();\n```\nThe directory for placing file uploads in. You can move them later on using\n`fs.rename()`. The default directory is picked at module load time depending on\nthe first existing directory from those listed above.\n\n```javascript\nform.keepExtensions = false;\n```\nIf you want the files written to `form.uploadDir` to include the extensions of the original files, set this property to `true`.\n\n```javascript\nform.type\n```\nEither \'multipart\' or \'urlencoded\' depending on the incoming request.\n\n```javascript\nform.maxFieldsSize = 2 * 1024 * 1024;\n```\nLimits the amount of memory a field (not file) can allocate in bytes.\nIf this value is exceeded, an `\'error\'` event is emitted. The default\nsize is 2MB.\n\n```javascript\nform.maxFields = 0;\n```\nLimits the number of fields that the querystring parser will decode. Defaults\nto 0 (unlimited).\n\n```javascript\nform.hash = false;\n```\nIf you want checksums calculated for incoming files, set this to either `\'sha1\'` or `\'md5\'`.\n\n```javascript\nform.bytesReceived\n```\nThe amount of bytes received for this form so far.\n\n```javascript\nform.bytesExpected\n```\nThe expected number of bytes in this form.\n\n```javascript\nform.parse(request, [cb]);\n```\nParses an incoming node.js `request` containing form data. If `cb` is provided, all fields an files are collected and passed to the callback:\n\n\n```javascript\nform.parse(req, function(err, fields, files) {\n  // ...\n});\n\nform.onPart(part);\n```\nYou may overwrite this method if you are interested in directly accessing the multipart stream. Doing so will disable any `\'field\'` / `\'file\'` events  processing which would occur otherwise, making you fully responsible for handling the processing.\n\n```javascript\nform.onPart = function(part) {\n  part.addListener(\'data\', function() {\n    // ...\n  });\n}\n```\nIf you want to use formidable to only handle certain parts for you, you can do so:\n```javascript\nform.onPart = function(part) {\n  if (!part.filename) {\n    // let formidable handle all non-file parts\n    form.handlePart(part);\n  }\n}\n```\nCheck the code in this method for further inspiration.\n\n\n### Formidable.File\n```javascript\nfile.size = 0\n```\nThe size of the uploaded file in bytes. If the file is still being uploaded (see `\'fileBegin\'` event), this property says how many bytes of the file have been written to disk yet.\n```javascript\nfile.path = null\n```\nThe path this file is being written to. You can modify this in the `\'fileBegin\'` event in\ncase you are unhappy with the way formidable generates a temporary path for your files.\n```javascript\nfile.name = null\n```\nThe name this file had according to the uploading client.\n```javascript\nfile.type = null\n```\nThe mime type of this file, according to the uploading client.\n```javascript\nfile.lastModifiedDate = null\n```\nA date object (or `null`) containing the time this file was last written to. Mostly\nhere for compatibility with the [W3C File API Draft](http://dev.w3.org/2006/webapi/FileAPI/).\n```javascript\nfile.hash = null\n```\nIf hash calculation was set, you can read the hex digest out of this var.\n\n#### Formidable.File#toJSON()\n\n  This method returns a JSON-representation of the file, allowing you to\n  `JSON.stringify()` the file which is useful for logging and responding\n  to requests.\n\n### Events\n\n\n#### \'progress\'\n```javascript\nform.on(\'progress\', function(bytesReceived, bytesExpected) {\n});\n```\nEmitted after each incoming chunk of data that has been parsed. Can be used to roll your own progress bar.\n\n\n\n#### \'field\'\n```javascript\nform.on(\'field\', function(name, value) {\n});\n```\n\n#### \'fileBegin\'\n\nEmitted whenever a field / value pair has been received.\n```javascript\nform.on(\'fileBegin\', function(name, file) {\n});\n```\n\n#### \'file\'\n\nEmitted whenever a new file is detected in the upload stream. Use this even if\nyou want to stream the file to somewhere else while buffering the upload on\nthe file system.\n\nEmitted whenever a field / file pair has been received. `file` is an instance of `File`.\n```javascript\nform.on(\'file\', function(name, file) {\n});\n```\n\n#### \'error\'\n\nEmitted when there is an error processing the incoming form. A request that experiences an error is automatically paused, you will have to manually call `request.resume()` if you want the request to continue firing `\'data\'` events.\n```javascript\nform.on(\'error\', function(err) {\n});\n```\n\n#### \'aborted\'\n\n\nEmitted when the request was aborted by the user. Right now this can be due to a \'timeout\' or \'close\' event on the socket. In the future there will be a separate \'timeout\' event (needs a change in the node core).\n```javascript\nform.on(\'aborted\', function() {\n});\n```\n\n##### \'end\'\n```javascript\nform.on(\'end\', function() {\n});\n```\nEmitted when the entire request has been received, and all contained files have finished flushing to disk. This is a great place for you to send your response.\n\n\n\n## Changelog\n\n### v1.0.14\n\n* Add failing hash tests. (Ben Trask)\n* Enable hash calculation again (Eugene Girshov)\n* Test for immediate data events (Tim Smart)\n* Re-arrange IncomingForm#parse (Tim Smart)\n\n### v1.0.13\n\n* Only update hash if update method exists (Sven Lito)\n* According to travis v0.10 needs to go quoted (Sven Lito)\n* Bumping build node versions (Sven Lito)\n* Additional fix for empty requests (Eugene Girshov)\n* Change the default to 1000, to match the new Node behaviour. (OrangeDog)\n* Add ability to control maxKeys in the querystring parser. (OrangeDog)\n* Adjust test case to work with node 0.9.x (Eugene Girshov)\n* Update package.json (Sven Lito)\n* Path adjustment according to eb4468b (Markus Ast)\n\n### v1.0.12\n\n* Emit error on aborted connections (Eugene Girshov)\n* Add support for empty requests (Eugene Girshov)\n* Fix name/filename handling in Content-Disposition (jesperp)\n* Tolerate malformed closing boundary in multipart (Eugene Girshov)\n* Ignore preamble in multipart messages (Eugene Girshov)\n* Add support for application/json (Mike Frey, Carlos Rodriguez)\n* Add support for Base64 encoding (Elmer Bulthuis)\n* Add File#toJSON (TJ Holowaychuk)\n* Remove support for Node.js 0.4 & 0.6 (Andrew Kelley)\n* Documentation improvements (Sven Lito, Andre Azevedo)\n* Add support for application/octet-stream (Ion Lupascu, Chris Scribner)\n* Use os.tmpDir() to get tmp directory (Andrew Kelley)\n* Improve package.json (Andrew Kelley, Sven Lito)\n* Fix benchmark script (Andrew Kelley)\n* Fix scope issue in incoming_forms (Sven Lito)\n* Fix file handle leak on error (OrangeDog)\n\n### v1.0.11\n\n* Calculate checksums for incoming files (sreuter)\n* Add definition parameters to "IncomingForm" as an argument (Math-)\n\n### v1.0.10\n\n* Make parts to be proper Streams (Matt Robenolt)\n\n### v1.0.9\n\n* Emit progress when content length header parsed (Tim Koschützki)\n* Fix Readme syntax due to GitHub changes (goob)\n* Replace references to old \'sys\' module in Readme with \'util\' (Peter Sugihara)\n\n### v1.0.8\n\n* Strip potentially unsafe characters when using `keepExtensions: true`.\n* Switch to utest / urun for testing\n* Add travis build\n\n### v1.0.7\n\n* Remove file from package that was causing problems when installing on windows. (#102)\n* Fix typos in Readme (Jason Davies).\n\n### v1.0.6\n\n* Do not default to the default to the field name for file uploads where\n  filename="".\n\n### v1.0.5\n\n* Support filename="" in multipart parts\n* Explain unexpected end() errors in parser better\n\n**Note:** Starting with this version, formidable emits \'file\' events for empty\nfile input fields. Previously those were incorrectly emitted as regular file\ninput fields with value = "".\n\n### v1.0.4\n\n* Detect a good default tmp directory regardless of platform. (#88)\n\n### v1.0.3\n\n* Fix problems with utf8 characters (#84) / semicolons in filenames (#58)\n* Small performance improvements\n* New test suite and fixture system\n\n### v1.0.2\n\n* Exclude node\\_modules folder from git\n* Implement new `\'aborted\'` event\n* Fix files in example folder to work with recent node versions\n* Make gently a devDependency\n\n[See Commits](https://github.com/felixge/node-formidable/compare/v1.0.1...v1.0.2)\n\n### v1.0.1\n\n* Fix package.json to refer to proper main directory. (#68, Dean Landolt)\n\n[See Commits](https://github.com/felixge/node-formidable/compare/v1.0.0...v1.0.1)\n\n### v1.0.0\n\n* Add support for multipart boundaries that are quoted strings. (Jeff Craig)\n\nThis marks the beginning of development on version 2.0 which will include\nseveral architectural improvements.\n\n[See Commits](https://github.com/felixge/node-formidable/compare/v0.9.11...v1.0.0)\n\n### v0.9.11\n\n* Emit `\'progress\'` event when receiving data, regardless of parsing it. (Tim Koschützki)\n* Use [W3C FileAPI Draft](http://dev.w3.org/2006/webapi/FileAPI/) properties for File class\n\n**Important:** The old property names of the File class will be removed in a\nfuture release.\n\n[See Commits](https://github.com/felixge/node-formidable/compare/v0.9.10...v0.9.11)\n\n### Older releases\n\nThese releases were done before starting to maintain the above Changelog:\n\n* [v0.9.10](https://github.com/felixge/node-formidable/compare/v0.9.9...v0.9.10)\n* [v0.9.9](https://github.com/felixge/node-formidable/compare/v0.9.8...v0.9.9)\n* [v0.9.8](https://github.com/felixge/node-formidable/compare/v0.9.7...v0.9.8)\n* [v0.9.7](https://github.com/felixge/node-formidable/compare/v0.9.6...v0.9.7)\n* [v0.9.6](https://github.com/felixge/node-formidable/compare/v0.9.5...v0.9.6)\n* [v0.9.5](https://github.com/felixge/node-formidable/compare/v0.9.4...v0.9.5)\n* [v0.9.4](https://github.com/felixge/node-formidable/compare/v0.9.3...v0.9.4)\n* [v0.9.3](https://github.com/felixge/node-formidable/compare/v0.9.2...v0.9.3)\n* [v0.9.2](https://github.com/felixge/node-formidable/compare/v0.9.1...v0.9.2)\n* [v0.9.1](https://github.com/felixge/node-formidable/compare/v0.9.0...v0.9.1)\n* [v0.9.0](https://github.com/felixge/node-formidable/compare/v0.8.0...v0.9.0)\n* [v0.9.0](https://github.com/felixge/node-formidable/compare/v0.8.0...v0.9.0)\n* [v0.9.0](https://github.com/felixge/node-formidable/compare/v0.8.0...v0.9.0)\n* [v0.9.0](https://github.com/felixge/node-formidable/compare/v0.8.0...v0.9.0)\n* [v0.9.0](https://github.com/felixge/node-formidable/compare/v0.8.0...v0.9.0)\n* [v0.9.0](https://github.com/felixge/node-formidable/compare/v0.8.0...v0.9.0)\n* [v0.9.0](https://github.com/felixge/node-formidable/compare/v0.8.0...v0.9.0)\n* [v0.9.0](https://github.com/felixge/node-formidable/compare/v0.8.0...v0.9.0)\n* [v0.1.0](https://github.com/felixge/node-formidable/commits/v0.1.0)\n\n## License\n\nFormidable is licensed under the MIT license.\n\n## Ports\n\n* [multipart-parser](http://github.com/FooBarWidget/multipart-parser): a C++ parser based on formidable\n\n## Credits\n\n* [Ryan Dahl](http://twitter.com/ryah) for his work on [http-parser](http://github.com/ry/http-parser) which heavily inspired multipart_parser.js\n',
457 silly resolved     readmeFilename: 'Readme.md',
457 silly resolved     _id: 'formidable@1.0.14',
457 silly resolved     dependencies: {},
457 silly resolved     _from: 'formidable@1.0.14' },
457 silly resolved   { author:
457 silly resolved      { name: 'Robert Kieffer',
457 silly resolved        email: 'robert@broofa.com',
457 silly resolved        url: 'http://github.com/broofa' },
457 silly resolved     contributors: [ [Object] ],
457 silly resolved     dependencies: {},
457 silly resolved     description: 'A comprehensive library for mime-type mapping',
457 silly resolved     devDependencies: {},
457 silly resolved     keywords: [ 'util', 'mime' ],
457 silly resolved     main: 'mime.js',
457 silly resolved     name: 'mime',
457 silly resolved     repository: { url: 'https://github.com/broofa/node-mime', type: 'git' },
457 silly resolved     version: '1.2.9',
457 silly resolved     readme: '# mime\n\nComprehensive MIME type mapping API. Includes all 600+ types and 800+ extensions defined by the Apache project, plus additional types submitted by the node.js community.\n\n## Install\n\nInstall with [npm](http://github.com/isaacs/npm):\n\n    npm install mime\n\n## API - Queries\n\n### mime.lookup(path)\nGet the mime type associated with a file. Performs a case-insensitive lookup using the extension in `path` (the substring after the last \'/\' or \'.\').  E.g.\n\n    var mime = require(\'mime\');\n\n    mime.lookup(\'/path/to/file.txt\');         // => \'text/plain\'\n    mime.lookup(\'file.txt\');                  // => \'text/plain\'\n    mime.lookup(\'.TXT\');                      // => \'text/plain\'\n    mime.lookup(\'htm\');                       // => \'text/html\'\n\n### mime.extension(type)\nGet the default extension for `type`\n\n    mime.extension(\'text/html\');                 // => \'html\'\n    mime.extension(\'application/octet-stream\');  // => \'bin\'\n\n### mime.charsets.lookup()\n\nMap mime-type to charset\n\n    mime.charsets.lookup(\'text/plain\');        // => \'UTF-8\'\n\n(The logic for charset lookups is pretty rudimentary.  Feel free to suggest improvements.)\n\n## API - Defining Custom Types\n\nThe following APIs allow you to add your own type mappings within your project.  If you feel a type should be included as part of node-mime, see [requesting new types](https://github.com/broofa/node-mime/wiki/Requesting-New-Types).\n\n### mime.define()\n\nAdd custom mime/extension mappings\n\n    mime.define({\n        \'text/x-some-format\': [\'x-sf\', \'x-sft\', \'x-sfml\'],\n        \'application/x-my-type\': [\'x-mt\', \'x-mtt\'],\n        // etc ...\n    });\n\n    mime.lookup(\'x-sft\');                 // => \'text/x-some-format\'\n\nThe first entry in the extensions array is returned by `mime.extension()`. E.g.\n\n    mime.extension(\'text/x-some-format\'); // => \'x-sf\'\n\n### mime.load(filepath)\n\nLoad mappings from an Apache ".types" format file\n\n    mime.load(\'./my_project.types\');\n\nThe .types file format is simple -  See the `types` dir for examples.\n',
457 silly resolved     readmeFilename: 'README.md',
457 silly resolved     _id: 'mime@1.2.9',
457 silly resolved     _from: 'mime@1.2.9' },
457 silly resolved   { name: 'negotiator',
457 silly resolved     description: 'HTTP content negotiation',
457 silly resolved     version: '0.2.5',
457 silly resolved     author:
457 silly resolved      { name: 'Federico Romero',
457 silly resolved        email: 'federico.romero@outboxlabs.com' },
457 silly resolved     contributors: [ [Object] ],
457 silly resolved     repository:
457 silly resolved      { type: 'git',
457 silly resolved        url: 'git://github.com/federomero/negotiator.git' },
457 silly resolved     keywords:
457 silly resolved      [ 'http',
457 silly resolved        'content negotiation',
457 silly resolved        'accept',
457 silly resolved        'accept-language',
457 silly resolved        'accept-encoding',
457 silly resolved        'accept-charset' ],
457 silly resolved     engine: 'node >= 0.6',
457 silly resolved     license: 'MIT',
457 silly resolved     devDependencies: { nodeunit: '0.6.x' },
457 silly resolved     scripts: { test: 'nodeunit test' },
457 silly resolved     optionalDependencies: {},
457 silly resolved     engines: { node: '*' },
457 silly resolved     main: 'lib/negotiator.js',
457 silly resolved     readme: '# Negotiator\n\nAn HTTP content negotiator for node.js written in javascript.\n\n# Accept Negotiation\n\n    Negotiator = require(\'negotiator\')\n\n    availableMediaTypes = [\'text/html\', \'text/plain\', \'application/json\']\n\n    // The negotiator constructor receives a request object\n    negotiator = new Negotiator(request)\n\n    // Let\'s say Accept header is \'text/html, application/*;q=0.2, image/jpeg\';q=0.8\n\n    negotiator.preferredMediaTypes()\n    // -> [\'text/html\', \'application/*\', \'image/jpeg\']\n\n    negotiator.preferredMediaTypes(availableMediaTypes)\n    // -> [\'text/html\', \'application.json\']\n\n    negotiator.preferredLanguage(availableMediaTypes)\n    // -> \'text/html\'\n\nYou can check a working example at `examples/accept.js`.\n\n## Methods\n\n`preferredMediaTypes(availableMediaTypes)`:\n\nReturns an array of preferred media types ordered by priority from a list of available media types.\n\n`preferredMediaType(availableMediaType)`:\n\nReturns the top preferred media type from a list of available media types.\n\n# Accept-Language Negotiation\n\n    Negotiator = require(\'negotiator\')\n\n    negotiator = new Negotiator(request)\n\n    availableLanguages = \'en\', \'es\', \'fr\'\n\n    // Let\'s say Accept-Language header is \'en;q=0.8, es, pt\'\n\n    negotiator.preferredLanguages()\n    // -> [\'es\', \'pt\', \'en\']\n\n    negotiator.preferredLanguages(availableLanguages)\n    // -> [\'es\', \'en\']\n\n    language = negotiator.preferredLanguage(availableLanguages)\n    // -> \'es\'\n\nYou can check a working example at `examples/language.js`.\n\n## Methods\n\n`preferredLanguages(availableLanguages)`:\n\nReturns an array of preferred languages ordered by priority from a list of available languages.\n\n`preferredLanguage(availableLanguages)`:\n\nReturns the top preferred language from a list of available languages.\n\n# Accept-Charset Negotiation\n\n    Negotiator = require(\'negotiator\')\n\n    availableCharsets = [\'utf-8\', \'iso-8859-1\', \'iso-8859-5\']\n\n    negotiator = new Negotiator(request)\n\n    // Let\'s say Accept-Charset header is \'utf-8, iso-8859-1;q=0.8, utf-7;q=0.2\'\n\n    negotiator.preferredCharsets()\n    // -> [\'utf-8\', \'iso-8859-1\', \'utf-7\']\n\n    negotiator.preferredCharsets(availableCharsets)\n    // -> [\'utf-8\', \'iso-8859-1\']\n\n    negotiator.preferredCharset(availableCharsets)\n    // -> \'utf-8\'\n\nYou can check a working example at `examples/charset.js`.\n\n## Methods\n\n`preferredCharsets(availableCharsets)`:\n\nReturns an array of preferred charsets ordered by priority from a list of available charsets.\n\n`preferredCharset(availableCharsets)`:\n\nReturns the top preferred charset from a list of available charsets.\n\n# Accept-Encoding Negotiation\n\n    Negotiator = require(\'negotiator\').Negotiator\n\n    availableEncodings = [\'identity\', \'gzip\']\n\n    negotiator = new Negotiator(request)\n\n    // Let\'s say Accept-Encoding header is \'gzip, compress;q=0.2, identity;q=0.5\'\n\n    negotiator.preferredEncodings()\n    // -> [\'gzip\', \'identity\', \'compress\']\n\n    negotiator.preferredEncodings(availableEncodings)\n    // -> [\'gzip\', \'identity\']\n\n    negotiator.preferredEncoding(availableEncodings)\n    // -> \'gzip\'\n\nYou can check a working example at `examples/encoding.js`.\n\n## Methods\n\n`preferredEncodings(availableEncodings)`:\n\nReturns an array of preferred encodings ordered by priority from a list of available encodings.\n\n`preferredEncoding(availableEncodings)`:\n\nReturns the top preferred encoding from a list of available encodings.\n\n# License\n\nMIT\n',
457 silly resolved     readmeFilename: 'readme.md',
457 silly resolved     _id: 'negotiator@0.2.5',
457 silly resolved     dependencies: {},
457 silly resolved     _from: 'negotiator@0.2.5' },
457 silly resolved   { name: 'node-uuid',
457 silly resolved     description: 'Rigorous implementation of RFC4122 (v1 and v4) UUIDs.',
457 silly resolved     url: 'http://github.com/broofa/node-uuid',
457 silly resolved     keywords: [ 'uuid', 'guid', 'rfc4122' ],
457 silly resolved     author: { name: 'Robert Kieffer', email: 'robert@broofa.com' },
457 silly resolved     contributors: [ [Object] ],
457 silly resolved     lib: '.',
457 silly resolved     main: './uuid.js',
457 silly resolved     repository: { type: 'git', url: 'https://github.com/broofa/node-uuid.git' },
457 silly resolved     version: '1.4.0',
457 silly resolved     readme: '# node-uuid\n\nSimple, fast generation of [RFC4122](http://www.ietf.org/rfc/rfc4122.txt) UUIDS.\n\nFeatures:\n\n* Generate RFC4122 version 1 or version 4 UUIDs\n* Runs in node.js and all browsers.\n* Cryptographically strong random # generation on supporting platforms\n* 1.1K minified and gzip\'ed  (Want something smaller?  Check this [crazy shit](https://gist.github.com/982883) out! )\n* [Annotated source code](http://broofa.github.com/node-uuid/docs/uuid.html)\n\n## Getting Started\n\nInstall it in your browser:\n\n```html\n<script src="uuid.js"></script>\n```\n\nOr in node.js:\n\n```\nnpm install node-uuid\n```\n\n```javascript\nvar uuid = require(\'node-uuid\');\n```\n\nThen create some ids ...\n\n```javascript\n// Generate a v1 (time-based) id\nuuid.v1(); // -> \'6c84fb90-12c4-11e1-840d-7b25c5ee775a\'\n\n// Generate a v4 (random) id\nuuid.v4(); // -> \'110ec58a-a0f2-4ac4-8393-c866d813b8d1\'\n```\n\n## API\n\n### uuid.v1([`options` [, `buffer` [, `offset`]]])\n\nGenerate and return a RFC4122 v1 (timestamp-based) UUID.\n\n* `options` - (Object) Optional uuid state to apply. Properties may include:\n\n  * `node` - (Array) Node id as Array of 6 bytes (per 4.1.6). Default: Randomly generated ID.  See note 1.\n  * `clockseq` - (Number between 0 - 0x3fff) RFC clock sequence.  Default: An internally maintained clockseq is used.\n  * `msecs` - (Number | Date) Time in milliseconds since unix Epoch.  Default: The current time is used.\n  * `nsecs` - (Number between 0-9999) additional time, in 100-nanosecond units. Ignored if `msecs` is unspecified. Default: internal uuid counter is used, as per 4.2.1.2.\n\n* `buffer` - (Array | Buffer) Array or buffer where UUID bytes are to be written.\n* `offset` - (Number) Starting index in `buffer` at which to begin writing.\n\nReturns `buffer`, if specified, otherwise the string form of the UUID\n\nNotes:\n\n1. The randomly generated node id is only guaranteed to stay constant for the lifetime of the current JS runtime. (Future versions of this module may use persistent storage mechanisms to extend this guarantee.)\n\nExample: Generate string UUID with fully-specified options\n\n```javascript\nuuid.v1({\n  node: [0x01, 0x23, 0x45, 0x67, 0x89, 0xab],\n  clockseq: 0x1234,\n  msecs: new Date(\'2011-11-01\').getTime(),\n  nsecs: 5678\n});   // -> "710b962e-041c-11e1-9234-0123456789ab"\n```\n\nExample: In-place generation of two binary IDs\n\n```javascript\n// Generate two ids in an array\nvar arr = new Array(32); // -> []\nuuid.v1(null, arr, 0);   // -> [02 a2 ce 90 14 32 11 e1 85 58 0b 48 8e 4f c1 15]\nuuid.v1(null, arr, 16);  // -> [02 a2 ce 90 14 32 11 e1 85 58 0b 48 8e 4f c1 15 02 a3 1c b0 14 32 11 e1 85 58 0b 48 8e 4f c1 15]\n\n// Optionally use uuid.unparse() to get stringify the ids\nuuid.unparse(buffer);    // -> \'02a2ce90-1432-11e1-8558-0b488e4fc115\'\nuuid.unparse(buffer, 16) // -> \'02a31cb0-1432-11e1-8558-0b488e4fc115\'\n```\n\n### uuid.v4([`options` [, `buffer` [, `offset`]]])\n\nGenerate and return a RFC4122 v4 UUID.\n\n* `options` - (Object) Optional uuid state to apply. Properties may include:\n\n  * `random` - (Number[16]) Array of 16 numbers (0-255) to use in place of randomly generated values\n  * `rng` - (Function) Random # generator to use.  Set to one of the built-in generators - `uuid.mathRNG` (all platforms), `uuid.nodeRNG` (node.js only), `uuid.whatwgRNG` (WebKit only) - or a custom function that returns an array[16] of byte values.\n\n* `buffer` - (Array | Buffer) Array or buffer where UUID bytes are to be written.\n* `offset` - (Number) Starting index in `buffer` at which to begin writing.\n\nReturns `buffer`, if specified, otherwise the string form of the UUID\n\nExample: Generate string UUID with fully-specified options\n\n```javascript\nuuid.v4({\n  random: [\n    0x10, 0x91, 0x56, 0xbe, 0xc4, 0xfb, 0xc1, 0xea,\n    0x71, 0xb4, 0xef, 0xe1, 0x67, 0x1c, 0x58, 0x36\n  ]\n});\n// -> "109156be-c4fb-41ea-b1b4-efe1671c5836"\n```\n\nExample: Generate two IDs in a single buffer\n\n```javascript\nvar buffer = new Array(32); // (or \'new Buffer\' in node.js)\nuuid.v4(null, buffer, 0);\nuuid.v4(null, buffer, 16);\n```\n\n### uuid.parse(id[, buffer[, offset]])\n### uuid.unparse(buffer[, offset])\n\nParse and unparse UUIDs\n\n  * `id` - (String) UUID(-like) string\n  * `buffer` - (Array | Buffer) Array or buffer where UUID bytes are to be written. Default: A new Array or Buffer is used\n  * `offset` - (Number) Starting index in `buffer` at which to begin writing. Default: 0\n\nExample parsing and unparsing a UUID string\n\n```javascript\nvar bytes = uuid.parse(\'797ff043-11eb-11e1-80d6-510998755d10\'); // -> <Buffer 79 7f f0 43 11 eb 11 e1 80 d6 51 09 98 75 5d 10>\nvar string = uuid.unparse(bytes); // -> \'797ff043-11eb-11e1-80d6-510998755d10\'\n```\n\n### uuid.noConflict()\n\n(Browsers only) Set `uuid` property back to it\'s previous value.\n\nReturns the node-uuid object.\n\nExample:\n\n```javascript\nvar myUuid = uuid.noConflict();\nmyUuid.v1(); // -> \'6c84fb90-12c4-11e1-840d-7b25c5ee775a\'\n```\n\n## Deprecated APIs\n\nSupport for the following v1.2 APIs is available in v1.3, but is deprecated and will be removed in the next major version.\n\n### uuid([format [, buffer [, offset]]])\n\nuuid() has become uuid.v4(), and the `format` argument is now implicit in the `buffer` argument. (i.e. if you specify a buffer, the format is assumed to be binary).\n\n### uuid.BufferClass\n\nThe class of container created when generating binary uuid data if no buffer argument is specified.  This is expected to go away, with no replacement API.\n\n## Testing\n\nIn node.js\n\n```\n> cd test\n> node test.js\n```\n\nIn Browser\n\n```\nopen test/test.html\n```\n\n### Benchmarking\n\nRequires node.js\n\n```\nnpm install uuid uuid-js\nnode benchmark/benchmark.js\n```\n\nFor a more complete discussion of node-uuid performance, please see the `benchmark/README.md` file, and the [benchmark wiki](https://github.com/broofa/node-uuid/wiki/Benchmark)\n\nFor browser performance [checkout the JSPerf tests](http://jsperf.com/node-uuid-performance).\n\n## Release notes\n\nv1.4\n* Improved module context detection\n* Removed public RNG functions\n\nv1.3.2:\n* Improve tests and handling of v1() options (Issue #24)\n* Expose RNG option to allow for perf testing with different generators\n\nv1.3:\n* Support for version 1 ids, thanks to [@ctavan](https://github.com/ctavan)!\n* Support for node.js crypto API\n* De-emphasizing performance in favor of a) cryptographic quality PRNGs where available and b) more manageable code\n',
457 silly resolved     readmeFilename: 'README.md',
457 silly resolved     _id: 'node-uuid@1.4.0',
457 silly resolved     _from: 'node-uuid@1.4.0' },
457 silly resolved   { name: 'lru-cache',
457 silly resolved     description: 'A cache object that deletes the least-recently-used items.',
457 silly resolved     version: '2.3.0',
457 silly resolved     author: { name: 'Isaac Z. Schlueter', email: 'i@izs.me' },
457 silly resolved     scripts: { test: 'tap test --gc' },
457 silly resolved     main: 'lib/lru-cache.js',
457 silly resolved     repository:
457 silly resolved      { type: 'git',
457 silly resolved        url: 'git://github.com/isaacs/node-lru-cache.git' },
457 silly resolved     devDependencies: { tap: '', weak: '' },
457 silly resolved     license:
457 silly resolved      { type: 'MIT',
457 silly resolved        url: 'http://github.com/isaacs/node-lru-cache/raw/master/LICENSE' },
457 silly resolved     contributors:
457 silly resolved      [ [Object],
457 silly resolved        [Object],
457 silly resolved        [Object],
457 silly resolved        [Object],
457 silly resolved        [Object],
457 silly resolved        [Object],
457 silly resolved        [Object] ],
457 silly resolved     readme: '# lru cache\n\nA cache object that deletes the least-recently-used items.\n\n## Usage:\n\n```javascript\nvar LRU = require("lru-cache")\n  , options = { max: 500\n              , length: function (n) { return n * 2 }\n              , dispose: function (key, n) { n.close() }\n              , maxAge: 1000 * 60 * 60 }\n  , cache = LRU(options)\n  , otherCache = LRU(50) // sets just the max size\n\ncache.set("key", "value")\ncache.get("key") // "value"\n\ncache.reset()    // empty the cache\n```\n\nIf you put more stuff in it, then items will fall out.\n\nIf you try to put an oversized thing in it, then it\'ll fall out right\naway.\n\n## Options\n\n* `max` The maximum size of the cache, checked by applying the length\n  function to all values in the cache.  Not setting this is kind of\n  silly, since that\'s the whole purpose of this lib, but it defaults\n  to `Infinity`.\n* `maxAge` Maximum age in ms.  Items are not pro-actively pruned out\n  as they age, but if you try to get an item that is too old, it\'ll\n  drop it and return undefined instead of giving it to you.\n* `length` Function that is used to calculate the length of stored\n  items.  If you\'re storing strings or buffers, then you probably want\n  to do something like `function(n){return n.length}`.  The default is\n  `function(n){return 1}`, which is fine if you want to store `n`\n  like-sized things.\n* `dispose` Function that is called on items when they are dropped\n  from the cache.  This can be handy if you want to close file\n  descriptors or do other cleanup tasks when items are no longer\n  accessible.  Called with `key, value`.  It\'s called *before*\n  actually removing the item from the internal cache, so if you want\n  to immediately put it back in, you\'ll have to do that in a\n  `nextTick` or `setTimeout` callback or it won\'t do anything.\n* `stale` By default, if you set a `maxAge`, it\'ll only actually pull\n  stale items out of the cache when you `get(key)`.  (That is, it\'s\n  not pre-emptively doing a `setTimeout` or anything.)  If you set\n  `stale:true`, it\'ll return the stale value before deleting it.  If\n  you don\'t set this, then it\'ll return `undefined` when you try to\n  get a stale entry, as if it had already been deleted.\n\n## API\n\n* `set(key, value)`\n* `get(key) => value`\n\n    Both of these will update the "recently used"-ness of the key.\n    They do what you think.\n\n* `peek(key)`\n\n    Returns the key value (or `undefined` if not found) without\n    updating the "recently used"-ness of the key.\n\n    (If you find yourself using this a lot, you *might* be using the\n    wrong sort of data structure, but there are some use cases where\n    it\'s handy.)\n\n* `del(key)`\n\n    Deletes a key out of the cache.\n\n* `reset()`\n\n    Clear the cache entirely, throwing away all values.\n\n* `has(key)`\n\n    Check if a key is in the cache, without updating the recent-ness\n    or deleting it for being stale.\n\n* `forEach(function(value,key,cache), [thisp])`\n\n    Just like `Array.prototype.forEach`.  Iterates over all the keys\n    in the cache, in order of recent-ness.  (Ie, more recently used\n    items are iterated over first.)\n\n* `keys()`\n\n    Return an array of the keys in the cache.\n\n* `values()`\n\n    Return an array of the values in the cache.\n',
457 silly resolved     readmeFilename: 'README.md',
457 silly resolved     _id: 'lru-cache@2.3.0',
457 silly resolved     _from: 'lru-cache@2.3.0' },
457 silly resolved   { name: 'qs',
457 silly resolved     description: 'querystring parser',
457 silly resolved     version: '0.6.4',
457 silly resolved     keywords: [ 'query string', 'parser', 'component' ],
457 silly resolved     repository:
457 silly resolved      { type: 'git',
457 silly resolved        url: 'git://github.com/visionmedia/node-querystring.git' },
457 silly resolved     devDependencies: { mocha: '*', 'expect.js': '*' },
457 silly resolved     scripts: { test: 'make test' },
457 silly resolved     author:
457 silly resolved      { name: 'TJ Holowaychuk',
457 silly resolved        email: 'tj@vision-media.ca',
457 silly resolved        url: 'http://tjholowaychuk.com' },
457 silly resolved     main: 'index',
457 silly resolved     engines: { node: '*' },
457 silly resolved     readme: '# node-querystring\n\n  query string parser for node and the browser supporting nesting, as it was removed from `0.3.x`, so this library provides the previous and commonly desired behaviour (and twice as fast). Used by [express](http://expressjs.com), [connect](http://senchalabs.github.com/connect) and others.\n\n## Installation\n\n    $ npm install qs\n\n## Examples\n\n```js\nvar qs = require(\'qs\');\n\nqs.parse(\'user[name][first]=Tobi&user[email]=tobi@learnboost.com\');\n// => { user: { name: { first: \'Tobi\' }, email: \'tobi@learnboost.com\' } }\n\nqs.stringify({ user: { name: \'Tobi\', email: \'tobi@learnboost.com\' }})\n// => user[name]=Tobi&user[email]=tobi%40learnboost.com\n```\n\n## Testing\n\nInstall dev dependencies:\n\n    $ npm install -d\n\nand execute:\n\n    $ make test\n\nbrowser:\n\n    $ open test/browser/index.html\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2010 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\'Software\'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \'AS IS\', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.',
457 silly resolved     readmeFilename: 'Readme.md',
457 silly resolved     _id: 'qs@0.6.4',
457 silly resolved     _from: 'qs@0.6.4' },
457 silly resolved   { name: 'semver',
457 silly resolved     version: '1.1.4',
457 silly resolved     description: 'The semantic version parser used by npm.',
457 silly resolved     main: 'semver.js',
457 silly resolved     scripts: { test: 'tap test.js' },
457 silly resolved     devDependencies: { tap: '0.x >=0.0.4' },
457 silly resolved     license:
457 silly resolved      { type: 'MIT',
457 silly resolved        url: 'https://github.com/isaacs/semver/raw/master/LICENSE' },
457 silly resolved     repository: { type: 'git', url: 'git://github.com/isaacs/node-semver.git' },
457 silly resolved     bin: { semver: './bin/semver' },
457 silly resolved     readme: 'semver(1) -- The semantic versioner for npm\n===========================================\n\n## Usage\n\n    $ npm install semver\n\n    semver.valid(\'1.2.3\') // \'1.2.3\'\n    semver.valid(\'a.b.c\') // null\n    semver.clean(\'  =v1.2.3   \') // \'1.2.3\'\n    semver.satisfies(\'1.2.3\', \'1.x || >=2.5.0 || 5.0.0 - 7.2.3\') // true\n    semver.gt(\'1.2.3\', \'9.8.7\') // false\n    semver.lt(\'1.2.3\', \'9.8.7\') // true\n\nAs a command-line utility:\n\n    $ semver -h\n\n    Usage: semver -v <version> [-r <range>]\n    Test if version(s) satisfy the supplied range(s),\n    and sort them.\n\n    Multiple versions or ranges may be supplied.\n\n    Program exits successfully if any valid version satisfies\n    all supplied ranges, and prints all satisfying versions.\n\n    If no versions are valid, or ranges are not satisfied,\n    then exits failure.\n\n    Versions are printed in ascending order, so supplying\n    multiple versions to the utility will just sort them.\n\n## Versions\n\nA version is the following things, in this order:\n\n* a number (Major)\n* a period\n* a number (minor)\n* a period\n* a number (patch)\n* OPTIONAL: a hyphen, followed by a number (build)\n* OPTIONAL: a collection of pretty much any non-whitespace characters\n  (tag)\n\nA leading `"="` or `"v"` character is stripped off and ignored.\n\n## Comparisons\n\nThe ordering of versions is done using the following algorithm, given\ntwo versions and asked to find the greater of the two:\n\n* If the majors are numerically different, then take the one\n  with a bigger major number. `2.3.4 > 1.3.4`\n* If the minors are numerically different, then take the one\n  with the bigger minor number. `2.3.4 > 2.2.4`\n* If the patches are numerically different, then take the one with the\n  bigger patch number. `2.3.4 > 2.3.3`\n* If only one of them has a build number, then take the one with the\n  build number.  `2.3.4-0 > 2.3.4`\n* If they both have build numbers, and the build numbers are numerically\n  different, then take the one with the bigger build number.\n  `2.3.4-10 > 2.3.4-9`\n* If only one of them has a tag, then take the one without the tag.\n  `2.3.4 > 2.3.4-beta`\n* If they both have tags, then take the one with the lexicographically\n  larger tag.  `2.3.4-beta > 2.3.4-alpha`\n* At this point, they\'re equal.\n\n## Ranges\n\nThe following range styles are supported:\n\n* `>1.2.3` Greater than a specific version.\n* `<1.2.3` Less than\n* `1.2.3 - 2.3.4` := `>=1.2.3 <=2.3.4`\n* `~1.2.3` := `>=1.2.3 <1.3.0`\n* `~1.2` := `>=1.2.0 <1.3.0`\n* `~1` := `>=1.0.0 <2.0.0`\n* `1.2.x` := `>=1.2.0 <1.3.0`\n* `1.x` := `>=1.0.0 <2.0.0`\n\nRanges can be joined with either a space (which implies "and") or a\n`||` (which implies "or").\n\n## Functions\n\n* valid(v): Return the parsed version, or null if it\'s not valid.\n* inc(v, release): Return the version incremented by the release type\n  (major, minor, patch, or build), or null if it\'s not valid.\n\n### Comparison\n\n* gt(v1, v2): `v1 > v2`\n* gte(v1, v2): `v1 >= v2`\n* lt(v1, v2): `v1 < v2`\n* lte(v1, v2): `v1 <= v2`\n* eq(v1, v2): `v1 == v2` This is true if they\'re logically equivalent,\n  even if they\'re not the exact same string.  You already know how to\n  compare strings.\n* neq(v1, v2): `v1 != v2` The opposite of eq.\n* cmp(v1, comparator, v2): Pass in a comparison string, and it\'ll call\n  the corresponding function above.  `"==="` and `"!=="` do simple\n  string comparison, but are included for completeness.  Throws if an\n  invalid comparison string is provided.\n* compare(v1, v2): Return 0 if v1 == v2, or 1 if v1 is greater, or -1 if\n  v2 is greater.  Sorts in ascending order if passed to Array.sort().\n* rcompare(v1, v2): The reverse of compare.  Sorts an array of versions\n  in descending order when passed to Array.sort().\n\n\n### Ranges\n\n* validRange(range): Return the valid range or null if it\'s not valid\n* satisfies(version, range): Return true if the version satisfies the\n  range.\n* maxSatisfying(versions, range): Return the highest version in the list\n  that satisfies the range, or null if none of them do.\n',
457 silly resolved     readmeFilename: 'README.md',
457 silly resolved     _id: 'semver@1.1.4',
457 silly resolved     _from: 'semver@1.1.4' },
457 silly resolved   { name: 'spdy',
457 silly resolved     version: '1.8.2',
457 silly resolved     description: 'Implementation of the SPDY protocol on node.js.',
457 silly resolved     keywords: [ 'spdy' ],
457 silly resolved     repository: { type: 'git', url: 'git://github.com/indutny/node-spdy.git' },
457 silly resolved     homepage: 'https://github.com/indutny/node-spdy',
457 silly resolved     bugs:
457 silly resolved      { email: 'node-spdy+bugs@indutny.com',
457 silly resolved        url: 'https://github.com/indunty/node-spdy/issues' },
457 silly resolved     author: { name: 'Fedor Indutny', email: 'fedor.indutny@gmail.com' },
457 silly resolved     contributors: [ [Object], [Object], [Object], [Object], [Object], [Object] ],
457 silly resolved     dependencies: {},
457 silly resolved     devDependencies: { mocha: '1.3.x' },
457 silly resolved     scripts: { test: 'mocha --ui tdd --growl --reporter spec test/unit/*-test.js' },
457 silly resolved     engines: [ 'node >= 0.7.0' ],
457 silly resolved     main: './lib/spdy',
457 silly resolved     optionalDependencies: {},
457 silly resolved     readme: '# SPDY Server for node.js [![Build Status](https://secure.travis-ci.org/indutny/node-spdy.png)](http://travis-ci.org/indutny/node-spdy)\n\n<a href="http://flattr.com/thing/758213/indutnynode-spdy-on-GitHub" target="_blank">\n<img src="http://api.flattr.com/button/flattr-badge-large.png" alt="Flattr this" title="Flattr this" border="0" /></a>\n\nWith this module you can create [SPDY](http://www.chromium.org/spdy) servers\nin node.js with natural http module interface and fallback to regular https\n(for browsers that doesn\'t support SPDY yet).\n\n## Usage\n\n```javascript\nvar spdy = require(\'spdy\'),\n    fs = require(\'fs\');\n\nvar options = {\n  key: fs.readFileSync(__dirname + \'/keys/spdy-key.pem\'),\n  cert: fs.readFileSync(__dirname + \'/keys/spdy-cert.pem\'),\n  ca: fs.readFileSync(__dirname + \'/keys/spdy-csr.pem\'),\n\n  // SPDY-specific options\n  windowSize: 1024, // Server\'s window size\n};\n\nvar server = spdy.createServer(options, function(req, res) {\n  res.writeHead(200);\n  res.end(\'hello world!\');\n});\n\nserver.listen(443);\n```\n\nAnd by popular demand - usage with\n[express](https://github.com/visionmedia/express):\n\n```javascript\nvar spdy = require(\'spdy\'),\n    express = require(\'express\'),\n    fs = require(\'fs\');\n\nvar options = { /* the same as above */ };\n\nvar app = express();\n\napp.use(/* your favorite middleware */);\n\nvar server = spdy.createServer(options, app);\n\nserver.listen(443);\n```\n\n## API\n\nAPI is compatible with `http` and `https` module, but you can use another\nfunction as base class for SPDYServer.\n\n```javascript\nspdy.createServer(\n  [base class constructor, i.e. https.Server],\n  { /* keys and options */ }, // <- the only one required argument\n  [request listener]\n).listen([port], [host], [callback]);\n```\n\nRequest listener will receive two arguments: `request` and `response`. They\'re\nboth instances of `http`\'s `IncomingMessage` and `OutgoingMessage`. But three\ncustom properties are added to both of them: `streamID`, `isSpdy`,\n`spdyVersion`. The first one indicates on which spdy stream are sitting request\nand response. Second is always true and can be checked to ensure that incoming\nrequest wasn\'t received by HTTPS fallback and last one is a number representing\nused SPDY protocol version (2 or 3 for now).\n\n### Push streams\n\nIt is possible to initiate \'push\' streams to send content to clients _before_\nthe client requests it.\n\n```javascript\nspdy.createServer(options, function(req, res) {\n  var headers = { \'content-type\': \'application/javascript\' };\n  res.push(\'/main.js\', headers, function(err, stream) {\n    if (err) return;\n\n    stream.end(\'alert("hello from push stream!");\');\n  });\n\n  res.end(\'<script src="/main.js"></script>\');\n}).listen(443);\n```\n\nPush is accomplished via the `push()` method invoked on the current response\nobject (this works for express.js response objects as well).  The format of the\n`push()` method is:\n\n`.push(\'full or relative url\', { ... headers ... }, optional priority, callback)`\n\nYou can use either full ( `http://host/path` ) or relative ( `/path` ) urls with\n`.push()`. `headers` are the same as for regular response object. `callback`\nwill receive two arguments: `err` (if any error is happened) and `stream`\n(stream object have API compatible with a\n[net.Socket](http://nodejs.org/docs/latest/api/net.html#net.Socket) ).\n\n### Options\n\nAll options supported by\n[tls](http://nodejs.org/docs/latest/api/tls.html#tls.createServer) are working\nwith node-spdy. In addition, `maxStreams` options is available. it allows you\ncontrolling [maximum concurrent streams][http://www.chromium.org/spdy/spdy-protocol/spdy-protocol-draft2#TOC-SETTINGS]\nprotocol option (if client will start more streams than that limit, RST_STREAM\nwill be sent for each additional stream).\n\nAdditional options:\n\n* `plain` - if defined, server will accept only plain (non-encrypted)\n  connections.\n\n#### Contributors\n\n* [Fedor Indutny](https://github.com/indutny)\n* [Chris Strom](https://github.com/eee-c)\n* [François de Metz](https://github.com/francois2metz)\n* [Ilya Grigorik](https://github.com/igrigorik)\n* [Roberto Peon](https://github.com/grmocg)\n* [Tatsuhiro Tsujikawa](https://github.com/tatsuhiro-t)\n* [Jesse Cravens](https://github.com/jessecravens)\n\n#### LICENSE\n\nThis software is licensed under the MIT License.\n\nCopyright Fedor Indutny, 2012.\n\nPermission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the\n"Software"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to permit\npersons to whom the Software is furnished to do so, subject to the\nfollowing conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\nNO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\nDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\nOTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\nUSE OR OTHER DEALINGS IN THE SOFTWARE.\n',
457 silly resolved     readmeFilename: 'README.md',
457 silly resolved     _id: 'spdy@1.8.2',
457 silly resolved     _from: 'spdy@1.8.2' },
457 silly resolved   { name: 'verror',
457 silly resolved     version: '1.3.6',
457 silly resolved     description: 'richer JavaScript errors',
457 silly resolved     main: './lib/verror.js',
457 silly resolved     repository:
457 silly resolved      { type: 'git',
457 silly resolved        url: 'git://github.com/davepacheco/node-verror.git' },
457 silly resolved     dependencies: { extsprintf: '1.0.2' },
457 silly resolved     engines: [ 'node >=0.6.0' ],
457 silly resolved     scripts: { test: 'make test' },
457 silly resolved     readme: '# verror: richer JavaScript errors\n\nThis module provides two classes: VError, for accretive errors, and WError, for\nwrapping errors.  Both support printf-style error messages using extsprintf.\n\n## Printf-style errors\n\nAt the most basic level, VError is just like JavaScript\'s Error class, but with\nprintf-style arguments:\n\n    var verror = require(\'verror\');\n\n    var opname = \'read\';\n    var err = new verror.VError(\'"%s" operation failed\', opname);\n    console.log(err.message);\n    console.log(err.stack);\n\nThis prints:\n\n    "read" operation failed\n    "read" operation failed\n        at Object.<anonymous> (/Users/dap/node-verror/examples/varargs.js:4:11)\n        at Module._compile (module.js:449:26)\n        at Object.Module._extensions..js (module.js:467:10)\n        at Module.load (module.js:356:32)\n        at Function.Module._load (module.js:312:12)\n        at Module.runMain (module.js:492:10)\n        at process.startup.processNextTick.process._tickCallback (node.js:244:9)\n\n\n## VError for accretive error messages\n\nMore interestingly, you can use VError to build up an error describing what\nhappened at various levels in the stack.  For example, suppose you have a\nrequest handler that stats a file and fails if it doesn\'t exist:\n\n    var fs = require(\'fs\');\n    var verror = require(\'verror\');\n\n    function checkFile(filename, callback) {\n        fs.stat(filename, function (err) {\n            if (err)\n\t\t/* Annotate the "stat" error with what we were doing. */\n\t    \treturn (callback(new verror.VError(err,\n\t\t    \'failed to check "%s"\', filename)));\n\n\t    /* ... */\n        });\n    }\n\n    function handleRequest(filename, callback) {\n    \tcheckFile(\'/nonexistent\', function (err) {\n    \t    if (err) {\n    \t    \t/* Annotate the "checkFile" error with what we were doing. */\n    \t    \treturn (callback(new verror.VError(err, \'request failed\')));\n    \t    }\n\n    \t    /* ... */\n    \t});\n    }\n\n    handleRequest(\'/nonexistent\', function (err) {\n\tif (err)\n\t\tconsole.log(err.message);\n\t/* ... */\n    });\n\nSince the file "/nonexistent" doesn\'t exist, this prints out:\n\n    request failed: failed to check "/nonexistent": ENOENT, stat \'/nonexistent\'\n\nThe idea here is that the lowest level (Node\'s "fs.stat" function) generates an\narbitrary error, and each higher level (request handler and stat callback)\ncreates a new VError that annotates the previous error with what it was doing,\nso that the result is a clear message explaining what failed at each level.\n\nThis plays nicely with extsprintf\'s "%r" specifier, which prints out a\nJava-style stacktrace with the whole chain of exceptions:\n\n    EXCEPTION: VError: request failed: failed to check "/nonexistent": ENOENT, stat \'/nonexistent\'\n        at /Users/dap/work/node-verror/examples/levels.js:21:21\n        at /Users/dap/work/node-verror/examples/levels.js:9:12\n        at Object.oncomplete (fs.js:297:15)\n    Caused by: EXCEPTION: VError: failed to check "/nonexistent": ENOENT, stat \'/nonexistent\'\n        at /Users/dap/work/node-verror/examples/levels.js:9:21\n        at Object.oncomplete (fs.js:297:15)\n    Caused by: EXCEPTION: Error: Error: ENOENT, stat \'/nonexistent\'\n\n\n## WError for wrapped errors\n\nSometimes you don\'t want an Error\'s "message" field to include the details of\nall of the low-level errors, but you still want to be able to get at them\nprogrammatically.  For example, in an HTTP server, you probably don\'t want to\nspew all of the low-level errors back to the client, but you do want to include\nthem in the audit log entry for the request.  In that case, you can use a\nWError, which is created exactly like VError (and also supports both\nprintf-style arguments and an optional cause), but the resulting "message" only\ncontains the top-level error.  It\'s also more verbose, including the class\nassociated with each error in the cause chain.  Using the same example above,\nbut replacing the VError in handleRequest with WError, we get this output:\n\n    request failed\n\nThat\'s what we wanted -- just a high-level summary for the client.  But we can\nget the object\'s toString() for the full details:\n\n    WError: request failed; caused by WError: failed to check "/nonexistent";\n    caused by Error: ENOENT, stat \'/nonexistent\'\n\n# Contributing\n\nContributions welcome.  Code should be "make check" clean.  To run "make check",\nyou\'ll need these tools:\n\n* https://github.com/davepacheco/jsstyle\n* https://github.com/davepacheco/javascriptlint\n\nIf you\'re changing something non-trivial or user-facing, you may want to submit\nan issue first.\n',
457 silly resolved     readmeFilename: 'README.md',
457 silly resolved     _id: 'verror@1.3.6',
457 silly resolved     _from: 'verror@1.3.6' },
457 silly resolved   { name: 'once',
457 silly resolved     version: '1.1.1',
457 silly resolved     description: 'Run a function exactly one time',
457 silly resolved     main: 'once.js',
457 silly resolved     directories: { test: 'test' },
457 silly resolved     dependencies: {},
457 silly resolved     devDependencies: { tap: '~0.3.0' },
457 silly resolved     scripts: { test: 'tap test/*.js' },
457 silly resolved     repository: { type: 'git', url: 'git://github.com/isaacs/once' },
457 silly resolved     keywords: [ 'once', 'function', 'one', 'single' ],
457 silly resolved     author:
457 silly resolved      { name: 'Isaac Z. Schlueter',
457 silly resolved        email: 'i@izs.me',
457 silly resolved        url: 'http://blog.izs.me/' },
457 silly resolved     license: 'BSD',
457 silly resolved     readme: '# once\n\nOnly call a function once.\n\n## usage\n\n```javascript\nvar once = require(\'once\')\n\nfunction load (file, cb) {\n  cb = once(cb)\n  loader.load(\'file\')\n  loader.once(\'load\', cb)\n  loader.once(\'error\', cb)\n}\n```\n\nOr add to the Function.prototype in a responsible way:\n\n```javascript\n// only has to be done once\nrequire(\'once\').proto()\n\nfunction load (file, cb) {\n  cb = cb.once()\n  loader.load(\'file\')\n  loader.once(\'load\', cb)\n  loader.once(\'error\', cb)\n}\n```\n\nIronically, the prototype feature makes this module twice as\ncomplicated as necessary.\n',
457 silly resolved     readmeFilename: 'README.md',
457 silly resolved     _id: 'once@1.1.1',
457 silly resolved     _from: 'once@1.1.1' },
457 silly resolved   { author: { name: 'Mark Cavage', email: 'mcavage@gmail.com' },
457 silly resolved     name: 'assert-plus',
457 silly resolved     description: 'Extra assertions on top of node\'s assert module',
457 silly resolved     version: '0.1.2',
457 silly resolved     main: './assert.js',
457 silly resolved     dependencies: {},
457 silly resolved     devDependencies: {},
457 silly resolved     optionalDependencies: {},
457 silly resolved     engines: { node: '>=0.6' },
457 silly resolved     readme: '# node-assert-plus\n\nThis library is a super small wrapper over node\'s assert module that has two\nthings: (1) the ability to disable assertions with the environment variable\nNODE_NDEBUG, and (2) some API wrappers for argument testing.  Like\n`assert.string(myArg, \'myArg\')`.  As a simple example, most of my code looks\nlike this:\n\n    var assert = require(\'assert-plus\');\n\n    function fooAccount(options, callback) {\n\t    assert.object(options, \'options\');\n\t\tassert.number(options.id, \'options.id);\n\t\tassert.bool(options.isManager, \'options.isManager\');\n\t\tassert.string(options.name, \'options.name\');\n\t\tassert.arrayOfString(options.email, \'options.email\');\n\t\tassert.func(callback, \'callback\');\n\n        // Do stuff\n\t\tcallback(null, {});\n    }\n\n# API\n\nAll methods that *aren\'t* part of node\'s core assert API are simply assumed to\ntake an argument, and then a string \'name\' that\'s not a message; `AssertionError`\nwill be thrown if the assertion fails with a message like:\n\n    AssertionError: foo (string) is required\n\tat test (/home/mark/work/foo/foo.js:3:9)\n\tat Object.<anonymous> (/home/mark/work/foo/foo.js:15:1)\n\tat Module._compile (module.js:446:26)\n\tat Object..js (module.js:464:10)\n\tat Module.load (module.js:353:31)\n\tat Function._load (module.js:311:12)\n\tat Array.0 (module.js:484:10)\n\tat EventEmitter._tickCallback (node.js:190:38)\n\nfrom:\n\n    function test(foo) {\n\t    assert.string(foo, \'foo\');\n    }\n\nThere you go.  You can check that arrays are of a homogenous type with `Arrayof$Type`:\n\n    function test(foo) {\n\t    assert.arrayOfString(foo, \'foo\');\n    }\n\nYou can assert IFF an argument is not `undefined` (i.e., an optional arg):\n\n    assert.optionalString(foo, \'foo\');\n\nLastly, you can opt-out of assertion checking altogether by setting the\nenvironment variable `NODE_NDEBUG=1`.  This is pseudo-useful if you have\nlots of assertions, and don\'t want to pay `typeof ()` taxes to v8 in\nproduction.\n\nThe complete list of APIs is:\n\n* assert.bool\n* assert.buffer\n* assert.func\n* assert.number\n* assert.object\n* assert.string\n* assert.arrayOfBool\n* assert.arrayOfFunc\n* assert.arrayOfNumber\n* assert.arrayOfObject\n* assert.arrayOfString\n* assert.optionalBool\n* assert.optionalBuffer\n* assert.optionalFunc\n* assert.optionalNumber\n* assert.optionalObject\n* assert.optionalString\n* assert.optionalArrayOfBool\n* assert.optionalArrayOfFunc\n* assert.optionalArrayOfNumber\n* assert.optionalArrayOfObject\n* assert.optionalArrayOfString\n* assert.AssertionError\n* assert.fail\n* assert.ok\n* assert.equal\n* assert.notEqual\n* assert.deepEqual\n* assert.notDeepEqual\n* assert.strictEqual\n* assert.notStrictEqual\n* assert.throws\n* assert.doesNotThrow\n* assert.ifError\n\n# Installation\n\n    npm install assert-plus\n\n## License\n\nThe MIT License (MIT)\nCopyright (c) 2012 Mark Cavage\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the "Software"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n## Bugs\n\nSee <https://github.com/mcavage/node-assert-plus/issues>.\n',
457 silly resolved     readmeFilename: 'README.md',
457 silly resolved     _id: 'assert-plus@0.1.2',
457 silly resolved     _from: 'assert-plus@0.1.2' },
457 silly resolved   { name: 'backoff',
457 silly resolved     description: 'Fibonacci and exponential backoffs.',
457 silly resolved     version: '2.2.0',
457 silly resolved     author: { name: 'Mathieu Turcotte', email: 'turcotte.mat@gmail.com' },
457 silly resolved     keywords: [ 'backoff', 'retry', 'fibonacci', 'exponential' ],
457 silly resolved     repository:
457 silly resolved      { type: 'git',
457 silly resolved        url: 'https://github.com/MathieuTurcotte/node-backoff.git' },
457 silly resolved     devDependencies: { sinon: '1.5.2', nodeunit: '0.7', jshint: '1.1.0' },
457 silly resolved     scripts:
457 silly resolved      { pretest: 'node_modules/jshint/bin/jshint lib/ tests/ examples/ index.js',
457 silly resolved        test: 'node_modules/nodeunit/bin/nodeunit tests/' },
457 silly resolved     engines: { node: '>= 0.6' },
457 silly resolved     readme: '# Backoff for Node.js [![Build Status](https://secure.travis-ci.org/MathieuTurcotte/node-backoff.png?branch=master)](http://travis-ci.org/MathieuTurcotte/node-backoff)\n\nFibonacci and exponential backoffs for Node.js.\n\n## Installation\n\n```\nnpm install backoff\n```\n\n## Unit tests\n\n```\nnpm test\n```\n\n## Usage\n\n### Object Oriented\n\nThe usual way to instantiate a new `Backoff` object is to use one predefined\nfactory method: `backoff.fibonacci([options])`, `backoff.exponential([options])`.\n\n`Backoff` inherits from `EventEmitter`. When a backoff starts, a `backoff`\nevent is emitted and, when a backoff ends, a `ready` event is emitted.\nHandlers for these two events are called with the current backoff number and\ndelay.\n\n``` js\nvar backoff = require(\'backoff\');\n\nvar fibonacciBackoff = backoff.fibonacci({\n    randomisationFactor: 0,\n    initialDelay: 10,\n    maxDelay: 300\n});\n\nfibonacciBackoff.failAfter(10);\n\nfibonacciBackoff.on(\'backoff\', function(number, delay) {\n    // Do something when backoff starts, e.g. show to the\n    // user the delay before next reconnection attempt.\n    console.log(number + \' \' + delay + \'ms\');\n});\n\nfibonacciBackoff.on(\'ready\', function(number, delay) {\n    // Do something when backoff ends, e.g. retry a failed\n    // operation (DNS lookup, API call, etc.). If it fails\n    // again then backoff, otherwise reset the backoff\n    // instance.\n    fibonacciBackoff.backoff();\n});\n\nfibonacciBackoff.on(\'fail\', function() {\n    // Do something when the maximum number of backoffs is\n    // reached, e.g. ask the user to check its connection.\n    console.log(\'fail\');\n});\n\nfibonacciBackoff.backoff();\n```\n\nThe previous example would print the following.\n\n```\n0 10ms\n1 10ms\n2 20ms\n3 30ms\n4 50ms\n5 80ms\n6 130ms\n7 210ms\n8 300ms\n9 300ms\nfail\n```\n\nNote that `Backoff` objects are meant to be instantiated once and reused\nseveral times by calling `reset` after a successful "retry".\n\n### Functional\n\nIt\'s also possible to avoid some boilerplate code when invoking an asynchronous\nfunction in a backoff loop by using `backoff.call(fn, [args, ...], callback)`.\n\nTypical usage looks like the following.\n\n``` js\nvar call = backoff.call(get, \'https://duplika.ca/\', function(err, res) {\n    console.log(\'Retries: \' + call.getResults().length);\n\n    if (err) {\n        console.log(\'Error: \' + err.message);\n    } else {\n        console.log(\'Status: \' + res.statusCode);\n    }\n});\n\ncall.setStrategy(new backoff.ExponentialStrategy());\ncall.failAfter(10);\ncall.start();\n```\n\n## API\n\n### backoff.fibonacci([options])\n\nConstructs a Fibonacci backoff (10, 10, 20, 30, 50, etc.).\n\nSee bellow for options description.\n\n### backoff.exponential([options])\n\nConstructs an exponential backoff (10, 20, 40, 80, etc.).\n\nThe options are the following.\n\n- randomisationFactor: defaults to 0, must be between 0 and 1\n- initialDelay: defaults to 100 ms\n- maxDelay: defaults to 10000 ms\n\nWith these values, the backoff delay will increase from 100 ms to 10000 ms. The\nrandomisation factor controls the range of randomness and must be between 0\nand 1. By default, no randomisation is applied on the backoff delay.\n\n### backoff.call(fn, [args, ...], callback)\n\n- fn: function to call in a backoff handler, i.e. the wrapped function\n- args: function\'s arguments\n- callback: function\'s callback accepting an error as its first argument\n\nConstructs a `FunctionCall` instance for the given function. The wrapped\nfunction will get retried until it succeds or reaches the maximum number\nof backoffs. In both cases, the callback function will be invoked with the\nlast result returned by the wrapped function.\n\nIt is the caller\'s responsability to initiate the call by invoking the\n`start` method on the returned `FunctionCall` instance.\n\n### Class Backoff\n\n#### new Backoff(strategy)\n\n- strategy: the backoff strategy to use\n\nConstructs a new backoff object from a specific backoff strategy. The backoff\nstrategy must implement the `BackoffStrategy`interface defined bellow.\n\n#### backoff.failAfter(numberOfBackoffs)\n\n- numberOfBackoffs: maximum number of backoffs before the fail event gets\nemitted, must be greater than 0\n\nSets a limit on the maximum number of backoffs that can be performed before\na fail event gets emitted and the backoff instance is reset. By default, there\nis no limit on the number of backoffs that can be performed.\n\n#### backoff.backoff([err])\n\nStarts a backoff operation. If provided, the error parameter will be emitted\nas the last argument of the `backoff` and `fail` events to let the listeners\nknow why the backoff operation was attempted.\n\nAn error will be thrown an error if a backoff operation is already in progress.\n\nIn practice, this method should be called after a failed attempt to perform a\nsensitive operation (connecting to a database, downloading a resource over the\nnetwork, etc.).\n\n#### backoff.reset()\n\nResets the backoff delay to the initial backoff delay and stop any backoff\noperation in progress. After reset, a backoff instance can and should be\nreused.\n\nIn practice, this method should be called after having successfully completed\nthe sensitive operation guarded by the backoff instance or if the client code\nrequest to stop any reconnection attempt.\n\n#### Event: \'backoff\'\n\n- number: number of backoffs since last reset, starting at 0\n- delay: backoff delay in milliseconds\n- err: optional error parameter passed to `backoff.backoff([err])`\n\nEmitted when a backoff operation is started. Signals to the client how long\nthe next backoff delay will be.\n\n#### Event: \'ready\'\n\n- number: number of backoffs since last reset, starting at 0\n- delay: backoff delay in milliseconds\n\nEmitted when a backoff operation is done. Signals that the failing operation\nshould be retried.\n\n#### Event: \'fail\'\n\n- err: optional error parameter passed to `backoff.backoff([err])`\n\nEmitted when the maximum number of backoffs is reached. This event will only\nbe emitted if the client has set a limit on the number of backoffs by calling\n`backoff.failAfter(numberOfBackoffs)`. The backoff instance is automatically\nreset after this event is emitted.\n\n### Interface BackoffStrategy\n\nA backoff strategy must provide the following methods.\n\n#### strategy.next()\n\nComputes and returns the next backoff delay.\n\n#### strategy.reset()\n\nResets the backoff delay to its initial value.\n\n### Class ExponentialStrategy\n\nExponential (10, 20, 40, 80, etc.) backoff strategy implementation.\n\n#### new ExponentialStrategy([options])\n\nThe options are the following.\n\n- randomisationFactor: defaults to 0, must be between 0 and 1\n- initialDelay: defaults to 100 ms\n- maxDelay: defaults to 10000 ms\n\n### Class FibonacciStrategy\n\nFibonnaci (10, 10, 20, 30, 50, etc.) backoff strategy implementation.\n\n#### new FibonacciStrategy([options])\n\nThe options are the following.\n\n- randomisationFactor: defaults to 0, must be between 0 and 1\n- initialDelay: defaults to 100 ms\n- maxDelay: defaults to 10000 ms\n\n### Class FunctionCall\n\nThis class manages the calling of an asynchronous function within a backoff\nloop.\n\nThis class should rarely be instantiated directly since the factory method\n`backoff.call(fn, [args, ...], callback)` offers a more convenient and safer\nway to create `FunctionCall` instances.\n\n#### new FunctionCall(fn, args, callback)\n\n- fn: asynchronous function to call\n- args: an array containing fn\'s args\n- callback: fn\'s callback\n\nConstructs a function handler for the given asynchronous function.\n\n#### call.setStrategy(strategy)\n\n- strategy: strategy instance to use, defaults to `FibonacciStrategy`.\n\nSets the backoff strategy to use. This method should be called before\n`call.call()`.\n\n#### call.failAfter(maxNumberOfBackoffs)\n\n- maxNumberOfBackoffs: maximum number of backoffs before the call is aborted\n\nSets the maximum number of backoffs before the call is aborted. By default,\nthere is no limit on the number of backoffs that can be performed.\n\nThis method should be called before `call.call()`.\n\n#### call.getResults()\n\nRetrieves all intermediary results returned by the wrapped function. This\nmethod can be called at any point in time during the call life cycle, i.e.\nbefore, during and after the wrapped function invocation.\n\nReturns an array of arrays containing the results returned by the wrapped\nfunction for each call. For example, to get the error code returned by the\nsecond call, one would do the following.\n\n``` js\nvar results = call.getResults();\nvar error = results[1][0];\n```\n\n#### call.start()\n\nInitiates the call the wrapped function. This method should only be called\nonce per function call instance.\n\n#### call.abort()\n\nAborts the call.\n\nPast results can be retrieved using `call.getResults()`. This method can be\ncalled at any point in time during the call life cycle, i.e. before, during\nand after the wrapped function invocation.\n\n#### Event: \'call\'\n\n- args: wrapped function\'s arguments\n\nEmitted each time the wrapped function is called.\n\n#### Event: \'callback\'\n\n- results: wrapped function\'s return values\n\nEmitted each time the wrapped function invokes its callback.\n\n#### Event: \'backoff\'\n\n- number: backoff number, starts at 0\n- delay: backoff delay in milliseconds\n- err: the error that triggered the backoff operation\n\nEmitted each time a backoff operation is started.\n\n## License\n\nThis code is free to use under the terms of the [MIT license](http://mturcotte.mit-license.org/).\n',
457 silly resolved     readmeFilename: 'README.md',
457 silly resolved     _id: 'backoff@2.2.0',
457 silly resolved     _from: 'backoff@2.2.0' } ]
458 info install deep-equal@0.0.0 into /home/vagrant/app/node_modules/restify
459 info install bunyan@0.21.1 into /home/vagrant/app/node_modules/restify
460 info install keep-alive-agent@0.0.1 into /home/vagrant/app/node_modules/restify
461 info install escape-regexp-component@1.0.2 into /home/vagrant/app/node_modules/restify
462 info install formidable@1.0.14 into /home/vagrant/app/node_modules/restify
463 info install mime@1.2.9 into /home/vagrant/app/node_modules/restify
464 info install negotiator@0.2.5 into /home/vagrant/app/node_modules/restify
465 info install node-uuid@1.4.0 into /home/vagrant/app/node_modules/restify
466 info install lru-cache@2.3.0 into /home/vagrant/app/node_modules/restify
467 info install qs@0.6.4 into /home/vagrant/app/node_modules/restify
468 info install semver@1.1.4 into /home/vagrant/app/node_modules/restify
469 info install spdy@1.8.2 into /home/vagrant/app/node_modules/restify
470 info install verror@1.3.6 into /home/vagrant/app/node_modules/restify
471 info install once@1.1.1 into /home/vagrant/app/node_modules/restify
472 info install assert-plus@0.1.2 into /home/vagrant/app/node_modules/restify
473 info install backoff@2.2.0 into /home/vagrant/app/node_modules/restify
474 info installOne deep-equal@0.0.0
475 info installOne bunyan@0.21.1
476 info installOne keep-alive-agent@0.0.1
477 info installOne escape-regexp-component@1.0.2
478 info installOne formidable@1.0.14
479 info installOne mime@1.2.9
480 info installOne negotiator@0.2.5
481 info installOne node-uuid@1.4.0
482 info installOne lru-cache@2.3.0
483 info installOne qs@0.6.4
484 info installOne semver@1.1.4
485 info installOne spdy@1.8.2
486 info installOne verror@1.3.6
487 info installOne once@1.1.1
488 info installOne assert-plus@0.1.2
489 info installOne backoff@2.2.0
490 verbose from cache /home/vagrant/.npm/keep-alive-agent/0.0.1/package/package.json
491 info /home/vagrant/app/node_modules/restify/node_modules/keep-alive-agent unbuild
492 verbose read json /home/vagrant/app/node_modules/restify/node_modules/keep-alive-agent/package.json
493 verbose from cache /home/vagrant/.npm/escape-regexp-component/1.0.2/package/package.json
494 info /home/vagrant/app/node_modules/restify/node_modules/escape-regexp-component unbuild
495 verbose read json /home/vagrant/app/node_modules/restify/node_modules/escape-regexp-component/package.json
496 verbose from cache /home/vagrant/.npm/deep-equal/0.0.0/package/package.json
497 info /home/vagrant/app/node_modules/restify/node_modules/deep-equal unbuild
498 verbose read json /home/vagrant/app/node_modules/restify/node_modules/deep-equal/package.json
499 verbose from cache /home/vagrant/.npm/bunyan/0.21.1/package/package.json
500 info /home/vagrant/app/node_modules/restify/node_modules/bunyan unbuild
501 verbose read json /home/vagrant/app/node_modules/restify/node_modules/bunyan/package.json
502 verbose from cache /home/vagrant/.npm/formidable/1.0.14/package/package.json
503 info /home/vagrant/app/node_modules/restify/node_modules/formidable unbuild
504 verbose read json /home/vagrant/app/node_modules/restify/node_modules/formidable/package.json
505 verbose from cache /home/vagrant/.npm/node-uuid/1.4.0/package/package.json
506 info /home/vagrant/app/node_modules/restify/node_modules/node-uuid unbuild
507 verbose read json /home/vagrant/app/node_modules/restify/node_modules/node-uuid/package.json
508 verbose from cache /home/vagrant/.npm/mime/1.2.9/package/package.json
509 info /home/vagrant/app/node_modules/restify/node_modules/mime unbuild
510 verbose read json /home/vagrant/app/node_modules/restify/node_modules/mime/package.json
511 verbose from cache /home/vagrant/.npm/negotiator/0.2.5/package/package.json
512 info /home/vagrant/app/node_modules/restify/node_modules/negotiator unbuild
513 verbose read json /home/vagrant/app/node_modules/restify/node_modules/negotiator/package.json
514 verbose from cache /home/vagrant/.npm/lru-cache/2.3.0/package/package.json
515 info /home/vagrant/app/node_modules/restify/node_modules/lru-cache unbuild
516 verbose read json /home/vagrant/app/node_modules/restify/node_modules/lru-cache/package.json
517 verbose from cache /home/vagrant/.npm/qs/0.6.4/package/package.json
518 info /home/vagrant/app/node_modules/restify/node_modules/qs unbuild
519 verbose read json /home/vagrant/app/node_modules/restify/node_modules/qs/package.json
520 verbose from cache /home/vagrant/.npm/verror/1.3.6/package/package.json
521 info /home/vagrant/app/node_modules/restify/node_modules/verror unbuild
522 verbose read json /home/vagrant/app/node_modules/restify/node_modules/verror/package.json
523 verbose from cache /home/vagrant/.npm/spdy/1.8.2/package/package.json
524 info /home/vagrant/app/node_modules/restify/node_modules/spdy unbuild
525 verbose read json /home/vagrant/app/node_modules/restify/node_modules/spdy/package.json
526 verbose from cache /home/vagrant/.npm/once/1.1.1/package/package.json
527 info /home/vagrant/app/node_modules/restify/node_modules/once unbuild
528 verbose read json /home/vagrant/app/node_modules/restify/node_modules/once/package.json
529 verbose from cache /home/vagrant/.npm/semver/1.1.4/package/package.json
530 info /home/vagrant/app/node_modules/restify/node_modules/semver unbuild
531 verbose read json /home/vagrant/app/node_modules/restify/node_modules/semver/package.json
532 verbose from cache /home/vagrant/.npm/backoff/2.2.0/package/package.json
533 info /home/vagrant/app/node_modules/restify/node_modules/backoff unbuild
534 verbose read json /home/vagrant/app/node_modules/restify/node_modules/backoff/package.json
535 verbose from cache /home/vagrant/.npm/assert-plus/0.1.2/package/package.json
536 info /home/vagrant/app/node_modules/restify/node_modules/assert-plus unbuild
537 verbose read json /home/vagrant/app/node_modules/restify/node_modules/assert-plus/package.json
538 verbose tar unpack /home/vagrant/.npm/keep-alive-agent/0.0.1/package.tgz
539 silly lockFile 39f56f78-fy-node-modules-keep-alive-agent /home/vagrant/app/node_modules/restify/node_modules/keep-alive-agent
540 verbose lock /home/vagrant/app/node_modules/restify/node_modules/keep-alive-agent /home/vagrant/.npm/39f56f78-fy-node-modules-keep-alive-agent.lock
541 silly lockFile 89983d56-ep-alive-agent-0-0-1-package-tgz /home/vagrant/.npm/keep-alive-agent/0.0.1/package.tgz
542 verbose lock /home/vagrant/.npm/keep-alive-agent/0.0.1/package.tgz /home/vagrant/.npm/89983d56-ep-alive-agent-0-0-1-package-tgz.lock
543 verbose tar unpack /home/vagrant/.npm/escape-regexp-component/1.0.2/package.tgz
544 silly lockFile 6662a640--modules-escape-regexp-component /home/vagrant/app/node_modules/restify/node_modules/escape-regexp-component
545 verbose lock /home/vagrant/app/node_modules/restify/node_modules/escape-regexp-component /home/vagrant/.npm/6662a640--modules-escape-regexp-component.lock
546 silly lockFile 47bd3b16-gexp-component-1-0-2-package-tgz /home/vagrant/.npm/escape-regexp-component/1.0.2/package.tgz
547 verbose lock /home/vagrant/.npm/escape-regexp-component/1.0.2/package.tgz /home/vagrant/.npm/47bd3b16-gexp-component-1-0-2-package-tgz.lock
548 verbose tar unpack /home/vagrant/.npm/deep-equal/0.0.0/package.tgz
549 silly lockFile 0827b1d5--restify-node-modules-deep-equal /home/vagrant/app/node_modules/restify/node_modules/deep-equal
550 verbose lock /home/vagrant/app/node_modules/restify/node_modules/deep-equal /home/vagrant/.npm/0827b1d5--restify-node-modules-deep-equal.lock
551 silly lockFile 268dd85f-npm-deep-equal-0-0-0-package-tgz /home/vagrant/.npm/deep-equal/0.0.0/package.tgz
552 verbose lock /home/vagrant/.npm/deep-equal/0.0.0/package.tgz /home/vagrant/.npm/268dd85f-npm-deep-equal-0-0-0-package-tgz.lock
553 verbose tar unpack /home/vagrant/.npm/bunyan/0.21.1/package.tgz
554 silly lockFile 1282b5a8-ules-restify-node-modules-bunyan /home/vagrant/app/node_modules/restify/node_modules/bunyan
555 verbose lock /home/vagrant/app/node_modules/restify/node_modules/bunyan /home/vagrant/.npm/1282b5a8-ules-restify-node-modules-bunyan.lock
556 silly lockFile 80adf6e3-nt-npm-bunyan-0-21-1-package-tgz /home/vagrant/.npm/bunyan/0.21.1/package.tgz
557 verbose lock /home/vagrant/.npm/bunyan/0.21.1/package.tgz /home/vagrant/.npm/80adf6e3-nt-npm-bunyan-0-21-1-package-tgz.lock
558 verbose tar unpack /home/vagrant/.npm/node-uuid/1.4.0/package.tgz
559 silly lockFile e1881a21-s-restify-node-modules-node-uuid /home/vagrant/app/node_modules/restify/node_modules/node-uuid
560 verbose lock /home/vagrant/app/node_modules/restify/node_modules/node-uuid /home/vagrant/.npm/e1881a21-s-restify-node-modules-node-uuid.lock
561 silly lockFile e8be4612--npm-node-uuid-1-4-0-package-tgz /home/vagrant/.npm/node-uuid/1.4.0/package.tgz
562 verbose lock /home/vagrant/.npm/node-uuid/1.4.0/package.tgz /home/vagrant/.npm/e8be4612--npm-node-uuid-1-4-0-package-tgz.lock
563 verbose tar unpack /home/vagrant/.npm/formidable/1.0.14/package.tgz
564 silly lockFile fe350caa--restify-node-modules-formidable /home/vagrant/app/node_modules/restify/node_modules/formidable
565 verbose lock /home/vagrant/app/node_modules/restify/node_modules/formidable /home/vagrant/.npm/fe350caa--restify-node-modules-formidable.lock
566 silly lockFile 74811e0a-pm-formidable-1-0-14-package-tgz /home/vagrant/.npm/formidable/1.0.14/package.tgz
567 verbose lock /home/vagrant/.npm/formidable/1.0.14/package.tgz /home/vagrant/.npm/74811e0a-pm-formidable-1-0-14-package-tgz.lock
568 verbose tar unpack /home/vagrant/.npm/mime/1.2.9/package.tgz
569 silly lockFile 92b19c40-odules-restify-node-modules-mime /home/vagrant/app/node_modules/restify/node_modules/mime
570 verbose lock /home/vagrant/app/node_modules/restify/node_modules/mime /home/vagrant/.npm/92b19c40-odules-restify-node-modules-mime.lock
571 silly lockFile 19275dca-grant-npm-mime-1-2-9-package-tgz /home/vagrant/.npm/mime/1.2.9/package.tgz
572 verbose lock /home/vagrant/.npm/mime/1.2.9/package.tgz /home/vagrant/.npm/19275dca-grant-npm-mime-1-2-9-package-tgz.lock
573 verbose tar unpack /home/vagrant/.npm/qs/0.6.4/package.tgz
574 silly lockFile e246c5e7--modules-restify-node-modules-qs /home/vagrant/app/node_modules/restify/node_modules/qs
575 verbose lock /home/vagrant/app/node_modules/restify/node_modules/qs /home/vagrant/.npm/e246c5e7--modules-restify-node-modules-qs.lock
576 silly lockFile 11f04825-vagrant-npm-qs-0-6-4-package-tgz /home/vagrant/.npm/qs/0.6.4/package.tgz
577 verbose lock /home/vagrant/.npm/qs/0.6.4/package.tgz /home/vagrant/.npm/11f04825-vagrant-npm-qs-0-6-4-package-tgz.lock
578 verbose tar unpack /home/vagrant/.npm/spdy/1.8.2/package.tgz
579 silly lockFile d2aa7abd-odules-restify-node-modules-spdy /home/vagrant/app/node_modules/restify/node_modules/spdy
580 verbose lock /home/vagrant/app/node_modules/restify/node_modules/spdy /home/vagrant/.npm/d2aa7abd-odules-restify-node-modules-spdy.lock
581 silly lockFile b5e3ed30-grant-npm-spdy-1-8-2-package-tgz /home/vagrant/.npm/spdy/1.8.2/package.tgz
582 verbose lock /home/vagrant/.npm/spdy/1.8.2/package.tgz /home/vagrant/.npm/b5e3ed30-grant-npm-spdy-1-8-2-package-tgz.lock
583 verbose tar unpack /home/vagrant/.npm/negotiator/0.2.5/package.tgz
584 silly lockFile 68f307af--restify-node-modules-negotiator /home/vagrant/app/node_modules/restify/node_modules/negotiator
585 verbose lock /home/vagrant/app/node_modules/restify/node_modules/negotiator /home/vagrant/.npm/68f307af--restify-node-modules-negotiator.lock
586 silly lockFile 3301ce89-npm-negotiator-0-2-5-package-tgz /home/vagrant/.npm/negotiator/0.2.5/package.tgz
587 verbose lock /home/vagrant/.npm/negotiator/0.2.5/package.tgz /home/vagrant/.npm/3301ce89-npm-negotiator-0-2-5-package-tgz.lock
588 verbose tar unpack /home/vagrant/.npm/verror/1.3.6/package.tgz
589 silly lockFile 6bb618fb-ules-restify-node-modules-verror /home/vagrant/app/node_modules/restify/node_modules/verror
590 verbose lock /home/vagrant/app/node_modules/restify/node_modules/verror /home/vagrant/.npm/6bb618fb-ules-restify-node-modules-verror.lock
591 silly lockFile be498692-ant-npm-verror-1-3-6-package-tgz /home/vagrant/.npm/verror/1.3.6/package.tgz
592 verbose lock /home/vagrant/.npm/verror/1.3.6/package.tgz /home/vagrant/.npm/be498692-ant-npm-verror-1-3-6-package-tgz.lock
593 verbose tar unpack /home/vagrant/.npm/lru-cache/2.3.0/package.tgz
594 silly lockFile e3c87d1e-s-restify-node-modules-lru-cache /home/vagrant/app/node_modules/restify/node_modules/lru-cache
595 verbose lock /home/vagrant/app/node_modules/restify/node_modules/lru-cache /home/vagrant/.npm/e3c87d1e-s-restify-node-modules-lru-cache.lock
596 silly lockFile b68c6773--npm-lru-cache-2-3-0-package-tgz /home/vagrant/.npm/lru-cache/2.3.0/package.tgz
597 verbose lock /home/vagrant/.npm/lru-cache/2.3.0/package.tgz /home/vagrant/.npm/b68c6773--npm-lru-cache-2-3-0-package-tgz.lock
598 verbose tar unpack /home/vagrant/.npm/assert-plus/0.1.2/package.tgz
599 silly lockFile d45085d4-restify-node-modules-assert-plus /home/vagrant/app/node_modules/restify/node_modules/assert-plus
600 verbose lock /home/vagrant/app/node_modules/restify/node_modules/assert-plus /home/vagrant/.npm/d45085d4-restify-node-modules-assert-plus.lock
601 silly lockFile ac5b1146-pm-assert-plus-0-1-2-package-tgz /home/vagrant/.npm/assert-plus/0.1.2/package.tgz
602 verbose lock /home/vagrant/.npm/assert-plus/0.1.2/package.tgz /home/vagrant/.npm/ac5b1146-pm-assert-plus-0-1-2-package-tgz.lock
603 verbose tar unpack /home/vagrant/.npm/once/1.1.1/package.tgz
604 silly lockFile 3d360b3d-odules-restify-node-modules-once /home/vagrant/app/node_modules/restify/node_modules/once
605 verbose lock /home/vagrant/app/node_modules/restify/node_modules/once /home/vagrant/.npm/3d360b3d-odules-restify-node-modules-once.lock
606 silly lockFile 079d4c94-grant-npm-once-1-1-1-package-tgz /home/vagrant/.npm/once/1.1.1/package.tgz
607 verbose lock /home/vagrant/.npm/once/1.1.1/package.tgz /home/vagrant/.npm/079d4c94-grant-npm-once-1-1-1-package-tgz.lock
608 verbose tar unpack /home/vagrant/.npm/semver/1.1.4/package.tgz
609 silly lockFile 20f10363-ules-restify-node-modules-semver /home/vagrant/app/node_modules/restify/node_modules/semver
610 verbose lock /home/vagrant/app/node_modules/restify/node_modules/semver /home/vagrant/.npm/20f10363-ules-restify-node-modules-semver.lock
611 silly lockFile 5b26f803-ant-npm-semver-1-1-4-package-tgz /home/vagrant/.npm/semver/1.1.4/package.tgz
612 verbose lock /home/vagrant/.npm/semver/1.1.4/package.tgz /home/vagrant/.npm/5b26f803-ant-npm-semver-1-1-4-package-tgz.lock
613 verbose tar unpack /home/vagrant/.npm/backoff/2.2.0/package.tgz
614 silly lockFile d8a13700-les-restify-node-modules-backoff /home/vagrant/app/node_modules/restify/node_modules/backoff
615 verbose lock /home/vagrant/app/node_modules/restify/node_modules/backoff /home/vagrant/.npm/d8a13700-les-restify-node-modules-backoff.lock
616 silly lockFile 22e46083-nt-npm-backoff-2-2-0-package-tgz /home/vagrant/.npm/backoff/2.2.0/package.tgz
617 verbose lock /home/vagrant/.npm/backoff/2.2.0/package.tgz /home/vagrant/.npm/22e46083-nt-npm-backoff-2-2-0-package-tgz.lock
618 silly gunzTarPerm modes [ '755', '644' ]
619 silly gunzTarPerm modes [ '755', '644' ]
620 silly gunzTarPerm modes [ '755', '644' ]
621 silly gunzTarPerm modes [ '755', '644' ]
622 silly gunzTarPerm modes [ '755', '644' ]
623 silly gunzTarPerm modes [ '755', '644' ]
624 silly gunzTarPerm modes [ '755', '644' ]
625 silly gunzTarPerm modes [ '755', '644' ]
626 silly gunzTarPerm modes [ '755', '644' ]
627 silly gunzTarPerm modes [ '755', '644' ]
628 silly gunzTarPerm modes [ '755', '644' ]
629 silly gunzTarPerm modes [ '755', '644' ]
630 silly gunzTarPerm modes [ '755', '644' ]
631 silly gunzTarPerm modes [ '755', '644' ]
632 silly gunzTarPerm modes [ '755', '644' ]
633 silly gunzTarPerm modes [ '755', '644' ]
634 silly gunzTarPerm extractEntry package.json
635 silly gunzTarPerm extractEntry package.json
636 silly gunzTarPerm extractEntry package.json
637 silly gunzTarPerm extractEntry package.json
638 silly gunzTarPerm extractEntry package.json
639 silly gunzTarPerm extractEntry package.json
640 silly gunzTarPerm extractEntry package.json
641 silly gunzTarPerm extractEntry package.json
642 silly gunzTarPerm extractEntry package.json
643 silly gunzTarPerm extractEntry package.json
644 silly gunzTarPerm extractEntry package.json
645 silly gunzTarPerm extractEntry package.json
646 silly gunzTarPerm extractEntry .npmignore
647 silly gunzTarPerm extractEntry README.md
648 silly gunzTarPerm extractEntry package.json
649 silly gunzTarPerm extractEntry package.json
650 silly gunzTarPerm extractEntry package.json
651 silly gunzTarPerm extractEntry package.json
652 silly gunzTarPerm extractEntry .npmignore
653 silly gunzTarPerm extractEntry index.js
654 silly gunzTarPerm extractEntry .npmignore
655 silly gunzTarPerm extractEntry README.md
656 silly gunzTarPerm extractEntry index.js
657 silly gunzTarPerm extractEntry README.markdown
658 silly gunzTarPerm extractEntry .npmignore
659 silly gunzTarPerm extractEntry LICENSE
660 silly gunzTarPerm extractEntry LICENSE
661 silly gunzTarPerm extractEntry examples/accept.js
662 silly gunzTarPerm extractEntry README.md
663 silly gunzTarPerm extractEntry LICENSE
664 silly gunzTarPerm extractEntry README.md
665 silly gunzTarPerm extractEntry LICENSE
666 silly gunzTarPerm extractEntry .npmignore
667 silly gunzTarPerm extractEntry index.js
668 silly gunzTarPerm extractEntry .npmignore
669 silly gunzTarPerm extractEntry README.md
670 silly gunzTarPerm extractEntry README.md
671 silly gunzTarPerm extractEntry assert.js
672 silly gunzTarPerm extractEntry README.md
673 silly gunzTarPerm extractEntry LICENSE
674 silly gunzTarPerm extractEntry .npmignore
675 silly gunzTarPerm extractEntry README.md
676 silly gunzTarPerm extractEntry .npmignore
677 silly gunzTarPerm extractEntry README.md
678 silly gunzTarPerm extractEntry .npmignore
679 silly gunzTarPerm extractEntry README.md
680 silly gunzTarPerm extractEntry .npmignore
681 silly gunzTarPerm extractEntry README.md
682 silly gunzTarPerm extractEntry LICENSE
683 silly gunzTarPerm extractEntry index.js
684 silly gunzTarPerm extractEntry History.md
685 silly gunzTarPerm extractEntry Makefile
686 silly gunzTarPerm extractEntry uuid.js
687 silly gunzTarPerm extractEntry LICENSE.md
688 silly gunzTarPerm extractEntry benchmark/README.md
689 silly gunzTarPerm extractEntry benchmark/benchmark.js
690 silly gunzTarPerm extractEntry benchmark/bench.gnu
691 silly gunzTarPerm extractEntry benchmark/bench.sh
692 silly gunzTarPerm extractEntry benchmark/benchmark-native.c
693 silly gunzTarPerm extractEntry test/compare_v1.js
694 silly gunzTarPerm extractEntry test/test.js
695 silly gunzTarPerm extractEntry test/test.html
696 silly gunzTarPerm extractEntry semver.js
697 silly gunzTarPerm extractEntry test.js
698 silly gunzTarPerm extractEntry bin/semver
699 silly gunzTarPerm extractEntry .gitmodules
700 silly gunzTarPerm extractEntry Readme.md
701 silly gunzTarPerm extractEntry LICENSE
702 silly gunzTarPerm extractEntry s.js
703 silly gunzTarPerm extractEntry index.js
704 silly gunzTarPerm extractEntry benchmark/bench-multipart-parser.js
705 silly gunzTarPerm extractEntry example/cmp.js
706 silly gunzTarPerm extractEntry test/cmp.js
707 silly gunzTarPerm extractEntry examples/charset.js
708 silly gunzTarPerm extractEntry examples/encoding.js
709 silly gunzTarPerm extractEntry mime.js
710 silly gunzTarPerm extractEntry test.js
711 silly gunzTarPerm extractEntry once.js
712 silly gunzTarPerm extractEntry test/once.js
713 silly gunzTarPerm extractEntry LICENSE.txt
714 silly gunzTarPerm extractEntry LICENSE
715 silly gunzTarPerm extractEntry Makefile.targ
716 silly gunzTarPerm extractEntry .travis.yml
717 silly gunzTarPerm extractEntry 1.json
718 silly gunzTarPerm extractEntry LICENSE
719 silly gunzTarPerm extractEntry index.js
720 silly gunzTarPerm extractEntry .jshintrc
721 silly gunzTarPerm extractEntry test/test.js
722 silly gunzTarPerm extractEntry Readme.md
723 silly gunzTarPerm extractEntry component.json
724 silly gunzTarPerm extractEntry AUTHORS
725 silly gunzTarPerm extractEntry lib/lru-cache.js
726 silly gunzTarPerm extractEntry .travis.yml
727 silly gunzTarPerm extractEntry tool/record.js
728 silly gunzTarPerm extractEntry examples/language.js
729 silly gunzTarPerm extractEntry lib/charset.js
730 silly gunzTarPerm extractEntry Makefile
731 silly gunzTarPerm extractEntry tools/timechild.js
732 silly gunzTarPerm extractEntry .gitmodules
733 silly gunzTarPerm extractEntry lib/spdy.js
734 silly gunzTarPerm extractEntry lib/spdy/parser.js
735 silly gunzTarPerm extractEntry types/mime.types
736 silly gunzTarPerm extractEntry types/node.types
737 silly gunzTarPerm extractEntry doc/backoff_events.png
738 silly gunzTarPerm extractEntry lib/file.js
739 silly gunzTarPerm extractEntry lib/incoming_form.js
740 silly gunzTarPerm extractEntry test/basic.js
741 silly gunzTarPerm extractEntry lib/encoding.js
742 silly gunzTarPerm extractEntry lib/language.js
743 silly gunzTarPerm extractEntry lib/mediaType.js
744 silly gunzTarPerm extractEntry lib/negotiator.js
745 silly gunzTarPerm extractEntry readme.md
746 silly gunzTarPerm extractEntry test/charset.js
747 silly gunzTarPerm extractEntry test/encoding.js
748 silly gunzTarPerm extractEntry test/language.js
749 silly gunzTarPerm extractEntry test/mediaType.js
750 silly gunzTarPerm extractEntry examples/levels-verror.js
751 silly gunzTarPerm extractEntry examples/levels-werror.js
752 silly gunzTarPerm extractEntry lib/index.js
753 verbose read json /home/vagrant/app/node_modules/restify/node_modules/assert-plus/package.json
754 silly gunzTarPerm extractEntry lib/spdy/response.js
755 silly gunzTarPerm extractEntry test/foreach.js
756 silly gunzTarPerm extractEntry test/memory-leak.js
757 verbose read json /home/vagrant/app/node_modules/restify/node_modules/once/package.json
758 silly gunzTarPerm extractEntry examples/varargs.js
759 silly gunzTarPerm extractEntry examples/verror.js
760 silly gunzTarPerm extractEntry lib/spdy/scheduler.js
761 silly gunzTarPerm extractEntry lib/spdy/server.js
762 silly gunzTarPerm extractEntry doc/function_call_events.png
763 silly gunzTarPerm extractEntry doc/layers.png
764 silly lockFile d45085d4-restify-node-modules-assert-plus /home/vagrant/app/node_modules/restify/node_modules/assert-plus
765 silly lockFile d45085d4-restify-node-modules-assert-plus /home/vagrant/app/node_modules/restify/node_modules/assert-plus
766 silly lockFile ac5b1146-pm-assert-plus-0-1-2-package-tgz /home/vagrant/.npm/assert-plus/0.1.2/package.tgz
767 silly lockFile ac5b1146-pm-assert-plus-0-1-2-package-tgz /home/vagrant/.npm/assert-plus/0.1.2/package.tgz
768 verbose read json /home/vagrant/app/node_modules/restify/node_modules/deep-equal/package.json
769 silly gunzTarPerm extractEntry lib/json_parser.js
770 silly gunzTarPerm extractEntry lib/multipart_parser.js
771 silly gunzTarPerm extractEntry lib/spdy/utils.js
772 silly gunzTarPerm extractEntry lib/spdy/zlib-pool.js
773 silly lockFile 3d360b3d-odules-restify-node-modules-once /home/vagrant/app/node_modules/restify/node_modules/once
774 silly lockFile 3d360b3d-odules-restify-node-modules-once /home/vagrant/app/node_modules/restify/node_modules/once
775 info preinstall assert-plus@0.1.2
776 verbose read json /home/vagrant/app/node_modules/restify/node_modules/qs/package.json
777 silly lockFile 079d4c94-grant-npm-once-1-1-1-package-tgz /home/vagrant/.npm/once/1.1.1/package.tgz
778 silly lockFile 079d4c94-grant-npm-once-1-1-1-package-tgz /home/vagrant/.npm/once/1.1.1/package.tgz
779 verbose from cache /home/vagrant/app/node_modules/restify/node_modules/assert-plus/package.json
780 silly gunzTarPerm extractEntry CHANGES.md
781 silly gunzTarPerm extractEntry examples/exponential.js
782 verbose readDependencies using package.json deps
783 verbose from cache /home/vagrant/app/node_modules/restify/node_modules/assert-plus/package.json
784 silly gunzTarPerm extractEntry lib/octet_parser.js
785 silly gunzTarPerm extractEntry lib/querystring_parser.js
786 verbose readDependencies using package.json deps
787 silly resolved []
788 verbose about to build /home/vagrant/app/node_modules/restify/node_modules/assert-plus
789 info build /home/vagrant/app/node_modules/restify/node_modules/assert-plus
790 verbose from cache /home/vagrant/app/node_modules/restify/node_modules/assert-plus/package.json
791 verbose linkStuff [ false,
791 verbose linkStuff   false,
791 verbose linkStuff   false,
791 verbose linkStuff   '/home/vagrant/app/node_modules/restify/node_modules' ]
792 info linkStuff assert-plus@0.1.2
793 verbose linkBins assert-plus@0.1.2
794 verbose linkMans assert-plus@0.1.2
795 verbose rebuildBundles assert-plus@0.1.2
796 verbose read json /home/vagrant/app/node_modules/restify/node_modules/escape-regexp-component/package.json
797 info install assert-plus@0.1.2
798 silly lockFile 0827b1d5--restify-node-modules-deep-equal /home/vagrant/app/node_modules/restify/node_modules/deep-equal
799 silly lockFile 0827b1d5--restify-node-modules-deep-equal /home/vagrant/app/node_modules/restify/node_modules/deep-equal
800 info preinstall once@1.1.1
801 silly lockFile 268dd85f-npm-deep-equal-0-0-0-package-tgz /home/vagrant/.npm/deep-equal/0.0.0/package.tgz
802 silly lockFile 268dd85f-npm-deep-equal-0-0-0-package-tgz /home/vagrant/.npm/deep-equal/0.0.0/package.tgz
803 info postinstall assert-plus@0.1.2
804 verbose from cache /home/vagrant/app/node_modules/restify/node_modules/once/package.json
805 verbose readDependencies using package.json deps
806 verbose from cache /home/vagrant/app/node_modules/restify/node_modules/once/package.json
807 silly gunzTarPerm extractEntry lib/spdy/protocol/generic.js
808 silly gunzTarPerm extractEntry lib/spdy/protocol/v2/dictionary.js
809 silly lockFile e246c5e7--modules-restify-node-modules-qs /home/vagrant/app/node_modules/restify/node_modules/qs
810 silly lockFile e246c5e7--modules-restify-node-modules-qs /home/vagrant/app/node_modules/restify/node_modules/qs
811 verbose readDependencies using package.json deps
812 silly resolved []
813 verbose about to build /home/vagrant/app/node_modules/restify/node_modules/once
814 info build /home/vagrant/app/node_modules/restify/node_modules/once
815 verbose from cache /home/vagrant/app/node_modules/restify/node_modules/once/package.json
816 verbose linkStuff [ false,
816 verbose linkStuff   false,
816 verbose linkStuff   false,
816 verbose linkStuff   '/home/vagrant/app/node_modules/restify/node_modules' ]
817 info linkStuff once@1.1.1
818 verbose linkBins once@1.1.1
819 verbose linkMans once@1.1.1
820 verbose rebuildBundles once@1.1.1
821 info preinstall deep-equal@0.0.0
822 info install once@1.1.1
823 silly lockFile 11f04825-vagrant-npm-qs-0-6-4-package-tgz /home/vagrant/.npm/qs/0.6.4/package.tgz
824 silly lockFile 11f04825-vagrant-npm-qs-0-6-4-package-tgz /home/vagrant/.npm/qs/0.6.4/package.tgz
825 silly gunzTarPerm extractEntry examples/exponential_strategy.js
826 silly gunzTarPerm extractEntry examples/fail.js
827 verbose from cache /home/vagrant/app/node_modules/restify/node_modules/deep-equal/package.json
828 info postinstall once@1.1.1
829 silly gunzTarPerm extractEntry examples/werror.js
830 silly gunzTarPerm extractEntry jsl.node.conf
831 verbose readDependencies using package.json deps
832 verbose from cache /home/vagrant/app/node_modules/restify/node_modules/deep-equal/package.json
833 silly lockFile 6662a640--modules-escape-regexp-component /home/vagrant/app/node_modules/restify/node_modules/escape-regexp-component
834 silly lockFile 6662a640--modules-escape-regexp-component /home/vagrant/app/node_modules/restify/node_modules/escape-regexp-component
835 silly gunzTarPerm extractEntry Readme.md
836 silly gunzTarPerm extractEntry test/common.js
837 verbose readDependencies using package.json deps
838 silly resolved []
839 verbose about to build /home/vagrant/app/node_modules/restify/node_modules/deep-equal
840 info build /home/vagrant/app/node_modules/restify/node_modules/deep-equal
841 verbose from cache /home/vagrant/app/node_modules/restify/node_modules/deep-equal/package.json
842 verbose linkStuff [ false,
842 verbose linkStuff   false,
842 verbose linkStuff   false,
842 verbose linkStuff   '/home/vagrant/app/node_modules/restify/node_modules' ]
843 info linkStuff deep-equal@0.0.0
844 verbose linkBins deep-equal@0.0.0
845 verbose linkMans deep-equal@0.0.0
846 verbose rebuildBundles deep-equal@0.0.0
847 info install deep-equal@0.0.0
848 silly lockFile 47bd3b16-gexp-component-1-0-2-package-tgz /home/vagrant/.npm/escape-regexp-component/1.0.2/package.tgz
849 silly lockFile 47bd3b16-gexp-component-1-0-2-package-tgz /home/vagrant/.npm/escape-regexp-component/1.0.2/package.tgz
850 info preinstall qs@0.6.4
851 info postinstall deep-equal@0.0.0
852 verbose from cache /home/vagrant/app/node_modules/restify/node_modules/qs/package.json
853 verbose readDependencies using package.json deps
854 verbose from cache /home/vagrant/app/node_modules/restify/node_modules/qs/package.json
855 silly gunzTarPerm extractEntry lib/verror.js
856 silly gunzTarPerm extractEntry Makefile
857 verbose readDependencies using package.json deps
858 silly resolved []
859 verbose about to build /home/vagrant/app/node_modules/restify/node_modules/qs
860 info build /home/vagrant/app/node_modules/restify/node_modules/qs
861 verbose from cache /home/vagrant/app/node_modules/restify/node_modules/qs/package.json
862 verbose linkStuff [ false,
862 verbose linkStuff   false,
862 verbose linkStuff   false,
862 verbose linkStuff   '/home/vagrant/app/node_modules/restify/node_modules' ]
863 info linkStuff qs@0.6.4
864 verbose linkBins qs@0.6.4
865 verbose linkMans qs@0.6.4
866 verbose rebuildBundles qs@0.6.4
867 info preinstall escape-regexp-component@1.0.2
868 info install qs@0.6.4
869 verbose from cache /home/vagrant/app/node_modules/restify/node_modules/escape-regexp-component/package.json
870 info postinstall qs@0.6.4
871 verbose readDependencies using package.json deps
872 verbose from cache /home/vagrant/app/node_modules/restify/node_modules/escape-regexp-component/package.json
873 verbose readDependencies using package.json deps
874 silly resolved []
875 verbose about to build /home/vagrant/app/node_modules/restify/node_modules/escape-regexp-component
876 info build /home/vagrant/app/node_modules/restify/node_modules/escape-regexp-component
877 verbose from cache /home/vagrant/app/node_modules/restify/node_modules/escape-regexp-component/package.json
878 verbose linkStuff [ false,
878 verbose linkStuff   false,
878 verbose linkStuff   false,
878 verbose linkStuff   '/home/vagrant/app/node_modules/restify/node_modules' ]
879 info linkStuff escape-regexp-component@1.0.2
880 verbose linkBins escape-regexp-component@1.0.2
881 verbose linkMans escape-regexp-component@1.0.2
882 verbose rebuildBundles escape-regexp-component@1.0.2
883 info install escape-regexp-component@1.0.2
884 silly gunzTarPerm extractEntry test/run.js
885 silly gunzTarPerm extractEntry test/fixture/multipart.js
886 info postinstall escape-regexp-component@1.0.2
887 silly gunzTarPerm extractEntry tools/timeguard.js
888 silly gunzTarPerm extractEntry tools/timesrc.js
889 silly gunzTarPerm extractEntry lib/spdy/protocol/v2/framer.js
890 silly gunzTarPerm extractEntry lib/spdy/protocol/v2/index.js
891 silly gunzTarPerm extractEntry tests/tst.inherit.js
892 silly gunzTarPerm extractEntry tests/tst.verror.js
893 verbose read json /home/vagrant/app/node_modules/restify/node_modules/keep-alive-agent/package.json
894 silly gunzTarPerm extractEntry examples/fibonacci.js
895 silly gunzTarPerm extractEntry examples/fibonacci_strategy.js
896 silly gunzTarPerm extractEntry tools/cutarelease.py
897 silly gunzTarPerm extractEntry tools/jsstyle
898 silly gunzTarPerm extractEntry tests/tst.werror.js
899 silly lockFile 39f56f78-fy-node-modules-keep-alive-agent /home/vagrant/app/node_modules/restify/node_modules/keep-alive-agent
900 silly lockFile 39f56f78-fy-node-modules-keep-alive-agent /home/vagrant/app/node_modules/restify/node_modules/keep-alive-agent
901 silly lockFile 89983d56-ep-alive-agent-0-0-1-package-tgz /home/vagrant/.npm/keep-alive-agent/0.0.1/package.tgz
902 silly lockFile 89983d56-ep-alive-agent-0-0-1-package-tgz /home/vagrant/.npm/keep-alive-agent/0.0.1/package.tgz
903 silly gunzTarPerm extractEntry lib/spdy/protocol/v2/protocol.js
904 silly gunzTarPerm extractEntry lib/spdy/protocol/v3/dictionary.js
905 verbose read json /home/vagrant/app/node_modules/restify/node_modules/semver/package.json
906 info preinstall keep-alive-agent@0.0.1
907 verbose from cache /home/vagrant/app/node_modules/restify/node_modules/keep-alive-agent/package.json
908 silly gunzTarPerm extractEntry tools/screenshot1.png
909 silly gunzTarPerm extractEntry tools/statsd-notes.txt
910 verbose readDependencies using package.json deps
911 verbose from cache /home/vagrant/app/node_modules/restify/node_modules/keep-alive-agent/package.json
912 verbose readDependencies using package.json deps
913 silly resolved []
914 verbose about to build /home/vagrant/app/node_modules/restify/node_modules/keep-alive-agent
915 info build /home/vagrant/app/node_modules/restify/node_modules/keep-alive-agent
916 verbose from cache /home/vagrant/app/node_modules/restify/node_modules/keep-alive-agent/package.json
917 verbose linkStuff [ false,
917 verbose linkStuff   false,
917 verbose linkStuff   false,
917 verbose linkStuff   '/home/vagrant/app/node_modules/restify/node_modules' ]
918 info linkStuff keep-alive-agent@0.0.1
919 verbose linkBins keep-alive-agent@0.0.1
920 verbose linkMans keep-alive-agent@0.0.1
921 verbose rebuildBundles keep-alive-agent@0.0.1
922 info install keep-alive-agent@0.0.1
923 silly lockFile 20f10363-ules-restify-node-modules-semver /home/vagrant/app/node_modules/restify/node_modules/semver
924 silly lockFile 20f10363-ules-restify-node-modules-semver /home/vagrant/app/node_modules/restify/node_modules/semver
925 silly gunzTarPerm extractEntry test/fixture/file/beta-sticker-1.png
926 silly gunzTarPerm extractEntry test/fixture/file/binaryfile.tar.gz
927 info postinstall keep-alive-agent@0.0.1
928 silly gunzTarPerm extractEntry lib/spdy/protocol/v3/framer.js
929 silly gunzTarPerm extractEntry lib/spdy/protocol/v3/index.js
930 silly lockFile 5b26f803-ant-npm-semver-1-1-4-package-tgz /home/vagrant/.npm/semver/1.1.4/package.tgz
931 silly lockFile 5b26f803-ant-npm-semver-1-1-4-package-tgz /home/vagrant/.npm/semver/1.1.4/package.tgz
932 verbose read json /home/vagrant/app/node_modules/restify/node_modules/lru-cache/package.json
933 info preinstall semver@1.1.4
934 silly gunzTarPerm extractEntry test/fixture/file/blank.gif
935 silly gunzTarPerm extractEntry test/fixture/file/funkyfilename.txt
936 verbose from cache /home/vagrant/app/node_modules/restify/node_modules/semver/package.json
937 verbose readDependencies using package.json deps
938 verbose from cache /home/vagrant/app/node_modules/restify/node_modules/semver/package.json
939 verbose readDependencies using package.json deps
940 silly resolved []
941 verbose about to build /home/vagrant/app/node_modules/restify/node_modules/semver
942 info build /home/vagrant/app/node_modules/restify/node_modules/semver
943 verbose from cache /home/vagrant/app/node_modules/restify/node_modules/semver/package.json
944 verbose linkStuff [ false,
944 verbose linkStuff   false,
944 verbose linkStuff   false,
944 verbose linkStuff   '/home/vagrant/app/node_modules/restify/node_modules' ]
945 info linkStuff semver@1.1.4
946 verbose linkBins semver@1.1.4
947 verbose link bins [ { semver: './bin/semver' },
947 verbose link bins   '/home/vagrant/app/node_modules/restify/node_modules/.bin',
947 verbose link bins   false ]
948 verbose linkMans semver@1.1.4
949 verbose rebuildBundles semver@1.1.4
950 silly gunzTarPerm extractEntry TODO.md
951 silly gunzTarPerm extractEntry AUTHORS
952 silly lockFile e3c87d1e-s-restify-node-modules-lru-cache /home/vagrant/app/node_modules/restify/node_modules/lru-cache
953 silly lockFile e3c87d1e-s-restify-node-modules-lru-cache /home/vagrant/app/node_modules/restify/node_modules/lru-cache
954 silly lockFile b68c6773--npm-lru-cache-2-3-0-package-tgz /home/vagrant/.npm/lru-cache/2.3.0/package.tgz
955 silly lockFile b68c6773--npm-lru-cache-2-3-0-package-tgz /home/vagrant/.npm/lru-cache/2.3.0/package.tgz
956 info /home/vagrant/app/node_modules/restify/node_modules/semver unbuild
957 verbose from cache /home/vagrant/app/node_modules/restify/node_modules/semver/package.json
958 info preuninstall semver@1.1.4
959 silly gunzTarPerm extractEntry test/fixture/file/menu_separator.png
960 silly gunzTarPerm extractEntry test/fixture/file/plain.txt
961 info uninstall semver@1.1.4
962 silly gunzTarPerm extractEntry examples/function_call.js
963 silly gunzTarPerm extractEntry examples/randomized.js
964 verbose false,/home/vagrant/app/node_modules,/home/vagrant/app/node_modules/restify/node_modules unbuild semver@1.1.4
965 verbose /home/vagrant/app/node_modules/restify/node_modules/.bin,[object Object] binRoot
966 info preinstall lru-cache@2.3.0
967 silly gunzTarPerm extractEntry docs/bunyan.1
968 silly gunzTarPerm extractEntry docs/bunyan.1.html
969 verbose from cache /home/vagrant/app/node_modules/restify/node_modules/lru-cache/package.json
970 info postuninstall semver@1.1.4
971 verbose readDependencies using package.json deps
972 verbose from cache /home/vagrant/app/node_modules/restify/node_modules/lru-cache/package.json
973 verbose readDependencies using package.json deps
974 silly resolved []
975 verbose about to build /home/vagrant/app/node_modules/restify/node_modules/lru-cache
976 info build /home/vagrant/app/node_modules/restify/node_modules/lru-cache
977 verbose from cache /home/vagrant/app/node_modules/restify/node_modules/lru-cache/package.json
978 verbose linkStuff [ false,
978 verbose linkStuff   false,
978 verbose linkStuff   false,
978 verbose linkStuff   '/home/vagrant/app/node_modules/restify/node_modules' ]
979 info linkStuff lru-cache@2.3.0
980 verbose linkBins lru-cache@2.3.0
981 verbose linkMans lru-cache@2.3.0
982 verbose rebuildBundles lru-cache@2.3.0
983 info install lru-cache@2.3.0
984 info postinstall lru-cache@2.3.0
985 silly gunzTarPerm extractEntry docs/bunyan.1.ronn
986 verbose about to build /home/vagrant/app/node_modules/restify
987 info /home/vagrant/app/node_modules/restify unbuild
988 verbose from cache /home/vagrant/app/node_modules/restify/package.json
989 info preuninstall restify@2.6.0
990 silly gunzTarPerm extractEntry test/fixture/http/special-chars-in-filename/info.md
991 silly gunzTarPerm extractEntry test/fixture/js/encoding.js
992 info uninstall restify@2.6.0
993 verbose true,/home/vagrant/app/node_modules,/home/vagrant/app/node_modules unbuild restify@2.6.0
994 verbose /home/vagrant/app/node_modules/.bin,[object Object] binRoot
995 info postuninstall restify@2.6.0
996 silly gunzTarPerm extractEntry lib/spdy/protocol/v3/protocol.js
997 silly gunzTarPerm extractEntry test/benchmarks/syn.js
998 silly gunzTarPerm extractEntry examples/readme.js
999 silly gunzTarPerm extractEntry examples/reset.js
1000 silly gunzTarPerm extractEntry test/fixture/js/misc.js
1001 silly gunzTarPerm extractEntry test/fixture/js/no-filename.js
1002 verbose read json /home/vagrant/app/node_modules/restify/node_modules/node-uuid/package.json
1003 verbose read json /home/vagrant/app/node_modules/restify/node_modules/mime/package.json
1004 silly gunzTarPerm extractEntry .jshintrc
1005 silly gunzTarPerm extractEntry lib/backoff.js
1006 silly lockFile e1881a21-s-restify-node-modules-node-uuid /home/vagrant/app/node_modules/restify/node_modules/node-uuid
1007 silly lockFile e1881a21-s-restify-node-modules-node-uuid /home/vagrant/app/node_modules/restify/node_modules/node-uuid
1008 silly gunzTarPerm extractEntry test/fixture/js/preamble.js
1009 silly gunzTarPerm extractEntry test/fixture/js/special-chars-in-filename.js
1010 silly gunzTarPerm extractEntry test/fixtures/frames.js
1011 silly gunzTarPerm extractEntry test/fixtures/keys.js
1012 silly lockFile 92b19c40-odules-restify-node-modules-mime /home/vagrant/app/node_modules/restify/node_modules/mime
1013 silly lockFile 92b19c40-odules-restify-node-modules-mime /home/vagrant/app/node_modules/restify/node_modules/mime
1014 silly lockFile e8be4612--npm-node-uuid-1-4-0-package-tgz /home/vagrant/.npm/node-uuid/1.4.0/package.tgz
1015 silly lockFile e8be4612--npm-node-uuid-1-4-0-package-tgz /home/vagrant/.npm/node-uuid/1.4.0/package.tgz
1016 silly lockFile 19275dca-grant-npm-mime-1-2-9-package-tgz /home/vagrant/.npm/mime/1.2.9/package.tgz
1017 silly lockFile 19275dca-grant-npm-mime-1-2-9-package-tgz /home/vagrant/.npm/mime/1.2.9/package.tgz
1018 error Error: ENOENT, chmod '/home/vagrant/app/node_modules/restify/node_modules/backoff/examples/exponential.js'
1019 error If you need help, you may report this log at:
1019 error     <http://github.com/isaacs/npm/issues>
1019 error or email it to:
1019 error     <npm-@googlegroups.com>
1020 error System Linux 3.2.0-23-generic-pae
1021 error command "/usr/local/bin/node" "/usr/local/bin/npm" "install" "restify"
1022 error cwd /home/vagrant/app
1023 error node -v v0.10.0
1024 error npm -v 1.2.14
1025 error path /home/vagrant/app/node_modules/restify/node_modules/backoff/examples/exponential.js
1026 error fstream_path /home/vagrant/app/node_modules/restify/node_modules/backoff/examples/exponential.js
1027 error fstream_type File
1028 error fstream_class FileWriter
1029 error fstream_finish_call chmod
1030 error code ENOENT
1031 error errno 34
1032 error fstream_stack /opt/node-v0.10.0-linux-x86/lib/node_modules/npm/node_modules/fstream/lib/writer.js:305:19
1032 error fstream_stack Object.oncomplete (fs.js:93:15)
1033 verbose exit [ 34, true ]
